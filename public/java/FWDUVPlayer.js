if (function(t) {
    function r() {}
    r.dumy = document.createElement("div"), r.trim = function(e) {
        return e.replace(/\s/gi, "")
    }, r.trimAndFormatUrl = function(e) {
        return e = (e = e.toLocaleLowerCase()).replace(/ /g, "-")
    }, r.storArrayBasedOnObjectValue = function(e, t) {
        e.sort(function(o) {
            var s = 1;
            "-" === o[0] && (s = -1, o = o.substr(1));
            return function(e, t) {
                return (e[o] < t[o] ? -1 : e[o] > t[o] ? 1 : 0) * s
            }
        }(t))
    }, r.getCookie = function(e) {
        for (var t = e + "=", o = document.cookie.split(";"), s = 0; s < o.length; s++) {
            for (var i = o[s];
                " " == i.charAt(0);) i = i.substring(1, i.length);
            if (0 == i.indexOf(t)) return i.substring(t.length, i.length)
        }
        return null
    }, r.hexToRgb = function(e) {
        e = e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function(e, t, o, s) {
            return t + t + o + o + s + s
        });
        var t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
        return "rgb(" + (t = t ? {
            r: parseInt(t[1], 16),
            g: parseInt(t[2], 16),
            b: parseInt(t[3], 16)
        } : null).r + "," + t.g + "," + t.b + ")"
    }, r.splitAndTrim = function(e, t) {
        for (var o = e.split(","), s = o.length, i = 0; i < s; i++) t && (o[i] = r.trim(o[i]));
        return o
    }, r.checkTime = function(e) {
        return !!/^(?:2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/.test(e)
    }, r.formatTimeWithMiliseconds = function(e) {
        var t = 60 * parseInt(e.split(":")[0]) * 60 + 60 * parseInt(e.split(":")[1]) + parseInt(e.split(":")[2]) + parseInt(e.split(",")[1] || e.split(".")[1]) / 1e3;
        return t = Math.round(100 * t) / 100
    }, r.formatTime = function(e, t) {
        var o = Math.floor(e / 3600),
            s = e % 3600,
            i = Math.floor(s / 60),
            n = s % 60,
            l = Math.ceil(n);
        return i = 10 <= i ? i : "0" + i, l = 10 <= l ? l : "0" + l, isNaN(l) ? "00:00" : o || t ? "0" + o + ":" + i + ":" + l : i + ":" + l
    }, r.MD5 = function(e) {
        function a(e, t) {
            return e << t | e >>> 32 - t
        }

        function r(e, t) {
            var o, s, i, n, l;
            return i = 2147483648 & e, n = 2147483648 & t, l = (1073741823 & e) + (1073741823 & t), (o = 1073741824 & e) & (s = 1073741824 & t) ? 2147483648 ^ l ^ i ^ n : o | s ? 1073741824 & l ? 3221225472 ^ l ^ i ^ n : 1073741824 ^ l ^ i ^ n : l ^ i ^ n
        }

        function t(e, t, o, s, i, n, l) {
            return r(a(e = r(e, r(r(function(e, t, o) {
                return e & t | ~e & o
            }(t, o, s), i), l)), n), t)
        }

        function o(e, t, o, s, i, n, l) {
            return r(a(e = r(e, r(r(function(e, t, o) {
                return e & o | t & ~o
            }(t, o, s), i), l)), n), t)
        }

        function s(e, t, o, s, i, n, l) {
            return r(a(e = r(e, r(r(function(e, t, o) {
                return e ^ t ^ o
            }(t, o, s), i), l)), n), t)
        }

        function i(e, t, o, s, i, n, l) {
            return r(a(e = r(e, r(r(function(e, t, o) {
                return t ^ (e | ~o)
            }(t, o, s), i), l)), n), t)
        }

        function n(e) {
            var t, o = "",
                s = "";
            for (t = 0; t <= 3; t++) o += (s = "0" + (e >>> 8 * t & 255).toString(16)).substr(s.length - 2, 2);
            return o
        }
        var l, d, u, h, c, _, f, p, b, m = Array();
        for (m = function(e) {
                for (var t, o = e.length, s = o + 8, i = 16 * (1 + (s - s % 64) / 64), n = Array(i - 1), l = 0, a = 0; a < o;) l = a % 4 * 8, n[t = (a - a % 4) / 4] = n[t] | e.charCodeAt(a) << l, a++;
                return l = a % 4 * 8, n[t = (a - a % 4) / 4] = n[t] | 128 << l, n[i - 2] = o << 3, n[i - 1] = o >>> 29, n
            }(e = function(e) {
                e = e.replace(/\r\n/g, "\n");
                for (var t = "", o = 0; o < e.length; o++) {
                    var s = e.charCodeAt(o);
                    s < 128 ? t += String.fromCharCode(s) : (127 < s && s < 2048 ? t += String.fromCharCode(s >> 6 | 192) : (t += String.fromCharCode(s >> 12 | 224), t += String.fromCharCode(s >> 6 & 63 | 128)), t += String.fromCharCode(63 & s | 128))
                }
                return t
            }(e)), _ = 1732584193, f = 4023233417, p = 2562383102, b = 271733878, l = 0; l < m.length; l += 16) f = i(f = i(f = i(f = i(f = s(f = s(f = s(f = s(f = o(f = o(f = o(f = o(f = t(f = t(f = t(f = t(u = f, p = t(h = p, b = t(c = b, _ = t(d = _, f, p, b, m[l + 0], 7, 3614090360), f, p, m[l + 1], 12, 3905402710), _, f, m[l + 2], 17, 606105819), b, _, m[l + 3], 22, 3250441966), p = t(p, b = t(b, _ = t(_, f, p, b, m[l + 4], 7, 4118548399), f, p, m[l + 5], 12, 1200080426), _, f, m[l + 6], 17, 2821735955), b, _, m[l + 7], 22, 4249261313), p = t(p, b = t(b, _ = t(_, f, p, b, m[l + 8], 7, 1770035416), f, p, m[l + 9], 12, 2336552879), _, f, m[l + 10], 17, 4294925233), b, _, m[l + 11], 22, 2304563134), p = t(p, b = t(b, _ = t(_, f, p, b, m[l + 12], 7, 1804603682), f, p, m[l + 13], 12, 4254626195), _, f, m[l + 14], 17, 2792965006), b, _, m[l + 15], 22, 1236535329), p = o(p, b = o(b, _ = o(_, f, p, b, m[l + 1], 5, 4129170786), f, p, m[l + 6], 9, 3225465664), _, f, m[l + 11], 14, 643717713), b, _, m[l + 0], 20, 3921069994), p = o(p, b = o(b, _ = o(_, f, p, b, m[l + 5], 5, 3593408605), f, p, m[l + 10], 9, 38016083), _, f, m[l + 15], 14, 3634488961), b, _, m[l + 4], 20, 3889429448), p = o(p, b = o(b, _ = o(_, f, p, b, m[l + 9], 5, 568446438), f, p, m[l + 14], 9, 3275163606), _, f, m[l + 3], 14, 4107603335), b, _, m[l + 8], 20, 1163531501), p = o(p, b = o(b, _ = o(_, f, p, b, m[l + 13], 5, 2850285829), f, p, m[l + 2], 9, 4243563512), _, f, m[l + 7], 14, 1735328473), b, _, m[l + 12], 20, 2368359562), p = s(p, b = s(b, _ = s(_, f, p, b, m[l + 5], 4, 4294588738), f, p, m[l + 8], 11, 2272392833), _, f, m[l + 11], 16, 1839030562), b, _, m[l + 14], 23, 4259657740), p = s(p, b = s(b, _ = s(_, f, p, b, m[l + 1], 4, 2763975236), f, p, m[l + 4], 11, 1272893353), _, f, m[l + 7], 16, 4139469664), b, _, m[l + 10], 23, 3200236656), p = s(p, b = s(b, _ = s(_, f, p, b, m[l + 13], 4, 681279174), f, p, m[l + 0], 11, 3936430074), _, f, m[l + 3], 16, 3572445317), b, _, m[l + 6], 23, 76029189), p = s(p, b = s(b, _ = s(_, f, p, b, m[l + 9], 4, 3654602809), f, p, m[l + 12], 11, 3873151461), _, f, m[l + 15], 16, 530742520), b, _, m[l + 2], 23, 3299628645), p = i(p, b = i(b, _ = i(_, f, p, b, m[l + 0], 6, 4096336452), f, p, m[l + 7], 10, 1126891415), _, f, m[l + 14], 15, 2878612391), b, _, m[l + 5], 21, 4237533241), p = i(p, b = i(b, _ = i(_, f, p, b, m[l + 12], 6, 1700485571), f, p, m[l + 3], 10, 2399980690), _, f, m[l + 10], 15, 4293915773), b, _, m[l + 1], 21, 2240044497), p = i(p, b = i(b, _ = i(_, f, p, b, m[l + 8], 6, 1873313359), f, p, m[l + 15], 10, 4264355552), _, f, m[l + 6], 15, 2734768916), b, _, m[l + 13], 21, 1309151649), p = i(p, b = i(b, _ = i(_, f, p, b, m[l + 4], 6, 4149444226), f, p, m[l + 11], 10, 3174756917), _, f, m[l + 2], 15, 718787259), b, _, m[l + 9], 21, 3951481745), _ = r(_, d), f = r(f, u), p = r(p, h), b = r(b, c);
        return (n(_) + n(f) + n(p) + n(b)).toLowerCase()
    }, r.getSecondsFromString = function(e) {
        var t = 0,
            o = 0,
            s = 0;
        if (e) return "0" == (t = (e = e.split(":"))[0])[0] && "0" != t[1] && (t = parseInt(t[1])), "00" == t && (t = 0), "0" == (o = e[1])[0] && "0" != o[1] && (o = parseInt(o[1])), "00" == o && (o = 0), secs = parseInt(e[2].replace(/,.*/gi, "")), "0" == secs[0] && "0" != secs[1] && (secs = parseInt(secs[1])), "00" == secs && (secs = 0), 0 != t && (s += 60 * t * 60), 0 != o && (s += 60 * o), s += secs
    }, r.getCanvasWithModifiedColor = function(e, t, o, s, i) {
        if (e) {
            var n, l, a = document.createElement("canvas"),
                r = a.getContext("2d"),
                d = null,
                u = parseInt(t.replace(/^#/, ""), 16),
                h = u >>> 16 & 255,
                c = u >>> 8 & 255,
                _ = 255 & u;
            a.style.position = "absolute", a.style.left = "0px", a.style.top = "0px", a.style.margin = "0px", a.style.padding = "0px", a.style.maxWidth = "none", a.style.maxHeight = "none", a.style.border = "none", a.style.lineHeight = "1", a.style.backgroundColor = "transparent", a.style.backfaceVisibility = "hidden", a.style.webkitBackfaceVisibility = "hidden", a.style.MozBackfaceVisibility = "hidden", a.style.MozImageRendering = "optimizeSpeed", a.style.WebkitImageRendering = "optimizeSpeed", null == s && (s = e.width, i = e.height), a.width = s, a.height = i, r.drawImage(e, 0, 0, e.naturalWidth, e.naturalHeight, 0, 0, s, i), l = r.getImageData(0, 0, s, i), d = r.getImageData(0, 0, s, i);
            for (var f = 0, p = l.data.length; f < p; f += 4) 0 < d.data[f + 3] && (d.data[f] = l.data[f] / 255 * h, d.data[f + 1] = l.data[f + 1] / 255 * c, d.data[f + 2] = l.data[f + 2] / 255 * _);
            return r.globalAlpha = .5, r.putImageData(d, 0, 0), r.drawImage(a, 0, 0), o && ((n = new Image).src = a.toDataURL()), {
                canvas: a,
                image: n
            }
        }
    }, r.xmlToJson = function(e) {
        var t = {};
        if (1 == e.nodeType) {
            if (0 < e.attributes.length) {
                t["@attributes"] = {};
                for (var o = 0; o < e.attributes.length; o++) {
                    var s = e.attributes.item(o);
                    t["@attributes"][s.nodeName] = s.nodeValue
                }
            }
        } else 3 == e.nodeType ? t = e.nodeValue.trim() : 4 == e.nodeType && (t = e.nodeValue);
        if (e.hasChildNodes())
            for (var i = 0; i < e.childNodes.length; i++) {
                var n = e.childNodes.item(i),
                    l = n.nodeName;
                if (void 0 === t[l]) t[l] = r.xmlToJson(n);
                else {
                    if (void 0 === t[l].length) {
                        var a = t[l];
                        t[l] = [], t[l].push(a)
                    }
                    "object" == typeof t[l] && t[l].push(r.xmlToJson(n))
                }
            }
        return t
    }, r.isURLEncoded = function(e) {
        try {
            if (decodeURIComponent(e) != e && -1 != e.indexOf("%")) return !0
        } catch (e) {}
        return !1
    }, r.getValidSource = function(e) {
        if (e) {
            var t = "null" == location.origin ? "" : location.origin,
                o = location.pathname; - 1 != o.indexOf(".") && (o = o.substr(0, o.lastIndexOf("/") + 1)), -1 == e.indexOf("http:") && -1 == e.indexOf("https:") && (e = t + o + e);
            var s = encodeURI(e.substr(0, e.lastIndexOf("/") + 1)),
                i = e.substr(e.lastIndexOf("/") + 1);
            return e = s + (i = e.match(/\.mp3|\.mp4|\.m3u8|\.txt|\.srt|\.vtt|\.jpg|\.jpeg|\.png/gi) && !e.match(/\.s3|\drive./gi) ? r.isURLEncoded(i) ? e.substr(e.lastIndexOf("/") + 1) : encodeURIComponent(e.substr(e.lastIndexOf("/") + 1)) : e.substr(e.lastIndexOf("/") + 1))
        }
    }, r.changeCanvasHEXColor = function(e, t, o, s, i, n) {
        if (e) {
            var l, a = (t = t).getContext("2d"),
                r = null,
                d = parseInt(o.replace(/^#/, ""), 16),
                u = d >>> 16 & 255,
                h = d >>> 8 & 255,
                c = 255 & d;
            i || (i = e.width, n = e.height), t.width = i, t.height = n, a.drawImage(e, 0, 0, e.naturalWidth, e.naturalHeight, 0, 0, i, n), l = a.getImageData(0, 0, i, n), r = a.getImageData(0, 0, i, n);
            for (var _ = 0, f = l.data.length; _ < f; _ += 4) 0 < r.data[_ + 3] && (r.data[_] = l.data[_] / 255 * u, r.data[_ + 1] = l.data[_ + 1] / 255 * h, r.data[_ + 2] = l.data[_ + 2] / 255 * c);
            if (a.globalAlpha = .5, a.putImageData(r, 0, 0), a.drawImage(t, 0, 0), s) {
                var p = new Image;
                return p.src = t.toDataURL(), p
            }
        }
    }, r.indexOfArray = function(e, t) {
        for (var o = e.length, s = 0; s < o; s++)
            if (e[s] === t) return s;
        return -1
    }, r.randomizeArray = function(e) {
        for (var t = [], o = e.concat(), s = o.length, i = 0; i < s; i++) {
            var n = Math.floor(Math.random() * o.length);
            t.push(o[n]), o.splice(n, 1)
        }
        return t
    }, r.parent = function(e, t) {
        for (void 0 === t && (t = 1); t-- && e;) e = e.parentNode;
        return e && 1 === e.nodeType ? e : null
    }, r.sibling = function(e, t) {
        for (; e && 0 !== t;)
            if (0 < t) {
                if (e.nextElementSibling) e = e.nextElementSibling;
                else
                    for (e = e.nextSibling; e && 1 !== e.nodeType; e = e.nextSibling);
                t--
            } else {
                if (e.previousElementSibling) e = e.previousElementSibling;
                else
                    for (e = e.previousSibling; e && 1 !== e.nodeType; e = e.previousSibling);
                t++
            }
        return e
    }, r.getChildAt = function(e, t) {
        var o = r.getChildren(e);
        return t < 0 && (t += o.length), t < 0 ? null : o[t]
    }, r.getChildById = function(e) {
        return document.getElementById(e) || void 0
    }, r.getChildren = function(e, t) {
        for (var o = [], s = e.firstChild; null != s; s = s.nextSibling) t ? o.push(s) : 1 === s.nodeType && o.push(s);
        return o
    }, r.getChildrenFromAttribute = function(e, t, o) {
        for (var s = [], i = e.firstChild; null != i; i = i.nextSibling) o && r.hasAttribute(i, t) ? s.push(i) : 1 === i.nodeType && r.hasAttribute(i, t) && s.push(i);
        return 0 == s.length ? void 0 : s
    }, r.getChildFromNodeListFromAttribute = function(e, t, o) {
        for (var s = e.firstChild; null != s; s = s.nextSibling) {
            if (o && r.hasAttribute(s, t)) return s;
            if (1 === s.nodeType && r.hasAttribute(s, t)) return s
        }
    }, r.getAttributeValue = function(e, t) {
        if (r.hasAttribute(e, t)) return e.getAttribute(t)
    }, r.hasAttribute = function(e, t) {
        return e.hasAttribute ? e.hasAttribute(t) : !!e.attributes[t]
    }, r.insertNodeAt = function(e, t, o) {
        var s = r.children(e);
        if (o < 0 || o > s.length) throw new Error("invalid index!");
        e.insertBefore(t, s[o])
    }, r.hasCanvas = function() {
        return Boolean(document.createElement("canvas"))
    }, r.hitTest = function(e, t, o) {
        if (!e) throw Error("Hit test target is null!");
        var s = e.getBoundingClientRect();
        return t >= parseInt(s.left) && t <= parseInt(s.left + (s.right - s.left)) && o >= parseInt(s.top) && o <= parseInt(s.top + (s.bottom - s.top))
    }, r.hitBuggyTest = function(e, t, o) {
        if (!e) throw Error("Hit test target is null!");
        e.getBoundingClientRect();
        return !1
    }, r.hasWEBGL = function() {
        try {
            var e = document.createElement("canvas");
            return !!t.WebGLRenderingContext && (e.getContext("webgl") || e.getContext("experimental-webgl"))
        } catch (e) {
            return !1
        }
    }(), r.isLocal = "file:" == document.location.protocol, r.getScrollOffsets = function() {
        return null != t.pageXOffset ? {
            x: t.pageXOffset,
            y: t.pageYOffset
        } : "CSS1Compat" == document.compatMode ? {
            x: document.documentElement.scrollLeft,
            y: document.documentElement.scrollTop
        } : void 0
    }, r.getViewportSize = function() {
        return r.hasPointerEvent && 1 < navigator.msMaxTouchPoints ? {
            w: document.documentElement.clientWidth || t.innerWidth,
            h: document.documentElement.clientHeight || t.innerHeight
        } : r.isMobile ? {
            w: t.innerWidth,
            h: t.innerHeight
        } : {
            w: document.documentElement.clientWidth || t.innerWidth,
            h: document.documentElement.clientHeight || t.innerHeight
        }
    }, r.getViewportMouseCoordinates = function(e) {
        var t = r.getScrollOffsets();
        return e.touches ? {
            screenX: null == e.touches[0] ? e.touches.pageX - t.x : e.touches[0].pageX - t.x,
            screenY: null == e.touches[0] ? e.touches.pageY - t.y : e.touches[0].pageY - t.y
        } : {
            screenX: null == e.clientX ? e.pageX - t.x : e.clientX,
            screenY: null == e.clientY ? e.pageY - t.y : e.clientY
        }
    }, r.hasPointerEvent = Boolean(t.navigator.msPointerEnabled) || Boolean(t.navigator.pointerEnabled), r.isMobile = function() {
        var e = ["android", "webos", "iphone", "ipad", "blackberry", "kfsowi"];
        for (i in e)
            if (-1 != navigator.userAgent.toLowerCase().indexOf(String(e[i]).toLowerCase())) return !0;
        return !1
    }(), r.isIE = Boolean(-1 != navigator.userAgent.toLowerCase().indexOf("msie")) || Boolean(-1 != navigator.userAgent.toLowerCase().indexOf("edge")) || Boolean(document.documentElement.msRequestFullscreen), r.isAndroid = -1 != navigator.userAgent.toLowerCase().indexOf("android".toLowerCase()), r.isChrome = function() {
        if (!r.isIE) return -1 != navigator.userAgent.toLowerCase().indexOf("chrome")
    }(), r.isSafari = -1 != navigator.userAgent.toLowerCase().indexOf("safari") && -1 == navigator.userAgent.toLowerCase().indexOf("chrome"), r.isOpera = -1 != navigator.userAgent.toLowerCase().indexOf("opr"), r.isFirefox = -1 != navigator.userAgent.toLowerCase().indexOf("firefox"), r.isIEWebKit = Boolean(document.documentElement.msRequestFullscreen), r.isIEAndLessThen9 = Boolean(-1 != navigator.userAgent.toLowerCase().indexOf("msie 7")) || Boolean(-1 != navigator.userAgent.toLowerCase().indexOf("msie 8")), r.isIEAnd9OrLess = Boolean(-1 != navigator.userAgent.toLowerCase().indexOf("msie 7")) || Boolean(-1 != navigator.userAgent.toLowerCase().indexOf("msie 8")) || Boolean(-1 != navigator.userAgent.toLowerCase().indexOf("msie 9")), r.isIE7 = Boolean(-1 != navigator.userAgent.toLowerCase().indexOf("msie 7")), r.isMac = Boolean(-1 != navigator.appVersion.toLowerCase().indexOf("mac")), r.isWin = Boolean(-1 != navigator.appVersion.toLowerCase().indexOf("win")), r.isIOS = navigator.userAgent.match(/(iPad|iPhone|iPod)/g), r.isIphone = navigator.userAgent.match(/(iPhone|iPod)/g), r.hasFullScreen = r.dumy.requestFullScreen || r.dumy.mozRequestFullScreen || r.dumy.webkitRequestFullScreen || r.dumy.msieRequestFullScreen, r.volumeCanBeSet = function() {
        var e = document.createElement("audio");
        if (e) return (e.volume = 0) == e.volume
    }(), r.getVideoFormat = function() {
        var e, t = document.createElement("video");
        if (t.canPlayType) return "probably" == t.canPlayType("video/mp4") || "maybe" == t.canPlayType("video/mp4") ? e = ".mp4" : "probably" == t.canPlayType("video/ogg") || "maybe" == t.canPlayType("video/ogg") ? e = ".ogg" : "probably" != t.canPlayType("video/webm") && "maybe" != t.canPlayType("video/webm") || (e = ".webm"), t = null, e
    }(), r.onReady = function(e) {
        document.addEventListener ? t.addEventListener("DOMContentLoaded", function() {
            r.checkIfHasTransofrms(), r.hasFullScreen = r.checkIfHasFullscreen(), setTimeout(e, 100)
        }) : document.onreadystatechange = function() {
            r.checkIfHasTransofrms(), r.hasFullScreen = r.checkIfHasFullscreen(), "complete" == document.readyState && setTimeout(e, 100)
        }
    }, r.checkIfHasTransofrms = function() {
        document.documentElement.appendChild(r.dumy), r.hasTransform3d = function() {
            for (var e, t, o = ["transform", "msTransform", "WebkitTransform", "MozTransform", "OTransform", "KhtmlTransform"]; e = o.shift();)
                if (void 0 !== r.dumy.style[e] && (r.dumy.style.position = "absolute", t = r.dumy.getBoundingClientRect().left, r.dumy.style[e] = "translate3d(500px, 0px, 0px)", 100 < (t = Math.abs(r.dumy.getBoundingClientRect().left - t)) && t < 900)) {
                    try {
                        document.documentElement.removeChild(r.dumy)
                    } catch (e) {}
                    return !0
                }
            try {
                document.documentElement.removeChild(r.dumy)
            } catch (e) {}
            return !1
        }(), r.hasTransform2d = function() {
            for (var e, t = ["transform", "msTransform", "WebkitTransform", "MozTransform", "OTransform", "KhtmlTransform"]; e = t.shift();)
                if (void 0 !== r.dumy.style[e]) return !0;
            try {
                document.documentElement.removeChild(r.dumy)
            } catch (e) {}
            return !1
        }(), r.isReadyMethodCalled_bl = !0
    }, r.checkIfHasFullscreen = function() {
        return Boolean(document.documentElement.requestFullScreen || document.documentElement.mozRequestFullScreen || document.documentElement.webkitRequestFullScreen || document.documentElement.msRequestFullscreen)
    }, r.disableElementSelection = function(e) {
        try {
            e.style.userSelect = "none"
        } catch (e) {}
        try {
            e.style.MozUserSelect = "none"
        } catch (e) {}
        try {
            e.style.webkitUserSelect = "none"
        } catch (e) {}
        try {
            e.style.khtmlUserSelect = "none"
        } catch (e) {}
        try {
            e.style.oUserSelect = "none"
        } catch (e) {}
        try {
            e.style.msUserSelect = "none"
        } catch (e) {}
        try {
            e.msUserSelect = "none"
        } catch (e) {}
        e.onselectstart = function() {
            return !1
        }
    }, r.getUrlArgs = function(e) {
        for (var t = {}, o = e.substr(e.indexOf("?") + 1) || location.search.substring(1), s = (o = o.replace(/(\?*)(\/*)/g, "")).split("&"), i = 0; i < s.length; i++) {
            var n = s[i].indexOf("="),
                l = s[i].substring(0, n),
                a = s[i].substring(n + 1);
            a = decodeURIComponent(a), t[l] = a
        }
        return t
    }, r.getHashUrlArgs = function(e) {
        for (var t = {}, o = e.substr(e.indexOf("#") + 1) || location.search.substring(1), s = (o = o.replace(/(\?*)(\/*)/g, "")).split("&"), i = 0; i < s.length; i++) {
            var n = s[i].indexOf("="),
                l = s[i].substring(0, n),
                a = s[i].substring(n + 1);
            a = decodeURIComponent(a), t[l] = a
        }
        return t
    }, r.validateEmail = function(e) {
        return !!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(e)
    }, r.isReadyMethodCalled_bl = !1, t.FWDUVPUtils = r
}(window), !window.FWDAnimation) {
var _fwd_gsScope = "undefined" != typeof fwd_module && fwd_module.exports && "undefined" != typeof fwd_global ? fwd_global : this || window;
(_fwd_gsScope._fwd_gsQueue || (_fwd_gsScope._fwd_gsQueue = [])).push(function() {
        "use strict";

        function g(e, t, o, s) {
            o === s && (o = s - (s - t) / 1e6), e === t && (t = e + (o - e) / 1e6), this.a = e, this.b = t, this.c = o, this.d = s, this.da = s - e, this.ca = o - e, this.ba = t - e
        }

        function S(e, t, o, s) {
            var i = {
                    a: e
                },
                n = {},
                l = {},
                a = {
                    c: s
                },
                r = (e + t) / 2,
                d = (t + o) / 2,
                u = (o + s) / 2,
                h = (r + d) / 2,
                c = (d + u) / 2,
                _ = (c - h) / 8;
            return i.b = r + (e - r) / 4, n.b = h + _, i.c = n.a = (i.b + n.b) / 2, n.c = l.a = (h + c) / 2, l.b = c - _, a.b = u + (s - u) / 4, l.c = a.a = (l.b + a.b) / 2, [i, n, l, a]
        }

        function m(e, t, o, s, i) {
            var n, l, a, r, d, u, h, c, _, f, p, b, m, g = e.length - 1,
                y = 0,
                v = e[0].a;
            for (n = 0; n < g; n++) l = (d = e[y]).a, a = d.d, r = e[y + 1].d, c = i ? (p = P[n], m = ((b = T[n]) + p) * t * .25 / (s ? .5 : B[n] || .5), a - ((u = a - (a - l) * (s ? .5 * t : 0 !== p ? m / p : 0)) + (((h = a + (r - a) * (s ? .5 * t : 0 !== b ? m / b : 0)) - u) * (3 * p / (p + b) + .5) / 4 || 0))) : a - ((u = a - (a - l) * t * .5) + (h = a + (r - a) * t * .5)) / 2, u += c, h += c, d.c = _ = u, d.b = 0 !== n ? v : v = d.a + .6 * (d.c - d.a), d.da = a - l, d.ca = _ - l, d.ba = v - l, o ? (f = S(l, v, _, a), e.splice(y, 1, f[0], f[1], f[2], f[3]), y += 4) : y++, v = h;
            (d = e[y]).b = v, d.c = v + .4 * (d.d - v), d.da = d.d - d.a, d.ca = d.c - d.a, d.ba = v - d.a, o && (f = S(d.a, v, d.c, d.d), e.splice(y, 1, f[0], f[1], f[2], f[3]))
        }

        function y(e, t, o, s) {
            var i, n, l, a, r, d, u = [];
            if (s)
                for (n = (e = [s].concat(e)).length; - 1 < --n;) "string" == typeof(d = e[n][t]) && "=" === d.charAt(1) && (e[n][t] = s[t] + Number(d.charAt(0) + d.substr(2)));
            if ((i = e.length - 2) < 0) return u[0] = new g(e[0][t], 0, 0, e[i < -1 ? 0 : 1][t]), u;
            for (n = 0; n < i; n++) l = e[n][t], a = e[n + 1][t], u[n] = new g(l, 0, 0, a), o && (r = e[n + 2][t], P[n] = (P[n] || 0) + (a - l) * (a - l), T[n] = (T[n] || 0) + (r - a) * (r - a));
            return u[n] = new g(e[n][t], 0, 0, e[n + 1][t]), u
        }

        function _(e, t, o, s, i, n) {
            var l, a, r, d, u, h, c, _, f = {},
                p = [],
                b = n || e[0];
            for (a in i = "string" == typeof i ? "," + i + "," : ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,", null == t && (t = 1), e[0]) p.push(a);
            if (1 < e.length) {
                for (_ = e[e.length - 1], c = !0, l = p.length; - 1 < --l;)
                    if (a = p[l], .05 < Math.abs(b[a] - _[a])) {
                        c = !1;
                        break
                    }
                c && (e = e.concat(), n && e.unshift(n), e.push(e[1]), n = e[e.length - 3])
            }
            for (P.length = T.length = B.length = 0, l = p.length; - 1 < --l;) a = p[l], v[a] = -1 !== i.indexOf("," + a + ","), f[a] = y(e, a, v[a], n);
            for (l = P.length; - 1 < --l;) P[l] = Math.sqrt(P[l]), T[l] = Math.sqrt(T[l]);
            if (!s) {
                for (l = p.length; - 1 < --l;)
                    if (v[a])
                        for (h = (r = f[p[l]]).length - 1, d = 0; d < h; d++) u = r[d + 1].da / T[d] + r[d].da / P[d] || 0, B[d] = (B[d] || 0) + u * u;
                for (l = B.length; - 1 < --l;) B[l] = Math.sqrt(B[l])
            }
            for (l = p.length, d = o ? 4 : 1; - 1 < --l;) r = f[a = p[l]], m(r, t, o, s, v[a]), c && (r.splice(0, d), r.splice(r.length - d, d));
            return f
        }

        function f(e, t, o) {
            for (var s, i, n, l, a, r, d, u, h, c, _, f = 1 / o, p = e.length; - 1 < --p;)
                for (n = (c = e[p]).a, l = c.d - n, a = c.c - n, r = c.b - n, s = i = 0, u = 1; u <= o; u++) s = i - (i = ((d = f * u) * d * l + 3 * (h = 1 - d) * (d * a + h * r)) * d), t[_ = p * o + u - 1] = (t[_] || 0) + s * s
        }
        var w, P, T, B, v, o, b, e, t, s;

        function r(e) {
            for (; e;) e.f || e.blob || (e.m = Math.round), e = e._next
        }
        _fwd_gsScope.FWDFWD_gsDefine("FWDAnimation", ["core.FWDAnim", "core.FWDSimpleTimeline", "FWDTweenLite"], function(s, u, b) {
            function m(e) {
                var t, o = [],
                    s = e.length;
                for (t = 0; t !== s; o.push(e[t++]));
                return o
            }

            function g(e, t, o) {
                var s, i, n = e.cycle;
                for (s in n) i = n[s], e[s] = "function" == typeof i ? i(o, t[o]) : i[o % i.length];
                delete e.cycle
            }
            var y = function(e, t, o) {
                    b.call(this, e, t, o), this._cycle = 0, this._yoyo = !0 === this.vars.yoyo, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._dirty = !0, this.render = y.prototype.render
                },
                v = 1e-10,
                S = b._internals,
                P = S.isSelector,
                w = S.isArray,
                e = y.prototype = b.to({}, .1, {}),
                T = [];
            y.version = "1.19.0", e.constructor = y, e.kill()._gc = !1, y.killTweensOf = y.killDelayedCallsTo = b.killTweensOf, y.getTweensOf = b.getTweensOf, y.lagSmoothing = b.lagSmoothing, y.ticker = b.ticker, y.render = b.render, e.invalidate = function() {
                return this._yoyo = !0 === this.vars.yoyo, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), b.prototype.invalidate.call(this)
            }, e.updateTo = function(e, t) {
                var o, s = this.ratio,
                    i = this.vars.immediateRender || e.immediateRender;
                for (o in t && this._startTime < this._timeline._time && (this._startTime = this._timeline._time, this._uncache(!1), this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay)), e) this.vars[o] = e[o];
                if (this._initted || i)
                    if (t) this._initted = !1, i && this.render(0, !0, !0);
                    else if (this._gc && this._enabled(!0, !1), this._notifyPluginsOfEnabled && this._firstPT && b._onPluginEvent("_onDisable", this), .998 < this._time / this._duration) {
                    var n = this._totalTime;
                    this.render(0, !0, !1), this._initted = !1, this.render(n, !0, !1)
                } else if (this._initted = !1, this._init(), 0 < this._time || i)
                    for (var l, a = 1 / (1 - s), r = this._firstPT; r;) l = r.s + r.c, r.c *= a, r.s = l - r.c, r = r._next;
                return this
            }, e.render = function(e, t, o) {
                this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                var s, i, n, l, a, r, d, u, h = this._dirty ? this.totalDuration() : this._totalDuration,
                    c = this._time,
                    _ = this._totalTime,
                    f = this._cycle,
                    p = this._duration,
                    b = this._rawPrevTime;
                if (h - 1e-7 <= e ? (this._totalTime = h, this._cycle = this._repeat, this._yoyo && 0 != (1 & this._cycle) ? (this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = p, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1), this._reversed || (s = !0, i = "onComplete", o = o || this._timeline.autoRemoveChildren), 0 === p && (!this._initted && this.vars.lazy && !o || (this._startTime === this._timeline._duration && (e = 0), (b < 0 || e <= 0 && -1e-7 <= e || b === v && "isPause" !== this.data) && b !== e && (o = !0, v < b && (i = "onReverseComplete")), this._rawPrevTime = u = !t || e || b === e ? e : v))) : e < 1e-7 ? (this._totalTime = this._time = this._cycle = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== _ || 0 === p && 0 < b) && (i = "onReverseComplete", s = this._reversed), e < 0 && (this._active = !1, 0 === p && (!this._initted && this.vars.lazy && !o || (0 <= b && (o = !0), this._rawPrevTime = u = !t || e || b === e ? e : v))), this._initted || (o = !0)) : (this._totalTime = this._time = e, 0 !== this._repeat && (l = p + this._repeatDelay, this._cycle = this._totalTime / l >> 0, 0 !== this._cycle && this._cycle === this._totalTime / l && _ <= e && this._cycle--, this._time = this._totalTime - this._cycle * l, this._yoyo && 0 != (1 & this._cycle) && (this._time = p - this._time), this._time > p ? this._time = p : this._time < 0 && (this._time = 0)), this._easeType ? (a = this._time / p, (1 === (r = this._easeType) || 3 === r && .5 <= a) && (a = 1 - a), 3 === r && (a *= 2), 1 === (d = this._easePower) ? a *= a : 2 === d ? a *= a * a : 3 === d ? a *= a * a * a : 4 === d && (a *= a * a * a * a), 1 === r ? this.ratio = 1 - a : 2 === r ? this.ratio = a : this._time / p < .5 ? this.ratio = a / 2 : this.ratio = 1 - a / 2) : this.ratio = this._ease.getRatio(this._time / p)), c !== this._time || o || f !== this._cycle) {
                    if (!this._initted) {
                        if (this._init(), !this._initted || this._gc) return;
                        if (!o && this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration)) return this._time = c, this._totalTime = _, this._rawPrevTime = b, this._cycle = f, S.lazyTweens.push(this), void(this._lazy = [e, t]);
                        this._time && !s ? this.ratio = this._ease.getRatio(this._time / p) : s && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                    }
                    for (!1 !== this._lazy && (this._lazy = !1), this._active || !this._paused && this._time !== c && 0 <= e && (this._active = !0), 0 === _ && (2 === this._initted && 0 < e && this._init(), this._startAt && (0 <= e ? this._startAt.render(e, t, o) : i || (i = "_dummyGS")), this.vars.onStart && (0 === this._totalTime && 0 !== p || t || this._callback("onStart"))), n = this._firstPT; n;) {
                        if (n.f) n.t[n.p](n.c * this.ratio + n.s);
                        else {
                            var m = n.c * this.ratio + n.s;
                            "x" == n.p ? n.t.setX(m) : "y" == n.p ? n.t.setY(m) : "z" == n.p ? n.t.setZ(m) : "angleX" == n.p ? n.t.setAngleX(m) : "angleY" == n.p ? n.t.setAngleY(m) : "angleZ" == n.p ? n.t.setAngleZ(m) : "w" == n.p ? n.t.setWidth(m) : "h" == n.p ? n.t.setHeight(m) : "alpha" == n.p ? n.t.setAlpha(m) : "scale" == n.p ? n.t.setScale2(m) : n.t[n.p] = m
                        }
                        n = n._next
                    }
                    this._onUpdate && (e < 0 && this._startAt && this._startTime && this._startAt.render(e, t, o), t || this._totalTime === _ && !i || this._callback("onUpdate")), this._cycle !== f && (t || this._gc || this.vars.onRepeat && this._callback("onRepeat")), i && (this._gc && !o || (e < 0 && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(e, t, o), s && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !t && this.vars[i] && this._callback(i), 0 === p && this._rawPrevTime === v && u !== v && (this._rawPrevTime = 0)))
                } else _ !== this._totalTime && this._onUpdate && (t || this._callback("onUpdate"))
            }, y.to = function(e, t, o) {
                return new y(e, t, o)
            }, y.from = function(e, t, o) {
                return o.runBackwards = !0, o.immediateRender = 0 != o.immediateRender, new y(e, t, o)
            }, y.fromTo = function(e, t, o, s) {
                return s.startAt = o, s.immediateRender = 0 != s.immediateRender && 0 != o.immediateRender, new y(e, t, s)
            }, y.staggerTo = y.allTo = function(e, t, o, s, i, n, l) {
                s = s || 0;

                function a() {
                    o.onComplete && o.onComplete.apply(o.onCompleteScope || this, arguments), i.apply(l || o.callbackScope || this, n || T)
                }
                var r, d, u, h, c = 0,
                    _ = [],
                    f = o.cycle,
                    p = o.startAt && o.startAt.cycle;
                for (w(e) || ("string" == typeof e && (e = b.selector(e) || e), P(e) && (e = m(e))), e = e || [], s < 0 && ((e = m(e)).reverse(), s *= -1), r = e.length - 1, u = 0; u <= r; u++) {
                    for (h in d = {}, o) d[h] = o[h];
                    if (f && (g(d, e, u), null != d.duration && (t = d.duration, delete d.duration)), p) {
                        for (h in p = d.startAt = {}, o.startAt) p[h] = o.startAt[h];
                        g(d.startAt, e, u)
                    }
                    d.delay = c + (d.delay || 0), u === r && i && (d.onComplete = a), _[u] = new y(e[u], t, d), c += s
                }
                return _
            }, y.staggerFrom = y.allFrom = function(e, t, o, s, i, n, l) {
                return o.runBackwards = !0, o.immediateRender = 0 != o.immediateRender, y.staggerTo(e, t, o, s, i, n, l)
            }, y.staggerFromTo = y.allFromTo = function(e, t, o, s, i, n, l, a) {
                return s.startAt = o, s.immediateRender = 0 != s.immediateRender && 0 != o.immediateRender, y.staggerTo(e, t, s, i, n, l, a)
            }, y.delayedCall = function(e, t, o, s, i) {
                return new y(t, 0, {
                    delay: e,
                    onComplete: t,
                    onCompleteParams: o,
                    callbackScope: s,
                    onReverseComplete: t,
                    onReverseCompleteParams: o,
                    immediateRender: !1,
                    useFrames: i,
                    overwrite: 0
                })
            }, y.set = function(e, t) {
                return new y(e, 0, t)
            }, y.isTweening = function(e) {
                return 0 < b.getTweensOf(e, !0).length
            };
            var n = function(e, t) {
                    for (var o = [], s = 0, i = e._first; i;) i instanceof b ? o[s++] = i : (t && (o[s++] = i), s = (o = o.concat(n(i, t))).length), i = i._next;
                    return o
                },
                h = y.getAllTweens = function(e) {
                    return n(s._rootTimeline, e).concat(n(s._rootFramesTimeline, e))
                };
            y.killAll = function(e, t, o, s) {
                null == t && (t = !0), null == o && (o = !0);
                var i, n, l, a = h(0 != s),
                    r = a.length,
                    d = t && o && s;
                for (l = 0; l < r; l++) n = a[l], (d || n instanceof u || (i = n.target === n.vars.onComplete) && o || t && !i) && (e ? n.totalTime(n._reversed ? 0 : n.totalDuration()) : n._enabled(!1, !1))
            }, y.killChildTweensOf = function(e, t) {
                if (null != e) {
                    var o, s, i, n, l, a = S.tweenLookup;
                    if ("string" == typeof e && (e = b.selector(e) || e), P(e) && (e = m(e)), w(e))
                        for (n = e.length; - 1 < --n;) y.killChildTweensOf(e[n], t);
                    else {
                        for (i in o = [], a)
                            for (s = a[i].target.parentNode; s;) s === e && (o = o.concat(a[i].tweens)), s = s.parentNode;
                        for (l = o.length, n = 0; n < l; n++) t && o[n].totalTime(o[n].totalDuration()), o[n]._enabled(!1, !1)
                    }
                }
            };

            function i(e, t, o, s) {
                t = !1 !== t, o = !1 !== o;
                for (var i, n, l = h(s = !1 !== s), a = t && o && s, r = l.length; - 1 < --r;) n = l[r], (a || n instanceof u || (i = n.target === n.vars.onComplete) && o || t && !i) && n.paused(e)
            }
            return y.pauseAll = function(e, t, o) {
                i(!0, e, t, o)
            }, y.resumeAll = function(e, t, o) {
                i(!1, e, t, o)
            }, y.globalTimeScale = function(e) {
                var t = s._rootTimeline,
                    o = b.ticker.time;
                return arguments.length ? (e = e || v, t._startTime = o - (o - t._startTime) * t._timeScale / e, t = s._rootFramesTimeline, o = b.ticker.frame, t._startTime = o - (o - t._startTime) * t._timeScale / e, t._timeScale = s._rootTimeline._timeScale = e, e) : t._timeScale
            }, e.progress = function(e, t) {
                return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - e : e) + this._cycle * (this._duration + this._repeatDelay), t) : this._time / this.duration()
            }, e.totalProgress = function(e, t) {
                return arguments.length ? this.totalTime(this.totalDuration() * e, t) : this._totalTime / this.totalDuration()
            }, e.time = function(e, t) {
                return arguments.length ? (this._dirty && this.totalDuration(), e > this._duration && (e = this._duration), this._yoyo && 0 != (1 & this._cycle) ? e = this._duration - e + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (e += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(e, t)) : this._time
            }, e.duration = function(e) {
                return arguments.length ? s.prototype.duration.call(this, e) : this._duration
            }, e.totalDuration = function(e) {
                return arguments.length ? -1 === this._repeat ? this : this.duration((e - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat, this._dirty = !1), this._totalDuration)
            }, e.repeat = function(e) {
                return arguments.length ? (this._repeat = e, this._uncache(!0)) : this._repeat
            }, e.repeatDelay = function(e) {
                return arguments.length ? (this._repeatDelay = e, this._uncache(!0)) : this._repeatDelay
            }, e.yoyo = function(e) {
                return arguments.length ? (this._yoyo = e, this) : this._yoyo
            }, y
        }, !0), _fwd_gsScope.FWDFWD_gsDefine("FWDTimelineLite", ["core.FWDAnim", "core.FWDSimpleTimeline", "FWDTweenLite"], function(u, h, c) {
            function _(e) {
                h.call(this, e), this._labels = {}, this.autoRemoveChildren = !0 === this.vars.autoRemoveChildren, this.smoothChildTiming = !0 === this.vars.smoothChildTiming, this._sortChildren = !0, this._onUpdate = this.vars.onUpdate;
                var t, o, s = this.vars;
                for (o in s) t = s[o], y(t) && -1 !== t.join("").indexOf("{self}") && (s[o] = this._swapSelfInParams(t));
                y(s.tweens) && this.add(s.tweens, 0, s.align, s.stagger)
            }

            function f(e) {
                var t, o = {};
                for (t in e) o[t] = e[t];
                return o
            }

            function p(e, t, o) {
                var s, i, n = e.cycle;
                for (s in n) i = n[s], e[s] = "function" == typeof i ? i.call(t[o], o) : i[o % i.length];
                delete e.cycle
            }

            function b(e) {
                var t, o = [],
                    s = e.length;
                for (t = 0; t !== s; o.push(e[t++]));
                return o
            }
            var m = 1e-10,
                e = c._internals,
                t = _._internals = {},
                g = e.isSelector,
                y = e.isArray,
                v = e.lazyTweens,
                S = e.lazyRender,
                l = _fwd_gsScope.FWDFWD_gsDefine.globals,
                n = t.pauseCallback = function() {},
                o = _.prototype = new h;
            return _.version = "1.19.0", o.constructor = _, o.kill()._gc = o._forcingPlayhead = o._hasPause = !1, o.to = function(e, t, o, s) {
                var i = o.repeat && l.FWDAnimation || c;
                return t ? this.add(new i(e, t, o), s) : this.set(e, o, s)
            }, o.from = function(e, t, o, s) {
                return this.add((o.repeat && l.FWDAnimation || c).from(e, t, o), s)
            }, o.fromTo = function(e, t, o, s, i) {
                var n = s.repeat && l.FWDAnimation || c;
                return t ? this.add(n.fromTo(e, t, o, s), i) : this.set(e, s, i)
            }, o.staggerTo = function(e, t, o, s, i, n, l, a) {
                var r, d, u = new _({
                        onComplete: n,
                        onCompleteParams: l,
                        callbackScope: a,
                        smoothChildTiming: this.smoothChildTiming
                    }),
                    h = o.cycle;
                for ("string" == typeof e && (e = c.selector(e) || e), g(e = e || []) && (e = b(e)), (s = s || 0) < 0 && ((e = b(e)).reverse(), s *= -1), d = 0; d < e.length; d++)(r = f(o)).startAt && (r.startAt = f(r.startAt), r.startAt.cycle && p(r.startAt, e, d)), h && (p(r, e, d), null != r.duration && (t = r.duration, delete r.duration)), u.to(e[d], t, r, d * s);
                return this.add(u, i)
            }, o.staggerFrom = function(e, t, o, s, i, n, l, a) {
                return o.immediateRender = 0 != o.immediateRender, o.runBackwards = !0, this.staggerTo(e, t, o, s, i, n, l, a)
            }, o.staggerFromTo = function(e, t, o, s, i, n, l, a, r) {
                return s.startAt = o, s.immediateRender = 0 != s.immediateRender && 0 != o.immediateRender, this.staggerTo(e, t, s, i, n, l, a, r)
            }, o.call = function(e, t, o, s) {
                return this.add(c.delayedCall(0, e, t, o), s)
            }, o.set = function(e, t, o) {
                return o = this._parseTimeOrLabel(o, 0, !0), null == t.immediateRender && (t.immediateRender = o === this._time && !this._paused), this.add(new c(e, 0, t), o)
            }, _.exportRoot = function(e, t) {
                null == (e = e || {}).smoothChildTiming && (e.smoothChildTiming = !0);
                var o, s, i = new _(e),
                    n = i._timeline;
                for (null == t && (t = !0), n._remove(i, !0), i._startTime = 0, i._rawPrevTime = i._time = i._totalTime = n._time, o = n._first; o;) s = o._next, t && o instanceof c && o.target === o.vars.onComplete || i.add(o, o._startTime - o._delay), o = s;
                return n.add(i, 0), i
            }, o.add = function(e, t, o, s) {
                var i, n, l, a, r, d;
                if ("number" != typeof t && (t = this._parseTimeOrLabel(t, 0, !0, e)), !(e instanceof u)) {
                    if (e instanceof Array || e && e.push && y(e)) {
                        for (o = o || "normal", s = s || 0, i = t, n = e.length, l = 0; l < n; l++) y(a = e[l]) && (a = new _({
                            tweens: a
                        })), this.add(a, i), "string" != typeof a && "function" != typeof a && ("sequence" === o ? i = a._startTime + a.totalDuration() / a._timeScale : "start" === o && (a._startTime -= a.delay())), i += s;
                        return this._uncache(!0)
                    }
                    if ("string" == typeof e) return this.addLabel(e, t);
                    if ("function" != typeof e) throw "Cannot add " + e + " into the timeline; it is not a tween, timeline, function, or string.";
                    e = c.delayedCall(0, e)
                }
                if (h.prototype.add.call(this, e, t), (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                    for (d = (r = this).rawTime() > e._startTime; r._timeline;) d && r._timeline.smoothChildTiming ? r.totalTime(r._totalTime, !0) : r._gc && r._enabled(!0, !1), r = r._timeline;
                return this
            }, o.remove = function(e) {
                if (e instanceof u) {
                    this._remove(e, !1);
                    var t = e._timeline = e.vars.useFrames ? u._rootFramesTimeline : u._rootTimeline;
                    return e._startTime = (e._paused ? e._pauseTime : t._time) - (e._reversed ? e.totalDuration() - e._totalTime : e._totalTime) / e._timeScale, this
                }
                if (e instanceof Array || e && e.push && y(e)) {
                    for (var o = e.length; - 1 < --o;) this.remove(e[o]);
                    return this
                }
                return "string" == typeof e ? this.removeLabel(e) : this.kill(null, e)
            }, o._remove = function(e, t) {
                h.prototype._remove.call(this, e, t);
                var o = this._last;
                return o ? this._time > o._startTime + o._totalDuration / o._timeScale && (this._time = this.duration(), this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0, this
            }, o.append = function(e, t) {
                return this.add(e, this._parseTimeOrLabel(null, t, !0, e))
            }, o.insert = o.insertMultiple = function(e, t, o, s) {
                return this.add(e, t || 0, o, s)
            }, o.appendMultiple = function(e, t, o, s) {
                return this.add(e, this._parseTimeOrLabel(null, t, !0, e), o, s)
            }, o.addLabel = function(e, t) {
                return this._labels[e] = this._parseTimeOrLabel(t), this
            }, o.addPause = function(e, t, o, s) {
                var i = c.delayedCall(0, n, o, s || this);
                return i.vars.onComplete = i.vars.onReverseComplete = t, i.data = "isPause", this._hasPause = !0, this.add(i, e)
            }, o.removeLabel = function(e) {
                return delete this._labels[e], this
            }, o.getLabelTime = function(e) {
                return null != this._labels[e] ? this._labels[e] : -1
            }, o._parseTimeOrLabel = function(e, t, o, s) {
                var i;
                if (s instanceof u && s.timeline === this) this.remove(s);
                else if (s && (s instanceof Array || s.push && y(s)))
                    for (i = s.length; - 1 < --i;) s[i] instanceof u && s[i].timeline === this && this.remove(s[i]);
                if ("string" == typeof t) return this._parseTimeOrLabel(t, o && "number" == typeof e && null == this._labels[t] ? e - this.duration() : 0, o);
                if (t = t || 0, "string" != typeof e || !isNaN(e) && null == this._labels[e]) null == e && (e = this.duration());
                else {
                    if (-1 === (i = e.indexOf("="))) return null == this._labels[e] ? o ? this._labels[e] = this.duration() + t : t : this._labels[e] + t;
                    t = parseInt(e.charAt(i - 1) + "1", 10) * Number(e.substr(i + 1)), e = 1 < i ? this._parseTimeOrLabel(e.substr(0, i - 1), 0, o) : this.duration()
                }
                return Number(e) + t
            }, o.seek = function(e, t) {
                return this.totalTime("number" == typeof e ? e : this._parseTimeOrLabel(e), !1 !== t)
            }, o.stop = function() {
                return this.paused(!0)
            }, o.gotoAndPlay = function(e, t) {
                return this.play(e, t)
            }, o.gotoAndStop = function(e, t) {
                return this.pause(e, t)
            }, o.render = function(e, t, o) {
                this._gc && this._enabled(!0, !1);
                var s, i, n, l, a, r, d, u = this._dirty ? this.totalDuration() : this._totalDuration,
                    h = this._time,
                    c = this._startTime,
                    _ = this._timeScale,
                    f = this._paused;
                if (u - 1e-7 <= e) this._totalTime = this._time = u, this._reversed || this._hasPausedChild() || (i = !0, l = "onComplete", a = !!this._timeline.autoRemoveChildren, 0 === this._duration && (e <= 0 && -1e-7 <= e || this._rawPrevTime < 0 || this._rawPrevTime === m) && this._rawPrevTime !== e && this._first && (a = !0, this._rawPrevTime > m && (l = "onReverseComplete"))), this._rawPrevTime = this._duration || !t || e || this._rawPrevTime === e ? e : m, e = u + 1e-4;
                else if (e < 1e-7)
                    if (this._totalTime = this._time = 0, (0 !== h || 0 === this._duration && this._rawPrevTime !== m && (0 < this._rawPrevTime || e < 0 && 0 <= this._rawPrevTime)) && (l = "onReverseComplete", i = this._reversed), e < 0) this._active = !1, this._timeline.autoRemoveChildren && this._reversed ? (a = i = !0, l = "onReverseComplete") : 0 <= this._rawPrevTime && this._first && (a = !0), this._rawPrevTime = e;
                    else {
                        if (this._rawPrevTime = this._duration || !t || e || this._rawPrevTime === e ? e : m, 0 === e && i)
                            for (s = this._first; s && 0 === s._startTime;) s._duration || (i = !1), s = s._next;
                        e = 0, this._initted || (a = !0)
                    } else {
                    if (this._hasPause && !this._forcingPlayhead && !t) {
                        if (h <= e)
                            for (s = this._first; s && s._startTime <= e && !r;) s._duration || "isPause" !== s.data || s.ratio || 0 === s._startTime && 0 === this._rawPrevTime || (r = s), s = s._next;
                        else
                            for (s = this._last; s && s._startTime >= e && !r;) s._duration || "isPause" === s.data && 0 < s._rawPrevTime && (r = s), s = s._prev;
                        r && (this._time = e = r._startTime, this._totalTime = e + this._cycle * (this._totalDuration + this._repeatDelay))
                    }
                    this._totalTime = this._time = this._rawPrevTime = e
                }
                if (this._time !== h && this._first || o || a || r) {
                    if (this._initted || (this._initted = !0), this._active || !this._paused && this._time !== h && 0 < e && (this._active = !0), 0 === h && this.vars.onStart && (0 === this._time && this._duration || t || this._callback("onStart")), h <= (d = this._time))
                        for (s = this._first; s && (n = s._next, d === this._time && (!this._paused || f));)(s._active || s._startTime <= d && !s._paused && !s._gc) && (r === s && this.pause(), s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (e - s._startTime) * s._timeScale, t, o) : s.render((e - s._startTime) * s._timeScale, t, o)), s = n;
                    else
                        for (s = this._last; s && (n = s._prev, d === this._time && (!this._paused || f));) {
                            if (s._active || s._startTime <= h && !s._paused && !s._gc) {
                                if (r === s) {
                                    for (r = s._prev; r && r.endTime() > this._time;) r.render(r._reversed ? r.totalDuration() - (e - r._startTime) * r._timeScale : (e - r._startTime) * r._timeScale, t, o), r = r._prev;
                                    r = null, this.pause()
                                }
                                s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (e - s._startTime) * s._timeScale, t, o) : s.render((e - s._startTime) * s._timeScale, t, o)
                            }
                            s = n
                        }
                    this._onUpdate && (t || (v.length && S(), this._callback("onUpdate"))), l && (this._gc || c !== this._startTime && _ === this._timeScale || (0 === this._time || u >= this.totalDuration()) && (i && (v.length && S(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !t && this.vars[l] && this._callback(l)))
                }
            }, o._hasPausedChild = function() {
                for (var e = this._first; e;) {
                    if (e._paused || e instanceof _ && e._hasPausedChild()) return !0;
                    e = e._next
                }
                return !1
            }, o.getChildren = function(e, t, o, s) {
                s = s || -9999999999;
                for (var i = [], n = this._first, l = 0; n;) n._startTime < s || (n instanceof c ? !1 !== t && (i[l++] = n) : (!1 !== o && (i[l++] = n), !1 !== e && (l = (i = i.concat(n.getChildren(!0, t, o))).length))), n = n._next;
                return i
            }, o.getTweensOf = function(e, t) {
                var o, s, i = this._gc,
                    n = [],
                    l = 0;
                for (i && this._enabled(!0, !0), s = (o = c.getTweensOf(e)).length; - 1 < --s;)(o[s].timeline === this || t && this._contains(o[s])) && (n[l++] = o[s]);
                return i && this._enabled(!1, !0), n
            }, o.recent = function() {
                return this._recent
            }, o._contains = function(e) {
                for (var t = e.timeline; t;) {
                    if (t === this) return !0;
                    t = t.timeline
                }
                return !1
            }, o.shiftChildren = function(e, t, o) {
                o = o || 0;
                for (var s, i = this._first, n = this._labels; i;) i._startTime >= o && (i._startTime += e), i = i._next;
                if (t)
                    for (s in n) n[s] >= o && (n[s] += e);
                return this._uncache(!0)
            }, o._kill = function(e, t) {
                if (!e && !t) return this._enabled(!1, !1);
                for (var o = t ? this.getTweensOf(t) : this.getChildren(!0, !0, !1), s = o.length, i = !1; - 1 < --s;) o[s]._kill(e, t) && (i = !0);
                return i
            }, o.clear = function(e) {
                var t = this.getChildren(!1, !0, !0),
                    o = t.length;
                for (this._time = this._totalTime = 0; - 1 < --o;) t[o]._enabled(!1, !1);
                return !1 !== e && (this._labels = {}), this._uncache(!0)
            }, o.invalidate = function() {
                for (var e = this._first; e;) e.invalidate(), e = e._next;
                return u.prototype.invalidate.call(this)
            }, o._enabled = function(e, t) {
                if (e === this._gc)
                    for (var o = this._first; o;) o._enabled(e, !0), o = o._next;
                return h.prototype._enabled.call(this, e, t)
            }, o.totalTime = function(e, t, o) {
                this._forcingPlayhead = !0;
                var s = u.prototype.totalTime.apply(this, arguments);
                return this._forcingPlayhead = !1, s
            }, o.duration = function(e) {
                return arguments.length ? (0 !== this.duration() && 0 !== e && this.timeScale(this._duration / e), this) : (this._dirty && this.totalDuration(), this._duration)
            }, o.totalDuration = function(e) {
                if (arguments.length) return e && this.totalDuration() ? this.timeScale(this._totalDuration / e) : this;
                if (this._dirty) {
                    for (var t, o, s = 0, i = this._last, n = 999999999999; i;) t = i._prev, i._dirty && i.totalDuration(), i._startTime > n && this._sortChildren && !i._paused ? this.add(i, i._startTime - i._delay) : n = i._startTime, i._startTime < 0 && !i._paused && (s -= i._startTime, this._timeline.smoothChildTiming && (this._startTime += i._startTime / this._timeScale), this.shiftChildren(-i._startTime, !1, -9999999999), n = 0), s < (o = i._startTime + i._totalDuration / i._timeScale) && (s = o), i = t;
                    this._duration = this._totalDuration = s, this._dirty = !1
                }
                return this._totalDuration
            }, o.paused = function(e) {
                if (!e)
                    for (var t = this._first, o = this._time; t;) t._startTime === o && "isPause" === t.data && (t._rawPrevTime = 0), t = t._next;
                return u.prototype.paused.apply(this, arguments)
            }, o.usesFrames = function() {
                for (var e = this._timeline; e._timeline;) e = e._timeline;
                return e === u._rootFramesTimeline
            }, o.rawTime = function() {
                return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale
            }, _
        }, !0), _fwd_gsScope.FWDFWD_gsDefine("TimelineMax", ["FWDTimelineLite", "FWDTweenLite", "easing.Ease"], function(t, a, e) {
            function o(e) {
                t.call(this, e), this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._cycle = 0, this._yoyo = !0 === this.vars.yoyo, this._dirty = !0
            }
            var D = 1e-10,
                s = a._internals,
                W = s.lazyTweens,
                F = s.lazyRender,
                r = _fwd_gsScope.FWDFWD_gsDefine.globals,
                d = new e(null, null, 1, 0),
                i = o.prototype = new t;
            return i.constructor = o, i.kill()._gc = !1, o.version = "1.19.0", i.invalidate = function() {
                return this._yoyo = !0 === this.vars.yoyo, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), t.prototype.invalidate.call(this)
            }, i.addCallback = function(e, t, o, s) {
                return this.add(a.delayedCall(0, e, o, s), t)
            }, i.removeCallback = function(e, t) {
                if (e)
                    if (null == t) this._kill(null, e);
                    else
                        for (var o = this.getTweensOf(e, !1), s = o.length, i = this._parseTimeOrLabel(t); - 1 < --s;) o[s]._startTime === i && o[s]._enabled(!1, !1);
                return this
            }, i.removePause = function(e) {
                return this.removeCallback(t._internals.pauseCallback, e)
            }, i.tweenTo = function(e, t) {
                t = t || {};
                var o, s, i, n = {
                        ease: d,
                        useFrames: this.usesFrames(),
                        immediateRender: !1
                    },
                    l = t.repeat && r.FWDAnimation || a;
                for (s in t) n[s] = t[s];
                return n.time = this._parseTimeOrLabel(e), o = Math.abs(Number(n.time) - this._time) / this._timeScale || .001, i = new l(this, o, n), n.onStart = function() {
                    i.target.paused(!0), i.vars.time !== i.target.time() && o === i.duration() && i.duration(Math.abs(i.vars.time - i.target.time()) / i.target._timeScale), t.onStart && i._callback("onStart")
                }, i
            }, i.tweenFromTo = function(e, t, o) {
                o = o || {}, e = this._parseTimeOrLabel(e), o.startAt = {
                    onComplete: this.seek,
                    onCompleteParams: [e],
                    callbackScope: this
                }, o.immediateRender = !1 !== o.immediateRender;
                var s = this.tweenTo(t, o);
                return s.duration(Math.abs(s.vars.time - e) / this._timeScale || .001)
            }, i.render = function(e, t, o) {
                this._gc && this._enabled(!0, !1);
                var s, i, n, l, a, r, d, u, h = this._dirty ? this.totalDuration() : this._totalDuration,
                    c = this._duration,
                    _ = this._time,
                    f = this._totalTime,
                    p = this._startTime,
                    b = this._timeScale,
                    m = this._rawPrevTime,
                    g = this._paused,
                    y = this._cycle;
                if (h - 1e-7 <= e) this._locked || (this._totalTime = h, this._cycle = this._repeat), this._reversed || this._hasPausedChild() || (i = !0, l = "onComplete", a = !!this._timeline.autoRemoveChildren, 0 === this._duration && (e <= 0 && -1e-7 <= e || m < 0 || m === D) && m !== e && this._first && (a = !0, D < m && (l = "onReverseComplete"))), this._rawPrevTime = this._duration || !t || e || this._rawPrevTime === e ? e : D, this._yoyo && 0 != (1 & this._cycle) ? this._time = e = 0 : e = (this._time = c) + 1e-4;
                else if (e < 1e-7)
                    if (this._locked || (this._totalTime = this._cycle = 0), ((this._time = 0) !== _ || 0 === c && m !== D && (0 < m || e < 0 && 0 <= m) && !this._locked) && (l = "onReverseComplete", i = this._reversed), e < 0) this._active = !1, this._timeline.autoRemoveChildren && this._reversed ? (a = i = !0, l = "onReverseComplete") : 0 <= m && this._first && (a = !0), this._rawPrevTime = e;
                    else {
                        if (this._rawPrevTime = c || !t || e || this._rawPrevTime === e ? e : D, 0 === e && i)
                            for (s = this._first; s && 0 === s._startTime;) s._duration || (i = !1), s = s._next;
                        e = 0, this._initted || (a = !0)
                    } else if (0 === c && m < 0 && (a = !0), this._time = this._rawPrevTime = e, this._locked || (this._totalTime = e, 0 !== this._repeat && (r = c + this._repeatDelay, this._cycle = this._totalTime / r >> 0, 0 !== this._cycle && this._cycle === this._totalTime / r && f <= e && this._cycle--, this._time = this._totalTime - this._cycle * r, this._yoyo && 0 != (1 & this._cycle) && (this._time = c - this._time), this._time > c ? e = (this._time = c) + 1e-4 : this._time < 0 ? this._time = e = 0 : e = this._time)), this._hasPause && !this._forcingPlayhead && !t) {
                    if (_ <= (e = this._time))
                        for (s = this._first; s && s._startTime <= e && !d;) s._duration || "isPause" !== s.data || s.ratio || 0 === s._startTime && 0 === this._rawPrevTime || (d = s), s = s._next;
                    else
                        for (s = this._last; s && s._startTime >= e && !d;) s._duration || "isPause" === s.data && 0 < s._rawPrevTime && (d = s), s = s._prev;
                    d && (this._time = e = d._startTime, this._totalTime = e + this._cycle * (this._totalDuration + this._repeatDelay))
                }
                if (this._cycle !== y && !this._locked) {
                    var v = this._yoyo && 0 != (1 & y),
                        S = v === (this._yoyo && 0 != (1 & this._cycle)),
                        P = this._totalTime,
                        w = this._cycle,
                        T = this._rawPrevTime,
                        B = this._time;
                    if (this._totalTime = y * c, this._cycle < y ? v = !v : this._totalTime += c, this._time = _, this._rawPrevTime = 0 === c ? m - 1e-4 : m, this._cycle = y, this._locked = !0, _ = v ? 0 : c, this.render(_, t, 0 === c), t || this._gc || this.vars.onRepeat && this._callback("onRepeat"), _ !== this._time) return;
                    if (S && (_ = v ? c + 1e-4 : -1e-4, this.render(_, !0, !1)), this._locked = !1, this._paused && !g) return;
                    this._time = B, this._totalTime = P, this._cycle = w, this._rawPrevTime = T
                }
                if (this._time !== _ && this._first || o || a || d) {
                    if (this._initted || (this._initted = !0), this._active || !this._paused && this._totalTime !== f && 0 < e && (this._active = !0), 0 === f && this.vars.onStart && (0 === this._totalTime && this._totalDuration || t || this._callback("onStart")), _ <= (u = this._time))
                        for (s = this._first; s && (n = s._next, u === this._time && (!this._paused || g));)(s._active || s._startTime <= this._time && !s._paused && !s._gc) && (d === s && this.pause(), s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (e - s._startTime) * s._timeScale, t, o) : s.render((e - s._startTime) * s._timeScale, t, o)), s = n;
                    else
                        for (s = this._last; s && (n = s._prev, u === this._time && (!this._paused || g));) {
                            if (s._active || s._startTime <= _ && !s._paused && !s._gc) {
                                if (d === s) {
                                    for (d = s._prev; d && d.endTime() > this._time;) d.render(d._reversed ? d.totalDuration() - (e - d._startTime) * d._timeScale : (e - d._startTime) * d._timeScale, t, o), d = d._prev;
                                    d = null, this.pause()
                                }
                                s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (e - s._startTime) * s._timeScale, t, o) : s.render((e - s._startTime) * s._timeScale, t, o)
                            }
                            s = n
                        }
                    this._onUpdate && (t || (W.length && F(), this._callback("onUpdate"))), l && (this._locked || this._gc || p !== this._startTime && b === this._timeScale || (0 === this._time || h >= this.totalDuration()) && (i && (W.length && F(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !t && this.vars[l] && this._callback(l)))
                } else f !== this._totalTime && this._onUpdate && (t || this._callback("onUpdate"))
            }, i.getActive = function(e, t, o) {
                null == e && (e = !0), null == t && (t = !0), null == o && (o = !1);
                var s, i, n = [],
                    l = this.getChildren(e, t, o),
                    a = 0,
                    r = l.length;
                for (s = 0; s < r; s++)(i = l[s]).isActive() && (n[a++] = i);
                return n
            }, i.getLabelAfter = function(e) {
                e || 0 !== e && (e = this._time);
                var t, o = this.getLabelsArray(),
                    s = o.length;
                for (t = 0; t < s; t++)
                    if (o[t].time > e) return o[t].name;
                return null
            }, i.getLabelBefore = function(e) {
                null == e && (e = this._time);
                for (var t = this.getLabelsArray(), o = t.length; - 1 < --o;)
                    if (t[o].time < e) return t[o].name;
                return null
            }, i.getLabelsArray = function() {
                var e, t = [],
                    o = 0;
                for (e in this._labels) t[o++] = {
                    time: this._labels[e],
                    name: e
                };
                return t.sort(function(e, t) {
                    return e.time - t.time
                }), t
            }, i.progress = function(e, t) {
                return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - e : e) + this._cycle * (this._duration + this._repeatDelay), t) : this._time / this.duration()
            }, i.totalProgress = function(e, t) {
                return arguments.length ? this.totalTime(this.totalDuration() * e, t) : this._totalTime / this.totalDuration()
            }, i.totalDuration = function(e) {
                return arguments.length ? -1 !== this._repeat && e ? this.timeScale(this.totalDuration() / e) : this : (this._dirty && (t.prototype.totalDuration.call(this), this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat), this._totalDuration)
            }, i.time = function(e, t) {
                return arguments.length ? (this._dirty && this.totalDuration(), e > this._duration && (e = this._duration), this._yoyo && 0 != (1 & this._cycle) ? e = this._duration - e + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (e += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(e, t)) : this._time
            }, i.repeat = function(e) {
                return arguments.length ? (this._repeat = e, this._uncache(!0)) : this._repeat
            }, i.repeatDelay = function(e) {
                return arguments.length ? (this._repeatDelay = e, this._uncache(!0)) : this._repeatDelay
            }, i.yoyo = function(e) {
                return arguments.length ? (this._yoyo = e, this) : this._yoyo
            }, i.currentLabel = function(e) {
                return arguments.length ? this.seek(e, !0) : this.getLabelBefore(this._time + 1e-8)
            }, o
        }, !0), w = 180 / Math.PI, P = [], T = [], B = [], v = {}, o = _fwd_gsScope.FWDFWD_gsDefine.globals, b = _fwd_gsScope.FWDFWD_gsDefine.plugin({
            propName: "bezier",
            priority: -1,
            version: "1.3.7",
            API: 2,
            fwd_global: !0,
            init: function(e, t, o) {
                this._target = e, t instanceof Array && (t = {
                    values: t
                }), this._func = {}, this._mod = {}, this._props = [], this._timeRes = null == t.timeResolution ? 6 : parseInt(t.timeResolution, 10);
                var s, i, n, l, a, r = t.values || [],
                    d = {},
                    u = r[0],
                    h = t.autoRotate || o.vars.orientToBezier;
                for (s in this._autoRotate = h ? h instanceof Array ? h : [
                        ["x", "y", "rotation", !0 === h ? 0 : Number(h) || 0]
                    ] : null, u) this._props.push(s);
                for (n = this._props.length; - 1 < --n;) s = this._props[n], this._overwriteProps.push(s), i = this._func[s] = "function" == typeof e[s], d[s] = i ? e[s.indexOf("set") || "function" != typeof e["get" + s.substr(3)] ? s : "get" + s.substr(3)]() : parseFloat(e[s]), a || d[s] !== r[0][s] && (a = d);
                if (this._beziers = "cubic" !== t.type && "quadratic" !== t.type && "soft" !== t.type ? _(r, isNaN(t.curviness) ? 1 : t.curviness, !1, "thruBasic" === t.type, t.correlate, a) : function(e, t, o) {
                        var s, i, n, l, a, r, d, u, h, c, _, f = {},
                            p = "cubic" === (t = t || "soft") ? 3 : 2,
                            b = "soft" === t,
                            m = [];
                        if (b && o && (e = [o].concat(e)), null == e || e.length < 1 + p) throw "invalid Bezier data";
                        for (h in e[0]) m.push(h);
                        for (r = m.length; - 1 < --r;) {
                            for (f[h = m[r]] = a = [], c = 0, u = e.length, d = 0; d < u; d++) s = null == o ? e[d][h] : "string" == typeof(_ = e[d][h]) && "=" === _.charAt(1) ? o[h] + Number(_.charAt(0) + _.substr(2)) : Number(_), b && 1 < d && d < u - 1 && (a[c++] = (s + a[c - 2]) / 2), a[c++] = s;
                            for (u = c - p + 1, d = c = 0; d < u; d += p) s = a[d], i = a[d + 1], n = a[d + 2], l = 2 == p ? 0 : a[d + 3], a[c++] = _ = 3 == p ? new g(s, i, n, l) : new g(s, (2 * i + s) / 3, (2 * i + n) / 3, n);
                            a.length = c
                        }
                        return f
                    }(r, t.type, d), this._segCount = this._beziers[s].length, this._timeRes) {
                    var c = function(e, t) {
                        var o, s, i, n, l = [],
                            a = [],
                            r = 0,
                            d = 0,
                            u = (t = t >> 0 || 6) - 1,
                            h = [],
                            c = [];
                        for (o in e) f(e[o], l, t);
                        for (i = l.length, s = 0; s < i; s++) r += Math.sqrt(l[s]), c[n = s % t] = r, n === u && (d += r, h[n = s / t >> 0] = c, a[n] = d, r = 0, c = []);
                        return {
                            length: d,
                            lengths: a,
                            segments: h
                        }
                    }(this._beziers, this._timeRes);
                    this._length = c.length, this._lengths = c.lengths, this._segments = c.segments, this._l1 = this._li = this._s1 = this._si = 0, this._l2 = this._lengths[0], this._curSeg = this._segments[0], this._s2 = this._curSeg[0], this._prec = 1 / this._curSeg.length
                }
                if (h = this._autoRotate)
                    for (this._initialRotations = [], h[0] instanceof Array || (this._autoRotate = h = [h]), n = h.length; - 1 < --n;) {
                        for (l = 0; l < 3; l++) s = h[n][l], this._func[s] = "function" == typeof e[s] && e[s.indexOf("set") || "function" != typeof e["get" + s.substr(3)] ? s : "get" + s.substr(3)];
                        s = h[n][2], this._initialRotations[n] = (this._func[s] ? this._func[s].call(this._target) : this._target[s]) || 0, this._overwriteProps.push(s)
                    }
                return this._startRatio = o.vars.runBackwards ? 1 : 0, !0
            },
            set: function(e) {
                var t, o, s, i, n, l, a, r, d, u, h = this._segCount,
                    c = this._func,
                    _ = this._target,
                    f = e !== this._startRatio;
                if (this._timeRes) {
                    if (d = this._lengths, u = this._curSeg, e *= this._length, s = this._li, e > this._l2 && s < h - 1) {
                        for (r = h - 1; s < r && (this._l2 = d[++s]) <= e;);
                        this._l1 = d[s - 1], this._li = s, this._curSeg = u = this._segments[s], this._s2 = u[this._s1 = this._si = 0]
                    } else if (e < this._l1 && 0 < s) {
                        for (; 0 < s && (this._l1 = d[--s]) >= e;);
                        0 === s && e < this._l1 ? this._l1 = 0 : s++, this._l2 = d[s], this._li = s, this._curSeg = u = this._segments[s], this._s1 = u[(this._si = u.length - 1) - 1] || 0, this._s2 = u[this._si]
                    }
                    if (t = s, e -= this._l1, s = this._si, e > this._s2 && s < u.length - 1) {
                        for (r = u.length - 1; s < r && (this._s2 = u[++s]) <= e;);
                        this._s1 = u[s - 1], this._si = s
                    } else if (e < this._s1 && 0 < s) {
                        for (; 0 < s && (this._s1 = u[--s]) >= e;);
                        0 === s && e < this._s1 ? this._s1 = 0 : s++, this._s2 = u[s], this._si = s
                    }
                    l = (s + (e - this._s1) / (this._s2 - this._s1)) * this._prec || 0
                } else l = (e - (t = e < 0 ? 0 : 1 <= e ? h - 1 : h * e >> 0) * (1 / h)) * h;
                for (o = 1 - l, s = this._props.length; - 1 < --s;) i = this._props[s], a = (l * l * (n = this._beziers[i][t]).da + 3 * o * (l * n.ca + o * n.ba)) * l + n.a, this._mod[i] && (a = this._mod[i](a, _)), c[i] ? _[i](a) : "x" == i ? _.setX(a) : "y" == i ? _.setY(a) : "z" == i ? _.setZ(a) : "angleX" == i ? _.setAngleX(a) : "angleY" == i ? _.setAngleY(a) : "angleZ" == i ? _.setAngleZ(a) : "w" == i ? _.setWidth(a) : "h" == i ? _.setHeight(a) : "alpha" == i ? _.setAlpha(a) : "scale" == i ? _.setScale2(a) : _[i] = a;
                if (this._autoRotate) {
                    var p, b, m, g, y, v, S, P = this._autoRotate;
                    for (s = P.length; - 1 < --s;) i = P[s][2], v = P[s][3] || 0, S = !0 === P[s][4] ? 1 : w, n = this._beziers[P[s][0]], p = this._beziers[P[s][1]], n && p && (n = n[t], p = p[t], b = n.a + (n.b - n.a) * l, b += ((g = n.b + (n.c - n.b) * l) - b) * l, g += (n.c + (n.d - n.c) * l - g) * l, m = p.a + (p.b - p.a) * l, m += ((y = p.b + (p.c - p.b) * l) - m) * l, y += (p.c + (p.d - p.c) * l - y) * l, a = f ? Math.atan2(y - m, g - b) * S + v : this._initialRotations[s], this._mod[i] && (a = this._mod[i](a, _)), c[i] ? _[i](a) : _[i] = a)
                }
            }
        }), e = b.prototype, b.bezierThrough = _, b.cubicToQuadratic = S, b._autoCSS = !0, b.quadraticToCubic = function(e, t, o) {
            return new g(e, (2 * t + e) / 3, (2 * t + o) / 3, o)
        }, b._cssRegister = function() {
            var e = o.CSSPlugin;
            if (e) {
                var t = e._internals,
                    _ = t._parseToProxy,
                    f = t._setPluginRatio,
                    p = t.CSSPropTween;
                t._registerComplexSpecialProp("bezier", {
                    parser: function(e, t, o, s, i, n) {
                        t instanceof Array && (t = {
                            values: t
                        }), n = new b;
                        var l, a, r, d = t.values,
                            u = d.length - 1,
                            h = [],
                            c = {};
                        if (u < 0) return i;
                        for (l = 0; l <= u; l++) r = _(e, d[l], s, i, n, u !== l), h[l] = r.end;
                        for (a in t) c[a] = t[a];
                        return c.values = h, (i = new p(e, "bezier", 0, 0, r.pt, 2)).data = r, i.plugin = n, i.setRatio = f, 0 === c.autoRotate && (c.autoRotate = !0), !c.autoRotate || c.autoRotate instanceof Array || (l = !0 === c.autoRotate ? 0 : Number(c.autoRotate), c.autoRotate = null != r.end.left ? [
                            ["left", "top", "rotation", l, !1]
                        ] : null != r.end.x && [
                            ["x", "y", "rotation", l, !1]
                        ]), c.autoRotate && (s._transform || s._enableTransforms(!1), r.autoRotate = s._target._gsTransform, r.proxy.rotation = r.autoRotate.rotation || 0, s._overwriteProps.push("rotation")), n._onInitTween(r.proxy, c, s._tween), i
                    }
                })
            }
        }, e._mod = function(e) {
            for (var t, o = this._overwriteProps, s = o.length; - 1 < --s;)(t = e[o[s]]) && "function" == typeof t && (this._mod[o[s]] = t)
        }, e._kill = function(e) {
            var t, o, s = this._props;
            for (t in this._beziers)
                if (t in e)
                    for (delete this._beziers[t], delete this._func[t], o = s.length; - 1 < --o;) s[o] === t && s.splice(o, 1);
            if (s = this._autoRotate)
                for (o = s.length; - 1 < --o;) e[s[o][2]] && s.splice(o, 1);
            return this._super._kill.call(this, e)
        }, _fwd_gsScope.FWDFWD_gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "FWDTweenLite"], function(n, M) {
            var f, T, B, p, R = function() {
                    n.call(this, "css"), this._overwriteProps.length = 0, this.setRatio = R.prototype.setRatio
                },
                d = _fwd_gsScope.FWDFWD_gsDefine.globals,
                b = {},
                e = R.prototype = new n("css");
            (e.constructor = R).version = "1.19.0", R.API = 2, R.defaultTransformPerspective = 0, R.defaultSkewType = "compensated", R.defaultSmoothOrigin = !0, e = "px", R.suffixMap = {
                top: e,
                right: e,
                bottom: e,
                left: e,
                width: e,
                height: e,
                fontSize: e,
                padding: e,
                margin: e,
                perspective: e,
                lineHeight: ""
            };

            function l(e, t) {
                return t.toUpperCase()
            }

            function t(e) {
                return Z.createElementNS ? Z.createElementNS("http://www.w3.org/1999/xhtml", e) : Z.createElement(e)
            }

            function a(e) {
                return L.test("string" == typeof e ? e : (e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
            }

            function m(e) {
                window.console && console.log(e)
            }

            function D(e, t) {
                var o, s, i = (t = t || ee).style;
                if (void 0 !== i[e]) return e;
                for (e = e.charAt(0).toUpperCase() + e.substr(1), o = ["O", "Moz", "ms", "Ms", "Webkit"], s = 5; - 1 < --s && void 0 === i[o[s] + e];);
                return 0 <= s ? (ne = "-" + (le = 3 === s ? "ms" : o[s]).toLowerCase() + "-", le + e) : null
            }

            function g(e, t) {
                var o, s, i, n = {};
                if (t = t || ae(e, null))
                    if (o = t.length)
                        for (; - 1 < --o;) - 1 !== (i = t[o]).indexOf("-transform") && xe !== i || (n[i.replace(c, l)] = t.getPropertyValue(i));
                    else
                        for (o in t) - 1 !== o.indexOf("Transform") && ke !== o || (n[o] = t[o]);
                else if (t = e.currentStyle || e.style)
                    for (o in t) "string" == typeof o && void 0 === n[o] && (n[o.replace(c, l)] = t[o]);
                return ie || (n.opacity = a(e)), s = Qe(e, t, !1), n.rotation = s.rotation, n.skewX = s.skewX, n.scaleX = s.scaleX, n.scaleY = s.scaleY, n.x = s.x, n.y = s.y, Le && (n.z = s.z, n.rotationX = s.rotationX, n.rotationY = s.rotationY, n.scaleZ = s.scaleZ), n.filters && delete n.filters, n
            }

            function y(e, t, o, s, i) {
                var n, l, a, r = {},
                    d = e.style;
                for (l in o) "cssText" !== l && "length" !== l && isNaN(l) && (t[l] !== (n = o[l]) || i && i[l]) && -1 === l.indexOf("Origin") && ("number" != typeof n && "string" != typeof n || (r[l] = "auto" !== n || "left" !== l && "top" !== l ? "" !== n && "auto" !== n && "none" !== n || "string" != typeof t[l] || "" === t[l].replace(u, "") ? n : 0 : ue(e, l), void 0 !== d[l] && (a = new ve(d, l, d[l], a))));
                if (s)
                    for (l in s) "className" !== l && (r[l] = s[l]);
                return {
                    difs: r,
                    firstMPT: a
                }
            }

            function v(e, t, o) {
                if ("svg" === (e.nodeName + "").toLowerCase()) return (o || ae(e))[t] || 0;
                if (e.getBBox && Ye(e)) return e.getBBox()[t] || 0;
                var s = parseFloat("width" === t ? e.offsetWidth : e.offsetHeight),
                    i = he[t],
                    n = i.length;
                for (o = o || ae(e, null); - 1 < --n;) s -= parseFloat(re(e, "padding" + i[n], o, !0)) || 0, s -= parseFloat(re(e, "border" + i[n] + "Width", o, !0)) || 0;
                return s
            }

            function W(e, t) {
                return "function" == typeof e && (e = e(V, E)), "string" == typeof e && "=" === e.charAt(1) ? parseInt(e.charAt(0) + "1", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(t) || 0
            }

            function F(e, t) {
                return "function" == typeof e && (e = e(V, E)), null == e ? t : "string" == typeof e && "=" === e.charAt(1) ? parseInt(e.charAt(0) + "1", 10) * parseFloat(e.substr(2)) + t : parseFloat(e) || 0
            }

            function C(e, t, o, s) {
                var i, n, l, a, r;
                return "function" == typeof e && (e = e(V, E)), (a = null == e ? t : "number" == typeof e ? e : (i = 360, n = e.split("_"), l = ((r = "=" === e.charAt(1)) ? parseInt(e.charAt(0) + "1", 10) * parseFloat(n[0].substr(2)) : parseFloat(n[0])) * (-1 === e.indexOf("rad") ? 1 : J) - (r ? 0 : t), n.length && (s && (s[o] = t + l), -1 !== e.indexOf("short") && (l %= i) !== l % 180 && (l = l < 0 ? l + i : l - i), -1 !== e.indexOf("_cw") && l < 0 ? l = (l + 3599999999640) % i - (l / i | 0) * i : -1 !== e.indexOf("ccw") && 0 < l && (l = (l - 3599999999640) % i - (l / i | 0) * i)), t + l)) < 1e-6 && -1e-6 < a && (a = 0), a
            }

            function _(e, t, o) {
                return 255 * (6 * (e = e < 0 ? e + 1 : 1 < e ? e - 1 : e) < 1 ? t + (o - t) * e * 6 : e < .5 ? o : 3 * e < 2 ? t + (o - t) * (2 / 3 - e) * 6 : t) + .5 | 0
            }

            function s(e, t) {
                var o, s, i, n = e.match(be) || [],
                    l = 0,
                    a = n.length ? "" : e;
                for (o = 0; o < n.length; o++) s = n[o], l += (i = e.substr(l, e.indexOf(s, l) - l)).length + s.length, 3 === (s = pe(s, t)).length && s.push(1), a += i + (t ? "hsla(" + s[0] + "," + s[1] + "%," + s[2] + "%," + s[3] : "rgba(" + s.join(",")) + ")";
                return a + e.substr(l)
            }
            var H, S, P, A, w, U, E, V, o, i, O = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
                I = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
                k = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
                u = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
                x = /(?:\d|\-|\+|=|#|\.)*/g,
                L = /opacity *= *([^)]*)/i,
                N = /opacity:([^;]*)/i,
                r = /alpha\(opacity *=.+?\)/i,
                j = /^(rgb|hsl)/,
                h = /([A-Z])/g,
                c = /-([a-z])/gi,
                Y = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
                X = /(?:Left|Right|Width)/i,
                z = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
                Q = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
                G = /,(?=[^\)]*(?:\(|$))/gi,
                q = /[\s,\(]/i,
                K = Math.PI / 180,
                J = 180 / Math.PI,
                $ = {},
                Z = document,
                ee = t("div"),
                te = t("img"),
                oe = R._internals = {
                    _specialProps: b
                },
                se = navigator.userAgent,
                ie = (o = se.indexOf("Android"), i = t("a"), P = -1 !== se.indexOf("Safari") && -1 === se.indexOf("Chrome") && (-1 === o || 3 < Number(se.substr(o + 8, 1))), w = P && Number(se.substr(se.indexOf("Version/") + 8, 1)) < 6, A = -1 !== se.indexOf("Firefox"), (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(se) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(se)) && (U = parseFloat(RegExp.$1)), !!i && (i.style.cssText = "top:1px;opacity:.55;", /^0.55/.test(i.style.opacity))),
                ne = "",
                le = "",
                ae = Z.defaultView ? Z.defaultView.getComputedStyle : function() {},
                re = R.getStyle = function(e, t, o, s, i) {
                    var n;
                    return ie || "opacity" !== t ? (!s && e.style[t] ? n = e.style[t] : (o = o || ae(e)) ? n = o[t] || o.getPropertyValue(t) || o.getPropertyValue(t.replace(h, "-$1").toLowerCase()) : e.currentStyle && (n = e.currentStyle[t]), null == i || n && "none" !== n && "auto" !== n && "auto auto" !== n ? n : i) : a(e)
                },
                de = oe.convertToPixels = function(e, t, o, s, i) {
                    if ("px" === s || !s) return o;
                    if ("auto" === s || !o) return 0;
                    var n, l, a, r = X.test(t),
                        d = e,
                        u = ee.style,
                        h = o < 0,
                        c = 1 === o;
                    if (h && (o = -o), c && (o *= 100), "%" === s && -1 !== t.indexOf("border")) n = o / 100 * (r ? e.clientWidth : e.clientHeight);
                    else {
                        if (u.cssText = "border:0 solid red;position:" + re(e, "position") + ";line-height:0;", "%" !== s && d.appendChild && "v" !== s.charAt(0) && "rem" !== s) u[r ? "borderLeftWidth" : "borderTopWidth"] = o + s;
                        else {
                            if (l = (d = e.parentNode || Z.body)._gsCache, a = M.ticker.frame, l && r && l.time === a) return l.width * o / 100;
                            u[r ? "width" : "height"] = o + s
                        }
                        d.appendChild(ee), n = parseFloat(ee[r ? "offsetWidth" : "offsetHeight"]), d.removeChild(ee), r && "%" === s && !1 !== R.cacheWidths && ((l = d._gsCache = d._gsCache || {}).time = a, l.width = n / o * 100), 0 !== n || i || (n = de(e, t, o, s, !0))
                    }
                    return c && (n /= 100), h ? -n : n
                },
                ue = oe.calculateOffset = function(e, t, o) {
                    if ("absolute" !== re(e, "position", o)) return 0;
                    var s = "left" === t ? "Left" : "Top",
                        i = re(e, "margin" + s, o);
                    return e["offset" + s] - (de(e, t, parseFloat(i), i.replace(x, "")) || 0)
                },
                he = {
                    width: ["Left", "Right"],
                    height: ["Top", "Bottom"]
                },
                ce = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
                _e = function(e, t) {
                    if ("contain" === e || "auto" === e || "auto auto" === e) return e + " ";
                    null != e && "" !== e || (e = "0 0");
                    var o, s = e.split(" "),
                        i = -1 !== e.indexOf("left") ? "0%" : -1 !== e.indexOf("right") ? "100%" : s[0],
                        n = -1 !== e.indexOf("top") ? "0%" : -1 !== e.indexOf("bottom") ? "100%" : s[1];
                    if (3 < s.length && !t) {
                        for (s = e.split(", ").join(",").split(","), e = [], o = 0; o < s.length; o++) e.push(_e(s[o]));
                        return e.join(",")
                    }
                    return null == n ? n = "center" === i ? "50%" : "0" : "center" === n && (n = "50%"), ("center" === i || isNaN(parseFloat(i)) && -1 === (i + "").indexOf("=")) && (i = "50%"), e = i + " " + n + (2 < s.length ? " " + s[2] : ""), t && (t.oxp = -1 !== i.indexOf("%"), t.oyp = -1 !== n.indexOf("%"), t.oxr = "=" === i.charAt(1), t.oyr = "=" === n.charAt(1), t.ox = parseFloat(i.replace(u, "")), t.oy = parseFloat(n.replace(u, "")), t.v = e), t || e
                },
                fe = {
                    aqua: [0, 255, 255],
                    lime: [0, 255, 0],
                    silver: [192, 192, 192],
                    black: [0, 0, 0],
                    maroon: [128, 0, 0],
                    teal: [0, 128, 128],
                    blue: [0, 0, 255],
                    navy: [0, 0, 128],
                    white: [255, 255, 255],
                    fuchsia: [255, 0, 255],
                    olive: [128, 128, 0],
                    yellow: [255, 255, 0],
                    orange: [255, 165, 0],
                    gray: [128, 128, 128],
                    purple: [128, 0, 128],
                    green: [0, 128, 0],
                    red: [255, 0, 0],
                    pink: [255, 192, 203],
                    cyan: [0, 255, 255],
                    transparent: [255, 255, 255, 0]
                },
                pe = R.parseColor = function(e, t) {
                    var o, s, i, n, l, a, r, d, u, h, c;
                    if (e)
                        if ("number" == typeof e) o = [e >> 16, e >> 8 & 255, 255 & e];
                        else {
                            if ("," === e.charAt(e.length - 1) && (e = e.substr(0, e.length - 1)), fe[e]) o = fe[e];
                            else if ("#" === e.charAt(0)) 4 === e.length && (e = "#" + (s = e.charAt(1)) + s + (i = e.charAt(2)) + i + (n = e.charAt(3)) + n), o = [(e = parseInt(e.substr(1), 16)) >> 16, e >> 8 & 255, 255 & e];
                            else if ("hsl" === e.substr(0, 3))
                                if (o = c = e.match(O), t) {
                                    if (-1 !== e.indexOf("=")) return e.match(I)
                                } else l = Number(o[0]) % 360 / 360, a = Number(o[1]) / 100, s = 2 * (r = Number(o[2]) / 100) - (i = r <= .5 ? r * (a + 1) : r + a - r * a), 3 < o.length && (o[3] = Number(e[3])), o[0] = _(l + 1 / 3, s, i), o[1] = _(l, s, i), o[2] = _(l - 1 / 3, s, i);
                            else o = e.match(O) || fe.transparent;
                            o[0] = Number(o[0]), o[1] = Number(o[1]), o[2] = Number(o[2]), 3 < o.length && (o[3] = Number(o[3]))
                        } else o = fe.black;
                    return t && !c && (s = o[0] / 255, i = o[1] / 255, n = o[2] / 255, r = ((d = Math.max(s, i, n)) + (u = Math.min(s, i, n))) / 2, d === u ? l = a = 0 : (h = d - u, a = .5 < r ? h / (2 - d - u) : h / (d + u), l = d === s ? (i - n) / h + (i < n ? 6 : 0) : d === i ? (n - s) / h + 2 : (s - i) / h + 4, l *= 60), o[0] = l + .5 | 0, o[1] = 100 * a + .5 | 0, o[2] = 100 * r + .5 | 0), o
                },
                be = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
            for (e in fe) be += "|" + e + "\\b";
            be = new RegExp(be + ")", "gi"), R.colorStringFilter = function(e) {
                var t, o = e[0] + e[1];
                be.test(o) && (t = -1 !== o.indexOf("hsl(") || -1 !== o.indexOf("hsla("), e[0] = s(e[0], t), e[1] = s(e[1], t)), be.lastIndex = 0
            }, M.defaultStringFilter || (M.defaultStringFilter = R.colorStringFilter);

            function me(e, t, n, l) {
                if (null == e) return function(e) {
                    return e
                };
                var a, r = t ? (e.match(be) || [""])[0] : "",
                    d = e.split(r).join("").match(k) || [],
                    u = e.substr(0, e.indexOf(d[0])),
                    h = ")" === e.charAt(e.length - 1) ? ")" : "",
                    c = -1 !== e.indexOf(" ") ? " " : ",",
                    _ = d.length,
                    f = 0 < _ ? d[0].replace(O, "") : "";
                return _ ? a = t ? function(e) {
                    var t, o, s, i;
                    if ("number" == typeof e) e += f;
                    else if (l && G.test(e)) {
                        for (i = e.replace(G, "|").split("|"), s = 0; s < i.length; s++) i[s] = a(i[s]);
                        return i.join(",")
                    }
                    if (t = (e.match(be) || [r])[0], s = (o = e.split(t).join("").match(k) || []).length, _ > s--)
                        for (; ++s < _;) o[s] = n ? o[(s - 1) / 2 | 0] : d[s];
                    return u + o.join(c) + c + t + h + (-1 !== e.indexOf("inset") ? " inset" : "")
                } : function(e) {
                    var t, o, s;
                    if ("number" == typeof e) e += f;
                    else if (l && G.test(e)) {
                        for (o = e.replace(G, "|").split("|"), s = 0; s < o.length; s++) o[s] = a(o[s]);
                        return o.join(",")
                    }
                    if (s = (t = e.match(k) || []).length, _ > s--)
                        for (; ++s < _;) t[s] = n ? t[(s - 1) / 2 | 0] : d[s];
                    return u + t.join(c) + h
                } : function(e) {
                    return e
                }
            }

            function ge(d) {
                return d = d.split(","),
                    function(e, t, o, s, i, n, l) {
                        var a, r = (t + "").split(" ");
                        for (l = {}, a = 0; a < 4; a++) l[d[a]] = r[a] = r[a] || r[(a - 1) / 2 >> 0];
                        return s.parse(e, l, i, n)
                    }
            }
            oe._setPluginRatio = function(e) {
                this.plugin.setRatio(e);
                for (var t, o, s, i, n, l = this.data, a = l.proxy, r = l.firstMPT; r;) t = a[r.v], r.r ? t = Math.round(t) : t < 1e-6 && -1e-6 < t && (t = 0), r.t[r.p] = t, r = r._next;
                if (l.autoRotate && (l.autoRotate.rotation = l.mod ? l.mod(a.rotation, this.t) : a.rotation), 1 === e || 0 === e)
                    for (r = l.firstMPT, n = 1 === e ? "e" : "b"; r;) {
                        if ((o = r.t).type) {
                            if (1 === o.type) {
                                for (i = o.xs0 + o.s + o.xs1, s = 1; s < o.l; s++) i += o["xn" + s] + o["xs" + (s + 1)];
                                o[n] = i
                            }
                        } else o[n] = o.s + o.xs0;
                        r = r._next
                    }
            };

            function ye(e, t, o, s, i, n) {
                var l = new Se(e, t, o, s - o, i, -1, n);
                return l.b = o, l.e = l.xs0 = s, l
            }
            var ve = function(e, t, o, s, i) {
                    this.t = e, this.p = t, this.v = o, this.r = i, s && ((s._prev = this)._next = s)
                },
                Se = (oe._parseToProxy = function(e, t, o, s, i, n) {
                    var l, a, r, d, u, h = s,
                        c = {},
                        _ = {},
                        f = o._transform,
                        p = $;
                    for (o._transform = null, $ = t, s = u = o.parse(e, t, s, i), $ = p, n && (o._transform = f, h && (h._prev = null, h._prev && (h._prev._next = null))); s && s !== h;) {
                        if (s.type <= 1 && (_[a = s.p] = s.s + s.c, c[a] = s.s, n || (d = new ve(s, "s", a, d, s.r), s.c = 0), 1 === s.type))
                            for (l = s.l; 0 < --l;) r = "xn" + l, _[a = s.p + "_" + r] = s.data[r], c[a] = s[r], n || (d = new ve(s, r, a, d, s.rxp[r]));
                        s = s._next
                    }
                    return {
                        proxy: c,
                        end: _,
                        firstMPT: d,
                        pt: u
                    }
                }, oe.CSSPropTween = function(e, t, o, s, i, n, l, a, r, d, u) {
                    this.t = e, this.p = t, this.s = o, this.c = s, this.n = l || t, e instanceof Se || p.push(this.n), this.r = a, this.type = n || 0, r && (this.pr = r, f = !0), this.b = void 0 === d ? o : d, this.e = void 0 === u ? o + s : u, i && ((this._next = i)._prev = this)
                }),
                Pe = R.parseComplex = function(e, t, o, s, i, n, l, a, r, d) {
                    o = o || n || "", "function" == typeof s && (s = s(V, E)), l = new Se(e, t, 0, 0, l, d ? 2 : 1, null, !1, a, o, s), s += "", i && be.test(s + o) && (s = [o, s], R.colorStringFilter(s), o = s[0], s = s[1]);
                    var u, h, c, _, f, p, b, m, g, y, v, S, P, w = o.split(", ").join(",").split(" "),
                        T = s.split(", ").join(",").split(" "),
                        B = w.length,
                        D = !1 !== H;
                    for (-1 === s.indexOf(",") && -1 === o.indexOf(",") || (w = w.join(" ").replace(G, ", ").split(" "), T = T.join(" ").replace(G, ", ").split(" "), B = w.length), B !== T.length && (B = (w = (n || "").split(" ")).length), l.plugin = r, l.setRatio = d, u = be.lastIndex = 0; u < B; u++)
                        if (_ = w[u], f = T[u], (m = parseFloat(_)) || 0 === m) l.appendXtra("", m, W(f, m), f.replace(I, ""), D && -1 !== f.indexOf("px"), !0);
                        else if (i && be.test(_)) S = ")" + ((S = f.indexOf(")") + 1) ? f.substr(S) : ""), P = -1 !== f.indexOf("hsl") && ie, _ = pe(_, P), f = pe(f, P), (g = 6 < _.length + f.length) && !ie && 0 === f[3] ? (l["xs" + l.l] += l.l ? " transparent" : "transparent", l.e = l.e.split(T[u]).join("transparent")) : (ie || (g = !1), P ? l.appendXtra(g ? "hsla(" : "hsl(", _[0], W(f[0], _[0]), ",", !1, !0).appendXtra("", _[1], W(f[1], _[1]), "%,", !1).appendXtra("", _[2], W(f[2], _[2]), g ? "%," : "%" + S, !1) : l.appendXtra(g ? "rgba(" : "rgb(", _[0], f[0] - _[0], ",", !0, !0).appendXtra("", _[1], f[1] - _[1], ",", !0).appendXtra("", _[2], f[2] - _[2], g ? "," : S, !0), g && (_ = _.length < 4 ? 1 : _[3], l.appendXtra("", _, (f.length < 4 ? 1 : f[3]) - _, S, !1))), be.lastIndex = 0;
                    else if (p = _.match(O)) {
                        if (!(b = f.match(I)) || b.length !== p.length) return l;
                        for (h = c = 0; h < p.length; h++) v = p[h], y = _.indexOf(v, c), l.appendXtra(_.substr(c, y - c), Number(v), W(b[h], v), "", D && "px" === _.substr(y + v.length, 2), 0 === h), c = y + v.length;
                        l["xs" + l.l] += _.substr(c)
                    } else l["xs" + l.l] += l.l || l["xs" + l.l] ? " " + f : f;
                    if (-1 !== s.indexOf("=") && l.data) {
                        for (S = l.xs0 + l.data.s, u = 1; u < l.l; u++) S += l["xs" + u] + l.data["xn" + u];
                        l.e = S + l["xs" + u]
                    }
                    return l.l || (l.type = -1, l.xs0 = l.e), l.xfirst || l
                },
                we = 9;
            for ((e = Se.prototype).l = e.pr = 0; 0 < --we;) e["xn" + we] = 0, e["xs" + we] = "";
            e.xs0 = "", e._next = e._prev = e.xfirst = e.data = e.plugin = e.setRatio = e.rxp = null, e.appendXtra = function(e, t, o, s, i, n) {
                var l = this,
                    a = l.l;
                return l["xs" + a] += n && (a || l["xs" + a]) ? " " + e : e || "", o || 0 === a || l.plugin ? (l.l++, l.type = l.setRatio ? 2 : 1, l["xs" + l.l] = s || "", 0 < a ? (l.data["xn" + a] = t + o, l.rxp["xn" + a] = i, l["xn" + a] = t, l.plugin || (l.xfirst = new Se(l, "xn" + a, t, o, l.xfirst || l, 0, l.n, i, l.pr), l.xfirst.xs0 = 0)) : (l.data = {
                    s: t + o
                }, l.rxp = {}, l.s = t, l.c = o, l.r = i), l) : (l["xs" + a] += t + (s || ""), l)
            };

            function Te(e, t) {
                t = t || {}, this.p = t.prefix && D(e) || e, b[e] = b[this.p] = this, this.format = t.formatter || me(t.defaultValue, t.color, t.collapsible, t.multi), t.parser && (this.parse = t.parser), this.clrs = t.color, this.multi = t.multi, this.keyword = t.keyword, this.dflt = t.defaultValue, this.pr = t.priority || 0
            }
            var Be = oe._registerComplexSpecialProp = function(e, t, o) {
                    "object" != typeof t && (t = {
                        parser: o
                    });
                    var s, i = e.split(","),
                        n = t.defaultValue;
                    for (o = o || [n], s = 0; s < i.length; s++) t.prefix = 0 === s && t.prefix, t.defaultValue = o[s] || n, new Te(i[s], t)
                },
                De = oe._registerPluginProp = function(e) {
                    if (!b[e]) {
                        var r = e.charAt(0).toUpperCase() + e.substr(1) + "Plugin";
                        Be(e, {
                            parser: function(e, t, o, s, i, n, l) {
                                var a = d.com.greensock.plugins[r];
                                return a ? (a._cssRegister(), b[o].parse(e, t, o, s, i, n, l)) : (m("Error: " + r + " js file not loaded."), i)
                            }
                        })
                    }
                };
            (e = Te.prototype).parseComplex = function(e, t, o, s, i, n) {
                var l, a, r, d, u, h, c = this.keyword;
                if (this.multi && (G.test(o) || G.test(t) ? (a = t.replace(G, "|").split("|"), r = o.replace(G, "|").split("|")) : c && (a = [t], r = [o])), r) {
                    for (d = r.length > a.length ? r.length : a.length, l = 0; l < d; l++) t = a[l] = a[l] || this.dflt, o = r[l] = r[l] || this.dflt, c && (u = t.indexOf(c)) !== (h = o.indexOf(c)) && (-1 === h ? a[l] = a[l].split(c).join("") : -1 === u && (a[l] += " " + c));
                    t = a.join(", "), o = r.join(", ")
                }
                return Pe(e, this.p, t, o, this.clrs, this.dflt, s, this.pr, i, n)
            }, e.parse = function(e, t, o, s, i, n, l) {
                return this.parseComplex(e.style, this.format(re(e, this.p, B, !1, this.dflt)), this.format(t), i, n)
            }, R.registerSpecialProp = function(e, r, d) {
                Be(e, {
                    parser: function(e, t, o, s, i, n, l) {
                        var a = new Se(e, o, 0, 0, i, 2, o, !1, d);
                        return a.plugin = n, a.setRatio = r(e, t, s._tween, o), a
                    },
                    priority: d
                })
            }, R.useSVGTransformAttr = P || A;

            function We(e, t, o) {
                var s, i = Z.createElementNS("http://www.w3.org/2000/svg", e),
                    n = /([a-z])([A-Z])/g;
                for (s in o) i.setAttributeNS(null, s.replace(n, "$1-$2").toLowerCase(), o[s]);
                return t.appendChild(i), i
            }

            function Fe(e, t, o, s, i, n) {
                var l, a, r, d, u, h, c, _, f, p, b, m, g, y, v = e._gsTransform,
                    S = ze(e, !0);
                v && (g = v.xOrigin, y = v.yOrigin), (!s || (l = s.split(" ")).length < 2) && (c = e.getBBox(), l = [(-1 !== (t = _e(t).split(" "))[0].indexOf("%") ? parseFloat(t[0]) / 100 * c.width : parseFloat(t[0])) + c.x, (-1 !== t[1].indexOf("%") ? parseFloat(t[1]) / 100 * c.height : parseFloat(t[1])) + c.y]), o.xOrigin = d = parseFloat(l[0]), o.yOrigin = u = parseFloat(l[1]), s && S !== Xe && (h = S[0], c = S[1], _ = S[2], f = S[3], p = S[4], a = d * (f / (m = h * f - c * _)) + u * (-_ / m) + (_ * (b = S[5]) - f * p) / m, r = d * (-c / m) + u * (h / m) - (h * b - c * p) / m, d = o.xOrigin = l[0] = a, u = o.yOrigin = l[1] = r), v && (n && (o.xOffset = v.xOffset, o.yOffset = v.yOffset, v = o), i || !1 !== i && !1 !== R.defaultSmoothOrigin ? (a = d - g, r = u - y, v.xOffset += a * S[0] + r * S[2] - a, v.yOffset += a * S[1] + r * S[3] - r) : v.xOffset = v.yOffset = 0), n || e.setAttribute("data-svg-origin", l.join(" "))
            }

            function Ce(e) {
                var t, o, s = this.data,
                    i = -s.rotation * K,
                    n = i + s.skewX * K,
                    l = 1e5,
                    a = (Math.cos(i) * s.scaleX * l | 0) / l,
                    r = (Math.sin(i) * s.scaleX * l | 0) / l,
                    d = (Math.sin(n) * -s.scaleY * l | 0) / l,
                    u = (Math.cos(n) * s.scaleY * l | 0) / l,
                    h = this.t.style,
                    c = this.t.currentStyle;
                if (c) {
                    o = r, r = -d, d = -o, t = c.filter, h.filter = "";
                    var _, f, p = this.t.offsetWidth,
                        b = this.t.offsetHeight,
                        m = "absolute" !== c.position,
                        g = "progid:DXImageTransform.Microsoft.Matrix(M11=" + a + ", M12=" + r + ", M21=" + d + ", M22=" + u,
                        y = s.x + p * s.xPercent / 100,
                        v = s.y + b * s.yPercent / 100;
                    if (null != s.ox && (y += (_ = (s.oxp ? p * s.ox * .01 : s.ox) - p / 2) - (_ * a + (f = (s.oyp ? b * s.oy * .01 : s.oy) - b / 2) * r), v += f - (_ * d + f * u)), g += m ? ", Dx=" + ((_ = p / 2) - (_ * a + (f = b / 2) * r) + y) + ", Dy=" + (f - (_ * d + f * u) + v) + ")" : ", sizingMethod='auto expand')", -1 !== t.indexOf("DXImageTransform.Microsoft.Matrix(") ? h.filter = t.replace(Q, g) : h.filter = g + " " + t, 0 !== e && 1 !== e || 1 == a && 0 === r && 0 === d && 1 == u && (m && -1 === g.indexOf("Dx=0, Dy=0") || L.test(t) && 100 !== parseFloat(RegExp.$1) || -1 === t.indexOf(t.indexOf("Alpha")) && h.removeAttribute("filter")), !m) {
                        var S, P, w, T = U < 8 ? 1 : -1;
                        for (_ = s.ieOffsetX || 0, f = s.ieOffsetY || 0, s.ieOffsetX = Math.round((p - ((a < 0 ? -a : a) * p + (r < 0 ? -r : r) * b)) / 2 + y), s.ieOffsetY = Math.round((b - ((u < 0 ? -u : u) * b + (d < 0 ? -d : d) * p)) / 2 + v), we = 0; we < 4; we++) w = (o = -1 !== (S = c[P = ce[we]]).indexOf("px") ? parseFloat(S) : de(this.t, P, parseFloat(S), S.replace(x, "")) || 0) !== s[P] ? we < 2 ? -s.ieOffsetX : -s.ieOffsetY : we < 2 ? _ - s.ieOffsetX : f - s.ieOffsetY, h[P] = (s[P] = Math.round(o - w * (0 === we || 2 === we ? 1 : T))) + "px"
                    }
                }
            }
            var He, Ue, Ee, Ve, Oe, Ie = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),
                ke = D("transform"),
                xe = ne + "transform",
                Ae = D("transformOrigin"),
                Le = null !== D("perspective"),
                Me = oe.Transform = function() {
                    this.perspective = parseFloat(R.defaultTransformPerspective) || 0, this.force3D = !(!1 === R.defaultForce3D || !Le) && (R.defaultForce3D || "auto")
                },
                Re = window.SVGElement,
                Ne = Z.documentElement,
                je = (Oe = U || /Android/i.test(se) && !window.chrome, Z.createElementNS && !Oe && (Ue = We("svg", Ne), Ve = (Ee = We("rect", Ue, {
                    width: 100,
                    height: 50,
                    x: 100
                })).getBoundingClientRect().width, Ee.style[Ae] = "50% 50%", Ee.style[ke] = "scaleX(0.5)", Oe = Ve === Ee.getBoundingClientRect().width && !(A && Le), Ne.removeChild(Ue)), Oe),
                Ye = function(e) {
                    return !!(Re && e.getBBox && e.getCTM && function(e) {
                        try {
                            return e.getBBox()
                        } catch (e) {}
                    }(e) && (!e.parentNode || e.parentNode.getBBox && e.parentNode.getCTM))
                },
                Xe = [1, 0, 0, 1, 0, 0],
                ze = function(e, t) {
                    var o, s, i, n, l, a, r = e._gsTransform || new Me,
                        d = e.style;
                    if (ke ? s = re(e, xe, null, !0) : e.currentStyle && (s = (s = e.currentStyle.filter.match(z)) && 4 === s.length ? [s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), r.x || 0, r.y || 0].join(",") : ""), (o = !s || "none" === s || "matrix(1, 0, 0, 1, 0, 0)" === s) && ke && ((a = "none" === ae(e).display) || !e.parentNode) && (a && (n = d.display, d.display = "block"), e.parentNode || (l = 1, Ne.appendChild(e)), o = !(s = re(e, xe, null, !0)) || "none" === s || "matrix(1, 0, 0, 1, 0, 0)" === s, n ? d.display = n : a && Je(d, "display"), l && Ne.removeChild(e)), (r.svg || e.getBBox && Ye(e)) && (o && -1 !== (d[ke] + "").indexOf("matrix") && (s = d[ke], o = 0), i = e.getAttribute("transform"), o && i && (-1 !== i.indexOf("matrix") ? (s = i, o = 0) : -1 !== i.indexOf("translate") && (s = "matrix(1,0,0,1," + i.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")", o = 0))), o) return Xe;
                    for (i = (s || "").match(O) || [], we = i.length; - 1 < --we;) n = Number(i[we]), i[we] = (l = n - (n |= 0)) ? (1e5 * l + (l < 0 ? -.5 : .5) | 0) / 1e5 + n : n;
                    return t && 6 < i.length ? [i[0], i[1], i[4], i[5], i[12], i[13]] : i
                },
                Qe = oe.getTransform = function(e, t, o, s) {
                    if (e._gsTransform && o && !s) return e._gsTransform;
                    var i, n, l, a, r, d, u = o && e._gsTransform || new Me,
                        h = u.scaleX < 0,
                        c = Le && (parseFloat(re(e, Ae, t, !1, "0 0 0").split(" ")[2]) || u.zOrigin) || 0,
                        _ = parseFloat(R.defaultTransformPerspective) || 0;
                    if (u.svg = !(!e.getBBox || !Ye(e)), u.svg && (Fe(e, re(e, Ae, t, !1, "50% 50%") + "", u, e.getAttribute("data-svg-origin")), He = R.useSVGTransformAttr || je), (i = ze(e)) !== Xe) {
                        if (16 === i.length) {
                            var f, p, b, m, g, y = i[0],
                                v = i[1],
                                S = i[2],
                                P = i[3],
                                w = i[4],
                                T = i[5],
                                B = i[6],
                                D = i[7],
                                W = i[8],
                                F = i[9],
                                C = i[10],
                                H = i[12],
                                U = i[13],
                                E = i[14],
                                V = i[11],
                                O = Math.atan2(B, C);
                            u.zOrigin && (H = W * (E = -u.zOrigin) - i[12], U = F * E - i[13], E = C * E + u.zOrigin - i[14]), u.rotationX = O * J, O && (f = w * (m = Math.cos(-O)) + W * (g = Math.sin(-O)), p = T * m + F * g, b = B * m + C * g, W = w * -g + W * m, F = T * -g + F * m, C = B * -g + C * m, V = D * -g + V * m, w = f, T = p, B = b), O = Math.atan2(-S, C), u.rotationY = O * J, O && (p = v * (m = Math.cos(-O)) - F * (g = Math.sin(-O)), b = S * m - C * g, F = v * g + F * m, C = S * g + C * m, V = P * g + V * m, y = f = y * m - W * g, v = p, S = b), O = Math.atan2(v, y), u.rotation = O * J, O && (y = y * (m = Math.cos(-O)) + w * (g = Math.sin(-O)), p = v * m + T * g, T = v * -g + T * m, B = S * -g + B * m, v = p), u.rotationX && 359.9 < Math.abs(u.rotationX) + Math.abs(u.rotation) && (u.rotationX = u.rotation = 0, u.rotationY = 180 - u.rotationY), u.scaleX = (1e5 * Math.sqrt(y * y + v * v) + .5 | 0) / 1e5, u.scaleY = (1e5 * Math.sqrt(T * T + F * F) + .5 | 0) / 1e5, u.scaleZ = (1e5 * Math.sqrt(B * B + C * C) + .5 | 0) / 1e5, u.rotationX || u.rotationY ? u.skewX = 0 : (u.skewX = w || T ? Math.atan2(w, T) * J + u.rotation : u.skewX || 0, 90 < Math.abs(u.skewX) && Math.abs(u.skewX) < 270 && (h ? (u.scaleX *= -1, u.skewX += u.rotation <= 0 ? 180 : -180, u.rotation += u.rotation <= 0 ? 180 : -180) : (u.scaleY *= -1, u.skewX += u.skewX <= 0 ? 180 : -180))), u.perspective = V ? 1 / (V < 0 ? -V : V) : 0, u.x = H, u.y = U, u.z = E, u.svg && (u.x -= u.xOrigin - (u.xOrigin * y - u.yOrigin * w), u.y -= u.yOrigin - (u.yOrigin * v - u.xOrigin * T))
                        } else if (!Le || s || !i.length || u.x !== i[4] || u.y !== i[5] || !u.rotationX && !u.rotationY) {
                            var I = 6 <= i.length,
                                k = I ? i[0] : 1,
                                x = i[1] || 0,
                                A = i[2] || 0,
                                L = I ? i[3] : 1;
                            u.x = i[4] || 0, u.y = i[5] || 0, l = Math.sqrt(k * k + x * x), a = Math.sqrt(L * L + A * A), r = k || x ? Math.atan2(x, k) * J : u.rotation || 0, d = A || L ? Math.atan2(A, L) * J + r : u.skewX || 0, 90 < Math.abs(d) && Math.abs(d) < 270 && (h ? (l *= -1, d += r <= 0 ? 180 : -180, r += r <= 0 ? 180 : -180) : (a *= -1, d += d <= 0 ? 180 : -180)), u.scaleX = l, u.scaleY = a, u.rotation = r, u.skewX = d, Le && (u.rotationX = u.rotationY = u.z = 0, u.perspective = _, u.scaleZ = 1), u.svg && (u.x -= u.xOrigin - (u.xOrigin * k + u.yOrigin * A), u.y -= u.yOrigin - (u.xOrigin * x + u.yOrigin * L))
                        }
                        for (n in u.zOrigin = c, u) u[n] < 2e-5 && -2e-5 < u[n] && (u[n] = 0)
                    }
                    return o && (e._gsTransform = u).svg && (He && e.style[ke] ? M.delayedCall(.001, function() {
                        Je(e.style, ke)
                    }) : !He && e.getAttribute("transform") && M.delayedCall(.001, function() {
                        e.removeAttribute("transform")
                    })), u
                },
                Ge = oe.set3DTransformRatio = oe.setTransformRatio = function(e) {
                    var t, o, s, i, n, l, a, r, d, u, h, c, _, f, p, b, m, g, y, v, S, P, w, T = this.data,
                        B = this.t.style,
                        D = T.rotation,
                        W = T.rotationX,
                        F = T.rotationY,
                        C = T.scaleX,
                        H = T.scaleY,
                        U = T.scaleZ,
                        E = T.x,
                        V = T.y,
                        O = T.z,
                        I = T.svg,
                        k = T.perspective,
                        x = T.force3D;
                    if (!((1 !== e && 0 !== e || "auto" !== x || this.tween._totalTime !== this.tween._totalDuration && this.tween._totalTime) && x || O || k || F || W || 1 !== U) || He && I || !Le) D || T.skewX || I ? (D *= K, P = T.skewX * K, w = 1e5, t = Math.cos(D) * C, i = Math.sin(D) * C, o = Math.sin(D - P) * -H, n = Math.cos(D - P) * H, P && "simple" === T.skewType && (m = Math.tan(P - T.skewY * K), o *= m = Math.sqrt(1 + m * m), n *= m, T.skewY && (m = Math.tan(T.skewY * K), t *= m = Math.sqrt(1 + m * m), i *= m)), I && (E += T.xOrigin - (T.xOrigin * t + T.yOrigin * o) + T.xOffset, V += T.yOrigin - (T.xOrigin * i + T.yOrigin * n) + T.yOffset, He && (T.xPercent || T.yPercent) && (f = this.t.getBBox(), E += .01 * T.xPercent * f.width, V += .01 * T.yPercent * f.height), E < (f = 1e-6) && -f < E && (E = 0), V < f && -f < V && (V = 0)), y = (t * w | 0) / w + "," + (i * w | 0) / w + "," + (o * w | 0) / w + "," + (n * w | 0) / w + "," + E + "," + V + ")", I && He ? this.t.setAttribute("transform", "matrix(" + y) : B[ke] = (T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) matrix(" : "matrix(") + y) : B[ke] = (T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) matrix(" : "matrix(") + C + ",0,0," + H + "," + E + "," + V + ")";
                    else {
                        if (A && (C < (f = 1e-4) && -f < C && (C = U = 2e-5), H < f && -f < H && (H = U = 2e-5), !k || T.z || T.rotationX || T.rotationY || (k = 0)), D || T.skewX) D *= K, p = t = Math.cos(D), b = i = Math.sin(D), T.skewX && (D -= T.skewX * K, p = Math.cos(D), b = Math.sin(D), "simple" === T.skewType && (m = Math.tan((T.skewX - T.skewY) * K), p *= m = Math.sqrt(1 + m * m), b *= m, T.skewY && (m = Math.tan(T.skewY * K), t *= m = Math.sqrt(1 + m * m), i *= m))), o = -b, n = p;
                        else {
                            if (!(F || W || 1 !== U || k || I)) return void(B[ke] = (T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) translate3d(" : "translate3d(") + E + "px," + V + "px," + O + "px)" + (1 !== C || 1 !== H ? " scale(" + C + "," + H + ")" : ""));
                            t = n = 1, o = i = 0
                        }
                        d = 1, s = l = a = r = u = h = 0, c = k ? -1 / k : 0, _ = T.zOrigin, f = 1e-6, v = ",", S = "0", (D = F * K) && (p = Math.cos(D), u = c * (a = -(b = Math.sin(D))), s = t * b, l = i * b, c *= d = p, t *= p, i *= p), (D = W * K) && (m = o * (p = Math.cos(D)) + s * (b = Math.sin(D)), g = n * p + l * b, r = d * b, h = c * b, s = o * -b + s * p, l = n * -b + l * p, d *= p, c *= p, o = m, n = g), 1 !== U && (s *= U, l *= U, d *= U, c *= U), 1 !== H && (o *= H, n *= H, r *= H, h *= H), 1 !== C && (t *= C, i *= C, a *= C, u *= C), (_ || I) && (_ && (E += s * -_, V += l * -_, O += d * -_ + _), I && (E += T.xOrigin - (T.xOrigin * t + T.yOrigin * o) + T.xOffset, V += T.yOrigin - (T.xOrigin * i + T.yOrigin * n) + T.yOffset), E < f && -f < E && (E = S), V < f && -f < V && (V = S), O < f && -f < O && (O = 0)), y = T.xPercent || T.yPercent ? "translate(" + T.xPercent + "%," + T.yPercent + "%) matrix3d(" : "matrix3d(", y += (t < f && -f < t ? S : t) + v + (i < f && -f < i ? S : i) + v + (a < f && -f < a ? S : a), y += v + (u < f && -f < u ? S : u) + v + (o < f && -f < o ? S : o) + v + (n < f && -f < n ? S : n), W || F || 1 !== U ? (y += v + (r < f && -f < r ? S : r) + v + (h < f && -f < h ? S : h) + v + (s < f && -f < s ? S : s), y += v + (l < f && -f < l ? S : l) + v + (d < f && -f < d ? S : d) + v + (c < f && -f < c ? S : c) + v) : y += ",0,0,0,0,1,0,", y += E + v + V + v + O + v + (k ? 1 + -O / k : 1) + ")", B[ke] = y
                    }
                };
            (e = Me.prototype).x = e.y = e.z = e.skewX = e.skewY = e.rotation = e.rotationX = e.rotationY = e.zOrigin = e.xPercent = e.yPercent = e.xOffset = e.yOffset = 0, e.scaleX = e.scaleY = e.scaleZ = 1, Be("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                parser: function(e, t, o, s, i, n, l) {
                    if (s._lastParsedTransform === l) return i;
                    var a;
                    "function" == typeof(s._lastParsedTransform = l)[o] && (a = l[o], l[o] = t);
                    var r, d, u, h, c, _, f, p, b, m = e._gsTransform,
                        g = e.style,
                        y = Ie.length,
                        v = l,
                        S = {},
                        P = "transformOrigin",
                        w = Qe(e, B, !0, v.parseTransform),
                        T = v.transform && ("function" == typeof v.transform ? v.transform(V, E) : v.transform);
                    if (s._transform = w, T && "string" == typeof T && ke)(d = ee.style)[ke] = T, d.display = "block", d.position = "absolute", Z.body.appendChild(ee), r = Qe(ee, null, !1), w.svg && (_ = w.xOrigin, f = w.yOrigin, r.x -= w.xOffset, r.y -= w.yOffset, (v.transformOrigin || v.svgOrigin) && (T = {}, Fe(e, _e(v.transformOrigin), T, v.svgOrigin, v.smoothOrigin, !0), _ = T.xOrigin, f = T.yOrigin, r.x -= T.xOffset - w.xOffset, r.y -= T.yOffset - w.yOffset), (_ || f) && (p = ze(ee, !0), r.x -= _ - (_ * p[0] + f * p[2]), r.y -= f - (_ * p[1] + f * p[3]))), Z.body.removeChild(ee), r.perspective || (r.perspective = w.perspective), null != v.xPercent && (r.xPercent = F(v.xPercent, w.xPercent)), null != v.yPercent && (r.yPercent = F(v.yPercent, w.yPercent));
                    else if ("object" == typeof v) {
                        if (r = {
                                scaleX: F(null != v.scaleX ? v.scaleX : v.scale, w.scaleX),
                                scaleY: F(null != v.scaleY ? v.scaleY : v.scale, w.scaleY),
                                scaleZ: F(v.scaleZ, w.scaleZ),
                                x: F(v.x, w.x),
                                y: F(v.y, w.y),
                                z: F(v.z, w.z),
                                xPercent: F(v.xPercent, w.xPercent),
                                yPercent: F(v.yPercent, w.yPercent),
                                perspective: F(v.transformPerspective, w.perspective)
                            }, null != (c = v.directionalRotation))
                            if ("object" == typeof c)
                                for (d in c) v[d] = c[d];
                            else v.rotation = c;
                            "string" == typeof v.x && -1 !== v.x.indexOf("%") && (r.x = 0, r.xPercent = F(v.x, w.xPercent)), "string" == typeof v.y && -1 !== v.y.indexOf("%") && (r.y = 0, r.yPercent = F(v.y, w.yPercent)), r.rotation = C("rotation" in v ? v.rotation : "shortRotation" in v ? v.shortRotation + "_short" : "rotationZ" in v ? v.rotationZ : w.rotation - w.skewY, w.rotation - w.skewY, "rotation", S), Le && (r.rotationX = C("rotationX" in v ? v.rotationX : "shortRotationX" in v ? v.shortRotationX + "_short" : w.rotationX || 0, w.rotationX, "rotationX", S), r.rotationY = C("rotationY" in v ? v.rotationY : "shortRotationY" in v ? v.shortRotationY + "_short" : w.rotationY || 0, w.rotationY, "rotationY", S)), r.skewX = C(v.skewX, w.skewX - w.skewY), (r.skewY = C(v.skewY, w.skewY)) && (r.skewX += r.skewY, r.rotation += r.skewY)
                    }
                    for (Le && null != v.force3D && (w.force3D = v.force3D, h = !0), w.skewType = v.skewType || w.skewType || R.defaultSkewType, (u = w.force3D || w.z || w.rotationX || w.rotationY || r.z || r.rotationX || r.rotationY || r.perspective) || null == v.scale || (r.scaleZ = 1); - 1 < --y;)(1e-6 < (T = r[b = Ie[y]] - w[b]) || T < -1e-6 || null != v[b] || null != $[b]) && (h = !0, i = new Se(w, b, w[b], T, i), b in S && (i.e = S[b]), i.xs0 = 0, i.plugin = n, s._overwriteProps.push(i.n));
                    return T = v.transformOrigin, w.svg && (T || v.svgOrigin) && (_ = w.xOffset, f = w.yOffset, Fe(e, _e(T), r, v.svgOrigin, v.smoothOrigin), i = ye(w, "xOrigin", (m ? w : r).xOrigin, r.xOrigin, i, P), i = ye(w, "yOrigin", (m ? w : r).yOrigin, r.yOrigin, i, P), _ === w.xOffset && f === w.yOffset || (i = ye(w, "xOffset", m ? _ : w.xOffset, w.xOffset, i, P), i = ye(w, "yOffset", m ? f : w.yOffset, w.yOffset, i, P)), T = He ? null : "0px 0px"), (T || Le && u && w.zOrigin) && (ke ? (h = !0, b = Ae, T = (T || re(e, b, B, !1, "50% 50%")) + "", (i = new Se(g, b, 0, 0, i, -1, P)).b = g[b], i.plugin = n, Le ? (d = w.zOrigin, T = T.split(" "), w.zOrigin = (2 < T.length && (0 === d || "0px" !== T[2]) ? parseFloat(T[2]) : d) || 0, i.xs0 = i.e = T[0] + " " + (T[1] || "50%") + " 0px", (i = new Se(w, "zOrigin", 0, 0, i, -1, i.n)).b = d, i.xs0 = i.e = w.zOrigin) : i.xs0 = i.e = T) : _e(T + "", w)), h && (s._transformType = w.svg && He || !u && 3 !== this._transformType ? 2 : 3), a && (l[o] = a), i
                },
                prefix: !0
            }), Be("boxShadow", {
                defaultValue: "0px 0px 0px 0px #999",
                prefix: !0,
                color: !0,
                multi: !0,
                keyword: "inset"
            }), Be("borderRadius", {
                defaultValue: "0px",
                parser: function(e, t, o, s, i, n) {
                    t = this.format(t);
                    var l, a, r, d, u, h, c, _, f, p, b, m, g, y, v, S, P = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"],
                        w = e.style;
                    for (f = parseFloat(e.offsetWidth), p = parseFloat(e.offsetHeight), l = t.split(" "), a = 0; a < P.length; a++) this.p.indexOf("border") && (P[a] = D(P[a])), -1 !== (u = d = re(e, P[a], B, !1, "0px")).indexOf(" ") && (u = (d = u.split(" "))[0], d = d[1]), h = r = l[a], c = parseFloat(u), m = u.substr((c + "").length), "" === (b = (g = "=" === h.charAt(1)) ? (_ = parseInt(h.charAt(0) + "1", 10), h = h.substr(2), _ *= parseFloat(h), h.substr((_ + "").length - (_ < 0 ? 1 : 0)) || "") : (_ = parseFloat(h), h.substr((_ + "").length))) && (b = T[o] || m), b !== m && (y = de(e, "borderLeft", c, m), v = de(e, "borderTop", c, m), d = "%" === b ? (u = y / f * 100 + "%", v / p * 100 + "%") : "em" === b ? (u = y / (S = de(e, "borderLeft", 1, "em")) + "em", v / S + "em") : (u = y + "px", v + "px"), g && (h = parseFloat(u) + _ + b, r = parseFloat(d) + _ + b)), i = Pe(w, P[a], u + " " + d, h + " " + r, !1, "0px", i);
                    return i
                },
                prefix: !0,
                formatter: me("0px 0px 0px 0px", !1, !0)
            }), Be("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                defaultValue: "0px",
                parser: function(e, t, o, s, i, n) {
                    return Pe(e.style, o, this.format(re(e, o, B, !1, "0px 0px")), this.format(t), !1, "0px", i)
                },
                prefix: !0,
                formatter: me("0px 0px", !1, !0)
            }), Be("backgroundPosition", {
                defaultValue: "0 0",
                parser: function(e, t, o, s, i, n) {
                    var l, a, r, d, u, h, c = "background-position",
                        _ = B || ae(e, null),
                        f = this.format((_ ? U ? _.getPropertyValue(c + "-x") + " " + _.getPropertyValue(c + "-y") : _.getPropertyValue(c) : e.currentStyle.backgroundPositionX + " " + e.currentStyle.backgroundPositionY) || "0 0"),
                        p = this.format(t);
                    if (-1 !== f.indexOf("%") != (-1 !== p.indexOf("%")) && p.split(",").length < 2 && (h = re(e, "backgroundImage").replace(Y, "")) && "none" !== h) {
                        for (l = f.split(" "), a = p.split(" "), te.setAttribute("src", h), r = 2; - 1 < --r;)(d = -1 !== (f = l[r]).indexOf("%")) != (-1 !== a[r].indexOf("%")) && (u = 0 === r ? e.offsetWidth - te.width : e.offsetHeight - te.height, l[r] = d ? parseFloat(f) / 100 * u + "px" : parseFloat(f) / u * 100 + "%");
                        f = l.join(" ")
                    }
                    return this.parseComplex(e.style, f, p, i, n)
                },
                formatter: _e
            }), Be("backgroundSize", {
                defaultValue: "0 0",
                formatter: function(e) {
                    return _e(-1 === (e += "").indexOf(" ") ? e + " " + e : e)
                }
            }), Be("perspective", {
                defaultValue: "0px",
                prefix: !0
            }), Be("perspectiveOrigin", {
                defaultValue: "50% 50%",
                prefix: !0
            }), Be("transformStyle", {
                prefix: !0
            }), Be("backfaceVisibility", {
                prefix: !0
            }), Be("userSelect", {
                prefix: !0
            }), Be("margin", {
                parser: ge("marginTop,marginRight,marginBottom,marginLeft")
            }), Be("padding", {
                parser: ge("paddingTop,paddingRight,paddingBottom,paddingLeft")
            }), Be("clip", {
                defaultValue: "rect(0px,0px,0px,0px)",
                parser: function(e, t, o, s, i, n) {
                    var l, a, r;
                    return t = U < 9 ? (a = e.currentStyle, r = U < 8 ? " " : ",", l = "rect(" + a.clipTop + r + a.clipRight + r + a.clipBottom + r + a.clipLeft + ")", this.format(t).split(",").join(r)) : (l = this.format(re(e, this.p, B, !1, this.dflt)), this.format(t)), this.parseComplex(e.style, l, t, i, n)
                }
            }), Be("textShadow", {
                defaultValue: "0px 0px 0px #999",
                color: !0,
                multi: !0
            }), Be("autoRound,strictUnits", {
                parser: function(e, t, o, s, i) {
                    return i
                }
            }), Be("border", {
                defaultValue: "0px solid #000",
                parser: function(e, t, o, s, i, n) {
                    var l = re(e, "borderTopWidth", B, !1, "0px"),
                        a = this.format(t).split(" "),
                        r = a[0].replace(x, "");
                    return "px" !== r && (l = parseFloat(l) / de(e, "borderTopWidth", 1, r) + r), this.parseComplex(e.style, this.format(l + " " + re(e, "borderTopStyle", B, !1, "solid") + " " + re(e, "borderTopColor", B, !1, "#000")), a.join(" "), i, n)
                },
                color: !0,
                formatter: function(e) {
                    var t = e.split(" ");
                    return t[0] + " " + (t[1] || "solid") + " " + (e.match(be) || ["#000"])[0]
                }
            }), Be("borderWidth", {
                parser: ge("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
            }), Be("float,cssFloat,styleFloat", {
                parser: function(e, t, o, s, i, n) {
                    var l = e.style,
                        a = "cssFloat" in l ? "cssFloat" : "styleFloat";
                    return new Se(l, a, 0, 0, i, -1, o, !1, 0, l[a], t)
                }
            });

            function qe(e) {
                var t, o = this.t,
                    s = o.filter || re(this.data, "filter") || "",
                    i = this.s + this.c * e | 0;
                100 == i && (t = -1 === s.indexOf("atrix(") && -1 === s.indexOf("radient(") && -1 === s.indexOf("oader(") ? (o.removeAttribute("filter"), !re(this.data, "filter")) : (o.filter = s.replace(r, ""), !0)), t || (this.xn1 && (o.filter = s = s || "alpha(opacity=" + i + ")"), -1 === s.indexOf("pacity") ? 0 == i && this.xn1 || (o.filter = s + " alpha(opacity=" + i + ")") : o.filter = s.replace(L, "opacity=" + i))
            }
            Be("opacity,alpha,autoAlpha", {
                defaultValue: "1",
                parser: function(e, t, o, s, i, n) {
                    var l = parseFloat(re(e, "opacity", B, !1, "1")),
                        a = e.style,
                        r = "autoAlpha" === o;
                    return "string" == typeof t && "=" === t.charAt(1) && (t = ("-" === t.charAt(0) ? -1 : 1) * parseFloat(t.substr(2)) + l), r && 1 === l && "hidden" === re(e, "visibility", B) && 0 !== t && (l = 0), ie ? i = new Se(a, "opacity", l, t - l, i) : ((i = new Se(a, "opacity", 100 * l, 100 * (t - l), i)).xn1 = r ? 1 : 0, a.zoom = 1, i.type = 2, i.b = "alpha(opacity=" + i.s + ")", i.e = "alpha(opacity=" + (i.s + i.c) + ")", i.data = e, i.plugin = n, i.setRatio = qe), r && ((i = new Se(a, "visibility", 0, 0, i, -1, null, !1, 0, 0 !== l ? "inherit" : "hidden", 0 === t ? "hidden" : "inherit")).xs0 = "inherit", s._overwriteProps.push(i.n), s._overwriteProps.push(o)), i
                }
            });

            function Ke(e) {
                if (this.t._gsClassPT = this, 1 === e || 0 === e) {
                    this.t.setAttribute("class", 0 === e ? this.b : this.e);
                    for (var t = this.data, o = this.t.style; t;) t.v ? o[t.p] = t.v : Je(o, t.p), t = t._next;
                    1 === e && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                } else this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
            }
            var Je = function(e, t) {
                t && (e.removeProperty ? ("ms" !== t.substr(0, 2) && "webkit" !== t.substr(0, 6) || (t = "-" + t), e.removeProperty(t.replace(h, "-$1").toLowerCase())) : e.removeAttribute(t))
            };
            Be("className", {
                parser: function(e, t, o, s, i, n, l) {
                    var a, r, d, u, h, c = e.getAttribute("class") || "",
                        _ = e.style.cssText;
                    if ((i = s._classNamePT = new Se(e, o, 0, 0, i, 2)).setRatio = Ke, i.pr = -11, f = !0, i.b = c, r = g(e, B), d = e._gsClassPT) {
                        for (u = {}, h = d.data; h;) u[h.p] = 1, h = h._next;
                        d.setRatio(1)
                    }
                    return (e._gsClassPT = i).e = "=" !== t.charAt(1) ? t : c.replace(new RegExp("(?:\\s|^)" + t.substr(2) + "(?![\\w-])"), "") + ("+" === t.charAt(0) ? " " + t.substr(2) : ""), e.setAttribute("class", i.e), a = y(e, r, g(e), l, u), e.setAttribute("class", c), i.data = a.firstMPT, e.style.cssText = _, i = i.xfirst = s.parse(e, a.difs, i, n)
                }
            });

            function $e(e) {
                if ((1 === e || 0 === e) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                    var t, o, s, i, n, l = this.t.style,
                        a = b.transform.parse;
                    if ("all" === this.e) i = !(l.cssText = "");
                    else
                        for (s = (t = this.e.split(" ").join("").split(",")).length; - 1 < --s;) o = t[s], b[o] && (b[o].parse === a ? i = !0 : o = "transformOrigin" === o ? Ae : b[o].p), Je(l, o);
                    i && (Je(l, ke), (n = this.t._gsTransform) && (n.svg && (this.t.removeAttribute("data-svg-origin"), this.t.removeAttribute("transform")), delete this.t._gsTransform))
                }
            }
            for (Be("clearProps", {
                    parser: function(e, t, o, s, i) {
                        return (i = new Se(e, o, 0, 0, i, 2)).setRatio = $e, i.e = t, i.pr = -10, i.data = s._tween, f = !0, i
                    }
                }), e = "bezier,throwProps,physicsProps,physics2D".split(","), we = e.length; we--;) De(e[we]);
            (e = R.prototype)._firstPT = e._lastParsedTransform = e._transform = null, e._onInitTween = function(e, t, o, s) {
                if (!e.nodeType) return !1;
                this._target = E = e, this._tween = o, this._vars = t, V = s, H = t.autoRound, f = !1, T = t.suffixMap || R.suffixMap, B = ae(e, ""), p = this._overwriteProps;
                var i, n, l, a, r, d, u, h, c, _ = e.style;
                if (S && "" === _.zIndex && ("auto" !== (i = re(e, "zIndex", B)) && "" !== i || this._addLazySet(_, "zIndex", 0)), "string" == typeof t && (a = _.cssText, i = g(e, B), _.cssText = a + ";" + t, i = y(e, i, g(e)).difs, !ie && N.test(t) && (i.opacity = parseFloat(RegExp.$1)), t = i, _.cssText = a), t.className ? this._firstPT = n = b.className.parse(e, t.className, "className", this, null, null, t) : this._firstPT = n = this.parse(e, t, null), this._transformType) {
                    for (c = 3 === this._transformType, ke ? P && (S = !0, "" === _.zIndex && ("auto" !== (u = re(e, "zIndex", B)) && "" !== u || this._addLazySet(_, "zIndex", 0)), w && this._addLazySet(_, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (c ? "visible" : "hidden"))) : _.zoom = 1, l = n; l && l._next;) l = l._next;
                    h = new Se(e, "transform", 0, 0, null, 2), this._linkCSSP(h, null, l), h.setRatio = ke ? Ge : Ce, h.data = this._transform || Qe(e, B, !0), h.tween = o, h.pr = -1, p.pop()
                }
                if (f) {
                    for (; n;) {
                        for (d = n._next, l = a; l && l.pr > n.pr;) l = l._next;
                        (n._prev = l ? l._prev : r) ? n._prev._next = n: a = n, (n._next = l) ? l._prev = n : r = n, n = d
                    }
                    this._firstPT = a
                }
                return !0
            }, e.parse = function(e, t, o, s) {
                var i, n, l, a, r, d, u, h, c, _, f = e.style;
                for (i in t) "function" == typeof(d = t[i]) && (d = d(V, E)), (n = b[i]) ? o = n.parse(e, d, i, this, o, s, t) : (r = re(e, i, B) + "", c = "string" == typeof d, "color" === i || "fill" === i || "stroke" === i || -1 !== i.indexOf("Color") || c && j.test(d) ? (c || (d = (3 < (d = pe(d)).length ? "rgba(" : "rgb(") + d.join(",") + ")"), o = Pe(f, i, r, d, !0, "transparent", o, 0, s)) : c && q.test(d) ? o = Pe(f, i, r, d, !0, null, o, 0, s) : (u = (l = parseFloat(r)) || 0 === l ? r.substr((l + "").length) : "", "" !== r && "auto" !== r || (u = "width" === i || "height" === i ? (l = v(e, i, B), "px") : "left" === i || "top" === i ? (l = ue(e, i, B), "px") : (l = "opacity" !== i ? 0 : 1, "")), "" === (h = (_ = c && "=" === d.charAt(1)) ? (a = parseInt(d.charAt(0) + "1", 10), d = d.substr(2), a *= parseFloat(d), d.replace(x, "")) : (a = parseFloat(d), c ? d.replace(x, "") : "")) && (h = i in T ? T[i] : u), d = a || 0 === a ? (_ ? a + l : a) + h : t[i], u !== h && "" !== h && (a || 0 === a) && l && (l = de(e, i, l, u), "%" === h ? (l /= de(e, i, 100, "%") / 100, !0 !== t.strictUnits && (r = l + "%")) : "em" === h || "rem" === h || "vw" === h || "vh" === h ? l /= de(e, i, 1, h) : "px" !== h && (a = de(e, i, a, h), h = "px"), _ && (!a && 0 !== a || (d = a + l + h))), _ && (a += l), !l && 0 !== l || !a && 0 !== a ? void 0 !== f[i] && (d || d + "" != "NaN" && null != d) ? (o = new Se(f, i, a || l || 0, 0, o, -1, i, !1, 0, r, d)).xs0 = "none" !== d || "display" !== i && -1 === i.indexOf("Style") ? d : r : m("invalid " + i + " tween value: " + t[i]) : (o = new Se(f, i, l, a - l, o, 0, i, !1 !== H && ("px" === h || "zIndex" === i), 0, r, d)).xs0 = h)), s && o && !o.plugin && (o.plugin = s);
                return o
            }, e.setRatio = function(e) {
                var t, o, s, i = this._firstPT;
                if (1 !== e || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                    if (e || this._tween._time !== this._tween._duration && 0 !== this._tween._time || -1e-6 === this._tween._rawPrevTime)
                        for (; i;) {
                            if (t = i.c * e + i.s, i.r ? t = Math.round(t) : t < 1e-6 && -1e-6 < t && (t = 0), i.type)
                                if (1 === i.type)
                                    if (2 === (s = i.l)) i.t[i.p] = i.xs0 + t + i.xs1 + i.xn1 + i.xs2;
                                    else if (3 === s) i.t[i.p] = i.xs0 + t + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3;
                            else if (4 === s) i.t[i.p] = i.xs0 + t + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3 + i.xn3 + i.xs4;
                            else if (5 === s) i.t[i.p] = i.xs0 + t + i.xs1 + i.xn1 + i.xs2 + i.xn2 + i.xs3 + i.xn3 + i.xs4 + i.xn4 + i.xs5;
                            else {
                                for (o = i.xs0 + t + i.xs1, s = 1; s < i.l; s++) o += i["xn" + s] + i["xs" + (s + 1)];
                                i.t[i.p] = o
                            } else -1 === i.type ? i.t[i.p] = i.xs0 : i.setRatio && i.setRatio(e);
                            else i.t[i.p] = t + i.xs0;
                            i = i._next
                        } else
                            for (; i;) 2 !== i.type ? i.t[i.p] = i.b : i.setRatio(e), i = i._next;
                    else
                        for (; i;) {
                            if (2 !== i.type)
                                if (i.r && -1 !== i.type)
                                    if (t = Math.round(i.s + i.c), i.type) {
                                        if (1 === i.type) {
                                            for (s = i.l, o = i.xs0 + t + i.xs1, s = 1; s < i.l; s++) o += i["xn" + s] + i["xs" + (s + 1)];
                                            i.t[i.p] = o
                                        }
                                    } else i.t[i.p] = t + i.xs0;
                            else i.t[i.p] = i.e;
                            else i.setRatio(e);
                            i = i._next
                        }
            }, e._enableTransforms = function(e) {
                this._transform = this._transform || Qe(this._target, B, !0), this._transformType = this._transform.svg && He || !e && 3 !== this._transformType ? 2 : 3
            };

            function Ze(e) {
                this.t[this.p] = this.e, this.data._linkCSSP(this, this._next, null, !0)
            }
            e._addLazySet = function(e, t, o) {
                var s = this._firstPT = new Se(e, t, 0, 0, this._firstPT, 2);
                s.e = o, s.setRatio = Ze, s.data = this
            }, e._linkCSSP = function(e, t, o, s) {
                return e && (t && (t._prev = e), e._next && (e._next._prev = e._prev), e._prev ? e._prev._next = e._next : this._firstPT === e && (this._firstPT = e._next, s = !0), o ? o._next = e : s || null !== this._firstPT || (this._firstPT = e), e._next = t, e._prev = o), e
            }, e._mod = function(e) {
                for (var t = this._firstPT; t;) "function" == typeof e[t.p] && e[t.p] === Math.round && (t.r = 1), t = t._next
            }, e._kill = function(e) {
                var t, o, s, i = e;
                if (e.autoAlpha || e.alpha) {
                    for (o in i = {}, e) i[o] = e[o];
                    i.opacity = 1, i.autoAlpha && (i.visibility = 1)
                }
                for (e.className && (t = this._classNamePT) && ((s = t.xfirst) && s._prev ? this._linkCSSP(s._prev, t._next, s._prev._prev) : s === this._firstPT && (this._firstPT = t._next), t._next && this._linkCSSP(t._next, t._next._next, s._prev), this._classNamePT = null), t = this._firstPT; t;) t.plugin && t.plugin !== o && t.plugin._kill && (t.plugin._kill(e), o = t.plugin), t = t._next;
                return n.prototype._kill.call(this, i)
            };
            var et = function(e, t, o) {
                var s, i, n, l;
                if (e.slice)
                    for (i = e.length; - 1 < --i;) et(e[i], t, o);
                else
                    for (i = (s = e.childNodes).length; - 1 < --i;) l = (n = s[i]).type, n.style && (t.push(g(n)), o && o.push(n)), 1 !== l && 9 !== l && 11 !== l || !n.childNodes.length || et(n, t, o)
            };
            return R.cascadeTo = function(e, t, o) {
                var s, i, n, l, a = M.to(e, t, o),
                    r = [a],
                    d = [],
                    u = [],
                    h = [],
                    c = M._internals.reservedProps;
                for (e = a._targets || a.target, et(e, d, h), a.render(t, !0, !0), et(e, u), a.render(0, !0, !0), a._enabled(!0), s = h.length; - 1 < --s;)
                    if ((i = y(h[s], d[s], u[s])).firstMPT) {
                        for (n in i = i.difs, o) c[n] && (i[n] = o[n]);
                        for (n in l = {}, i) l[n] = d[s][n];
                        r.push(M.fromTo(h[s], t, l, i))
                    }
                return r
            }, n.activate([R]), R
        }, !0), t = _fwd_gsScope.FWDFWD_gsDefine.plugin({
            propName: "roundProps",
            version: "1.6.0",
            priority: -1,
            API: 2,
            init: function(e, t, o) {
                return this._tween = o, !0
            }
        }), (s = t.prototype)._onInitAllProps = function() {
            for (var e, t, o, s = this._tween, i = s.vars.roundProps.join ? s.vars.roundProps : s.vars.roundProps.split(","), n = i.length, l = {}, a = s._propLookup.roundProps; - 1 < --n;) l[i[n]] = Math.round;
            for (n = i.length; - 1 < --n;)
                for (e = i[n], t = s._firstPT; t;) o = t._next, t.pg ? t.t._mod(l) : t.n === e && (2 === t.f && t.t ? r(t.t._firstPT) : (this._add(t.t, e, t.s, t.c), o && (o._prev = t._prev), t._prev ? t._prev._next = o : s._firstPT === t && (s._firstPT = o), t._next = t._prev = null, s._propLookup[e] = a)), t = o;
            return !1
        }, s._add = function(e, t, o, s) {
            this._addTween(e, t, o, o + s, t, Math.round), this._overwriteProps.push(t)
        }, _fwd_gsScope.FWDFWD_gsDefine.plugin({
            propName: "attr",
            API: 2,
            version: "0.6.0",
            init: function(e, t, o, s) {
                var i, n;
                if ("function" != typeof e.setAttribute) return !1;
                for (i in t) "function" == typeof(n = t[i]) && (n = n(s, e)), this._addTween(e, "setAttribute", e.getAttribute(i) + "", n + "", i, !1, i), this._overwriteProps.push(i);
                return !0
            }
        }), _fwd_gsScope.FWDFWD_gsDefine.plugin({
            propName: "directionalRotation",
            version: "0.3.0",
            API: 2,
            init: function(e, t, o, s) {
                "object" != typeof t && (t = {
                    rotation: t
                }), this.finals = {};
                var i, n, l, a, r, d, u = !0 === t.useRadians ? 2 * Math.PI : 360;
                for (i in t) "useRadians" !== i && ("function" == typeof(a = t[i]) && (a = a(s, e)), n = (d = (a + "").split("_"))[0], l = parseFloat("function" != typeof e[i] ? e[i] : e[i.indexOf("set") || "function" != typeof e["get" + i.substr(3)] ? i : "get" + i.substr(3)]()), r = (a = this.finals[i] = "string" == typeof n && "=" === n.charAt(1) ? l + parseInt(n.charAt(0) + "1", 10) * Number(n.substr(2)) : Number(n) || 0) - l, d.length && (-1 !== (n = d.join("_")).indexOf("short") && (r %= u) !== r % (u / 2) && (r = r < 0 ? r + u : r - u), -1 !== n.indexOf("_cw") && r < 0 ? r = (r + 9999999999 * u) % u - (r / u | 0) * u : -1 !== n.indexOf("ccw") && 0 < r && (r = (r - 9999999999 * u) % u - (r / u | 0) * u)), (1e-6 < r || r < -1e-6) && (this._addTween(e, i, l, l + r, i), this._overwriteProps.push(i)));
                return !0
            },
            set: function(e) {
                var t;
                if (1 !== e) this._super.setRatio.call(this, e);
                else
                    for (t = this._firstPT; t;) t.f ? t.t[t.p](this.finals[t.p]) : t.t[t.p] = this.finals[t.p], t = t._next
            }
        })._autoCSS = !0, _fwd_gsScope.FWDFWD_gsDefine("easing.Back", ["easing.Ease"], function(b) {
            function e(e, t) {
                var o = u("easing." + e, function() {}, !0),
                    s = o.prototype = new b;
                return s.constructor = o, s.getRatio = t, o
            }

            function t(e, t, o, s, i) {
                var n = u("easing." + e, {
                    easeOut: new t,
                    easeIn: new o,
                    easeInOut: new s
                }, !0);
                return h(n, e), n
            }

            function m(e, t, o) {
                this.t = e, this.v = t, o && (((this.next = o).prev = this).c = o.v - t, this.gap = o.t - e)
            }

            function o(e, t) {
                var o = u("easing." + e, function(e) {
                        this._p1 = e || 0 === e ? e : 1.70158, this._p2 = 1.525 * this._p1
                    }, !0),
                    s = o.prototype = new b;
                return s.constructor = o, s.getRatio = t, s.config = function(e) {
                    return new o(e)
                }, o
            }
            var s, i, n, l = _fwd_gsScope.FWDGreenSockGlobals || _fwd_gsScope,
                a = l.com.greensock,
                r = 2 * Math.PI,
                d = Math.PI / 2,
                u = a._class,
                h = b.register || function() {},
                c = t("Back", o("BackOut", function(e) {
                    return (e -= 1) * e * ((this._p1 + 1) * e + this._p1) + 1
                }), o("BackIn", function(e) {
                    return e * e * ((this._p1 + 1) * e - this._p1)
                }), o("BackInOut", function(e) {
                    return (e *= 2) < 1 ? .5 * e * e * ((this._p2 + 1) * e - this._p2) : .5 * ((e -= 2) * e * ((this._p2 + 1) * e + this._p2) + 2)
                })),
                _ = u("easing.SlowMo", function(e, t, o) {
                    t = t || 0 === t ? t : .7, null == e ? e = .7 : 1 < e && (e = 1), this._p = 1 !== e ? t : 0, this._p1 = (1 - e) / 2, this._p2 = e, this._p3 = this._p1 + this._p2, this._calcEnd = !0 === o
                }, !0),
                f = _.prototype = new b;
            return f.constructor = _, f.getRatio = function(e) {
                var t = e + (.5 - e) * this._p;
                return e < this._p1 ? this._calcEnd ? 1 - (e = 1 - e / this._p1) * e : t - (e = 1 - e / this._p1) * e * e * e * t : e > this._p3 ? this._calcEnd ? 1 - (e = (e - this._p3) / this._p1) * e : t + (e - t) * (e = (e - this._p3) / this._p1) * e * e * e : this._calcEnd ? 1 : t
            }, _.ease = new _(.7, .7), f.config = _.config = function(e, t, o) {
                return new _(e, t, o)
            }, (f = (s = u("easing.SteppedEase", function(e) {
                e = e || 1, this._p1 = 1 / e, this._p2 = e + 1
            }, !0)).prototype = new b).constructor = s, f.getRatio = function(e) {
                return e < 0 ? e = 0 : 1 <= e && (e = .999999999), (this._p2 * e >> 0) * this._p1
            }, f.config = s.config = function(e) {
                return new s(e)
            }, (f = (i = u("easing.RoughEase", function(e) {
                for (var t, o, s, i, n, l, a = (e = e || {}).taper || "none", r = [], d = 0, u = 0 | (e.points || 20), h = u, c = !1 !== e.randomize, _ = !0 === e.clamp, f = e.template instanceof b ? e.template : null, p = "number" == typeof e.strength ? .4 * e.strength : .4; - 1 < --h;) t = c ? Math.random() : 1 / u * h, o = f ? f.getRatio(t) : t, s = "none" === a ? p : "out" === a ? (i = 1 - t) * i * p : "in" === a ? t * t * p : t < .5 ? (i = 2 * t) * i * .5 * p : (i = 2 * (1 - t)) * i * .5 * p, c ? o += Math.random() * s - .5 * s : h % 2 ? o += .5 * s : o -= .5 * s, _ && (1 < o ? o = 1 : o < 0 && (o = 0)), r[d++] = {
                    x: t,
                    y: o
                };
                for (r.sort(function(e, t) {
                        return e.x - t.x
                    }), l = new m(1, 1, null), h = u; - 1 < --h;) n = r[h], l = new m(n.x, n.y, l);
                this._prev = new m(0, 0, 0 !== l.t ? l : l.next)
            }, !0)).prototype = new b).constructor = i, f.getRatio = function(e) {
                var t = this._prev;
                if (e > t.t) {
                    for (; t.next && e >= t.t;) t = t.next;
                    t = t.prev
                } else
                    for (; t.prev && e <= t.t;) t = t.prev;
                return (this._prev = t).v + (e - t.t) / t.gap * t.c
            }, f.config = function(e) {
                return new i(e)
            }, i.ease = new i, t("Bounce", e("BounceOut", function(e) {
                return e < 1 / 2.75 ? 7.5625 * e * e : e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
            }), e("BounceIn", function(e) {
                return (e = 1 - e) < 1 / 2.75 ? 1 - 7.5625 * e * e : e < 2 / 2.75 ? 1 - (7.5625 * (e -= 1.5 / 2.75) * e + .75) : e < 2.5 / 2.75 ? 1 - (7.5625 * (e -= 2.25 / 2.75) * e + .9375) : 1 - (7.5625 * (e -= 2.625 / 2.75) * e + .984375)
            }), e("BounceInOut", function(e) {
                var t = e < .5;
                return (e = t ? 1 - 2 * e : 2 * e - 1) < 1 / 2.75 ? e *= 7.5625 * e : e = e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375, t ? .5 * (1 - e) : .5 * e + .5
            })), t("Circ", e("CircOut", function(e) {
                return Math.sqrt(1 - (e -= 1) * e)
            }), e("CircIn", function(e) {
                return -(Math.sqrt(1 - e * e) - 1)
            }), e("CircInOut", function(e) {
                return (e *= 2) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
            })), t("Elastic", (n = function(e, t, o) {
                var s = u("easing." + e, function(e, t) {
                        this._p1 = 1 <= e ? e : 1, this._p2 = (t || o) / (e < 1 ? e : 1), this._p3 = this._p2 / r * (Math.asin(1 / this._p1) || 0), this._p2 = r / this._p2
                    }, !0),
                    i = s.prototype = new b;
                return i.constructor = s, i.getRatio = t, i.config = function(e, t) {
                    return new s(e, t)
                }, s
            })("ElasticOut", function(e) {
                return this._p1 * Math.pow(2, -10 * e) * Math.sin((e - this._p3) * this._p2) + 1
            }, .3), n("ElasticIn", function(e) {
                return -this._p1 * Math.pow(2, 10 * (e -= 1)) * Math.sin((e - this._p3) * this._p2)
            }, .3), n("ElasticInOut", function(e) {
                return (e *= 2) < 1 ? this._p1 * Math.pow(2, 10 * (e -= 1)) * Math.sin((e - this._p3) * this._p2) * -.5 : this._p1 * Math.pow(2, -10 * (e -= 1)) * Math.sin((e - this._p3) * this._p2) * .5 + 1
            }, .45)), t("Expo", e("ExpoOut", function(e) {
                return 1 - Math.pow(2, -10 * e)
            }), e("ExpoIn", function(e) {
                return Math.pow(2, 10 * (e - 1)) - .001
            }), e("ExpoInOut", function(e) {
                return (e *= 2) < 1 ? .5 * Math.pow(2, 10 * (e - 1)) : .5 * (2 - Math.pow(2, -10 * (e - 1)))
            })), t("Sine", e("SineOut", function(e) {
                return Math.sin(e * d)
            }), e("SineIn", function(e) {
                return 1 - Math.cos(e * d)
            }), e("SineInOut", function(e) {
                return -.5 * (Math.cos(Math.PI * e) - 1)
            })), u("easing.EaseLookup", {
                find: function(e) {
                    return b.map[e]
                }
            }, !0), h(l.SlowMo, "SlowMo", "ease,"), h(i, "RoughEase", "ease,"), h(s, "SteppedEase", "ease,"), c
        }, !0)
    }), _fwd_gsScope.FWDFWD_gsDefine && _fwd_gsScope._fwd_gsQueue.pop()(),
    function(_, f) {
        "use strict";
        var p = {},
            b = _.FWDGreenSockGlobals = _.FWDGreenSockGlobals || _;
        if (!b.FWDTweenLite) {
            var e, t, o, m, g, s, i, y = function(e) {
                    var t, o = e.split("."),
                        s = b;
                    for (t = 0; t < o.length; t++) s[o[t]] = s = s[o[t]] || {};
                    return s
                },
                h = y("com.greensock"),
                v = 1e-10,
                r = function(e) {
                    var t, o = [],
                        s = e.length;
                    for (t = 0; t !== s; o.push(e[t++]));
                    return o
                },
                S = function() {},
                P = (s = Object.prototype.toString, i = s.call([]), function(e) {
                    return null != e && (e instanceof Array || "object" == typeof e && !!e.push && s.call(e) === i)
                }),
                w = {},
                T = function(r, d, u, h) {
                    this.sc = w[r] ? w[r].sc : [], (w[r] = this).gsClass = null, this.func = u;
                    var c = [];
                    this.check = function(e) {
                        for (var t, o, s, i, n, l = d.length, a = l; - 1 < --l;)(t = w[d[l]] || new T(d[l], [])).gsClass ? (c[l] = t.gsClass, a--) : e && t.sc.push(this);
                        if (0 === a && u) {
                            if (s = (o = ("com.greensock." + r).split(".")).pop(), i = y(o.join("."))[s] = this.gsClass = u.apply(u, c), h)
                                if (b[s] = p[s] = i, !(n = "undefined" != typeof fwd_module && fwd_module.exports) && "function" == typeof define && define.amd) define((_.FWDGreenSockAMDPath ? _.FWDGreenSockAMDPath + "/" : "") + r.split(".").pop(), [], function() {
                                    return i
                                });
                                else if (n)
                                if (r === f)
                                    for (l in fwd_module.exports = p[f] = i, p) i[l] = p[l];
                                else p[f] && (p[f][s] = i);
                            for (l = 0; l < this.sc.length; l++) this.sc[l].check()
                        }
                    }, this.check(!0)
                },
                n = _.FWDFWD_gsDefine = function(e, t, o, s) {
                    return new T(e, t, o, s)
                },
                c = h._class = function(e, t, o) {
                    return t = t || function() {}, n(e, [], function() {
                        return t
                    }, o), t
                };
            n.globals = b;
            var l = [0, 0, 1, 1],
                B = c("easing.Ease", function(e, t, o, s) {
                    this._func = e, this._type = o || 0, this._power = s || 0, this._params = t ? l.concat(t) : l
                }, !0),
                D = B.map = {},
                a = B.register = function(e, t, o, s) {
                    for (var i, n, l, a, r = t.split(","), d = r.length, u = (o || "easeIn,easeOut,easeInOut").split(","); - 1 < --d;)
                        for (n = r[d], i = s ? c("easing." + n, null, !0) : h.easing[n] || {}, l = u.length; - 1 < --l;) a = u[l], D[n + "." + a] = D[a + n] = i[a] = e.getRatio ? e : e[a] || new e
                };
            for ((o = B.prototype)._calcEnd = !1, o.getRatio = function(e) {
                    if (this._func) return this._params[0] = e, this._func.apply(null, this._params);
                    var t = this._type,
                        o = this._power,
                        s = 1 === t ? 1 - e : 2 === t ? e : e < .5 ? 2 * e : 2 * (1 - e);
                    return 1 === o ? s *= s : 2 === o ? s *= s * s : 3 === o ? s *= s * s * s : 4 === o && (s *= s * s * s * s), 1 === t ? 1 - s : 2 === t ? s : e < .5 ? s / 2 : 1 - s / 2
                }, t = (e = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"]).length; - 1 < --t;) o = e[t] + ",Power" + t, a(new B(null, null, 1, t), o, "easeOut", !0), a(new B(null, null, 2, t), o, "easeIn" + (0 === t ? ",easeNone" : "")), a(new B(null, null, 3, t), o, "easeInOut");
            D.linear = h.easing.Linear.easeIn, D.swing = h.easing.Quad.easeInOut;
            var W = c("events.EventDispatcher", function(e) {
                this._listeners = {}, this._eventTarget = e || this
            });
            (o = W.prototype).addEventListener = function(e, t, o, s, i) {
                i = i || 0;
                var n, l, a = this._listeners[e],
                    r = 0;
                for (this !== m || g || m.wake(), null == a && (this._listeners[e] = a = []), l = a.length; - 1 < --l;)(n = a[l]).c === t && n.s === o ? a.splice(l, 1) : 0 === r && n.pr < i && (r = l + 1);
                a.splice(r, 0, {
                    c: t,
                    s: o,
                    up: s,
                    pr: i
                })
            }, o.removeEventListener = function(e, t) {
                var o, s = this._listeners[e];
                if (s)
                    for (o = s.length; - 1 < --o;)
                        if (s[o].c === t) return void s.splice(o, 1)
            }, o.dispatchEvent = function(e) {
                var t, o, s, i = this._listeners[e];
                if (i)
                    for (1 < (t = i.length) && (i = i.slice(0)), o = this._eventTarget; - 1 < --t;)(s = i[t]) && (s.up ? s.c.call(s.s || o, {
                        type: e,
                        target: o
                    }) : s.c.call(s.s || o))
            };
            var F = _.requestAnimationFrame,
                C = _.cancelAnimationFrame,
                H = Date.now || function() {
                    return (new Date).getTime()
                },
                U = H();
            for (t = (e = ["ms", "moz", "webkit", "o"]).length; - 1 < --t && !F;) F = _[e[t] + "RequestAnimationFrame"], C = _[e[t] + "CancelAnimationFrame"] || _[e[t] + "CancelRequestAnimationFrame"];
            c("Ticker", function(e, t) {
                var i, n, l, a, r, d = this,
                    u = H(),
                    o = !(!1 === t || !F) && "auto",
                    h = 500,
                    c = 33,
                    _ = function(e) {
                        var t, o, s = H() - U;
                        h < s && (u += s - c), U += s, d.time = (U - u) / 1e3, t = d.time - r, (!i || 0 < t || !0 === e) && (d.frame++, r += t + (a <= t ? .004 : a - t), o = !0), !0 !== e && (l = n(_)), o && d.dispatchEvent("tick")
                    };
                W.call(d), d.time = d.frame = 0, d.tick = function() {
                    _(!0)
                }, d.lagSmoothing = function(e, t) {
                    h = e || 1e10, c = Math.min(t, h, 0)
                }, d.sleep = function() {
                    null != l && (o && C ? C(l) : clearTimeout(l), n = S, l = null, d === m && (g = !1))
                }, d.wake = function(e) {
                    null !== l ? d.sleep() : e ? u += -U + (U = H()) : 10 < d.frame && (U = H() - h + 5), n = 0 === i ? S : o && F ? F : function(e) {
                        return setTimeout(e, 1e3 * (r - d.time) + 1 | 0)
                    }, d === m && (g = !0), _(2)
                }, d.fps = function(e) {
                    if (!arguments.length) return i;
                    a = 1 / ((i = e) || 60), r = this.time + a, d.wake()
                }, d.useRAF = function(e) {
                    if (!arguments.length) return o;
                    d.sleep(), o = e, d.fps(i)
                }, d.fps(e), setTimeout(function() {
                    "auto" === o && d.frame < 5 && "hidden" !== document.visibilityState && d.useRAF(!1)
                }, 1500)
            }), (o = h.Ticker.prototype = new h.events.EventDispatcher).constructor = h.Ticker;
            var d = c("core.FWDAnim", function(e, t) {
                if (this.vars = t = t || {}, this._duration = this._totalDuration = e || 0, this._delay = Number(t.delay) || 0, this._timeScale = 1, this._active = !0 === t.immediateRender, this.data = t.data, this._reversed = !0 === t.reversed, G) {
                    g || m.wake();
                    var o = this.vars.useFrames ? Q : G;
                    o.add(this, o._time), this.vars.paused && this.paused(!0)
                }
            });
            m = d.ticker = new h.Ticker, (o = d.prototype)._dirty = o._gc = o._initted = o._paused = !1, o._totalTime = o._time = 0, o._rawPrevTime = -1, o._next = o._last = o._onUpdate = o._timeline = o.timeline = null, o._paused = !1;
            var u = function() {
                g && 2e3 < H() - U && m.wake(), setTimeout(u, 2e3)
            };
            u(), o.play = function(e, t) {
                return null != e && this.seek(e, t), this.reversed(!1).paused(!1)
            }, o.pause = function(e, t) {
                return null != e && this.seek(e, t), this.paused(!0)
            }, o.resume = function(e, t) {
                return null != e && this.seek(e, t), this.paused(!1)
            }, o.seek = function(e, t) {
                return this.totalTime(Number(e), !1 !== t)
            }, o.restart = function(e, t) {
                return this.reversed(!1).paused(!1).totalTime(e ? -this._delay : 0, !1 !== t, !0)
            }, o.reverse = function(e, t) {
                return null != e && this.seek(e || this.totalDuration(), t), this.reversed(!0).paused(!1)
            }, o.render = function(e, t, o) {}, o.invalidate = function() {
                return this._time = this._totalTime = 0, this._initted = this._gc = !1, this._rawPrevTime = -1, !this._gc && this.timeline || this._enabled(!0), this
            }, o.isActive = function() {
                var e, t = this._timeline,
                    o = this._startTime;
                return !t || !this._gc && !this._paused && t.isActive() && (e = t.rawTime()) >= o && e < o + this.totalDuration() / this._timeScale
            }, o._enabled = function(e, t) {
                return g || m.wake(), this._gc = !e, this._active = this.isActive(), !0 !== t && (e && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !e && this.timeline && this._timeline._remove(this, !0)), !1
            }, o._kill = function(e, t) {
                return this._enabled(!1, !1)
            }, o.kill = function(e, t) {
                return this._kill(e, t), this
            }, o._uncache = function(e) {
                for (var t = e ? this : this.timeline; t;) t._dirty = !0, t = t.timeline;
                return this
            }, o._swapSelfInParams = function(e) {
                for (var t = e.length, o = e.concat(); - 1 < --t;) "{self}" === e[t] && (o[t] = this);
                return o
            }, o._callback = function(e) {
                var t = this.vars,
                    o = t[e],
                    s = t[e + "Params"],
                    i = t[e + "Scope"] || t.callbackScope || this;
                switch (s ? s.length : 0) {
                    case 0:
                        o.call(i);
                        break;
                    case 1:
                        o.call(i, s[0]);
                        break;
                    case 2:
                        o.call(i, s[0], s[1]);
                        break;
                    default:
                        o.apply(i, s)
                }
            }, o.eventCallback = function(e, t, o, s) {
                if ("on" === (e || "").substr(0, 2)) {
                    var i = this.vars;
                    if (1 === arguments.length) return i[e];
                    null == t ? delete i[e] : (i[e] = t, i[e + "Params"] = P(o) && -1 !== o.join("").indexOf("{self}") ? this._swapSelfInParams(o) : o, i[e + "Scope"] = s), "onUpdate" === e && (this._onUpdate = t)
                }
                return this
            }, o.delay = function(e) {
                return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + e - this._delay), this._delay = e, this) : this._delay
            }, o.duration = function(e) {
                return arguments.length ? (this._duration = this._totalDuration = e, this._uncache(!0), this._timeline.smoothChildTiming && 0 < this._time && this._time < this._duration && 0 !== e && this.totalTime(this._totalTime * (e / this._duration), !0), this) : (this._dirty = !1, this._duration)
            }, o.totalDuration = function(e) {
                return this._dirty = !1, arguments.length ? this.duration(e) : this._totalDuration
            }, o.time = function(e, t) {
                return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(e > this._duration ? this._duration : e, t)) : this._time
            }, o.totalTime = function(e, t, o) {
                if (g || m.wake(), !arguments.length) return this._totalTime;
                if (this._timeline) {
                    if (e < 0 && !o && (e += this.totalDuration()), this._timeline.smoothChildTiming) {
                        this._dirty && this.totalDuration();
                        var s = this._totalDuration,
                            i = this._timeline;
                        if (s < e && !o && (e = s), this._startTime = (this._paused ? this._pauseTime : i._time) - (this._reversed ? s - e : e) / this._timeScale, i._dirty || this._uncache(!1), i._timeline)
                            for (; i._timeline;) i._timeline._time !== (i._startTime + i._totalTime) / i._timeScale && i.totalTime(i._totalTime, !0), i = i._timeline
                    }
                    this._gc && this._enabled(!0, !1), this._totalTime === e && 0 !== this._duration || (I.length && K(), this.render(e, t, !1), I.length && K())
                }
                return this
            }, o.progress = o.totalProgress = function(e, t) {
                var o = this.duration();
                return arguments.length ? this.totalTime(o * e, t) : o ? this._time / o : this.ratio
            }, o.startTime = function(e) {
                return arguments.length ? (e !== this._startTime && (this._startTime = e, this.timeline && this.timeline._sortChildren && this.timeline.add(this, e - this._delay)), this) : this._startTime
            }, o.endTime = function(e) {
                return this._startTime + (0 != e ? this.totalDuration() : this.duration()) / this._timeScale
            }, o.timeScale = function(e) {
                if (!arguments.length) return this._timeScale;
                if (e = e || v, this._timeline && this._timeline.smoothChildTiming) {
                    var t = this._pauseTime,
                        o = t || 0 === t ? t : this._timeline.totalTime();
                    this._startTime = o - (o - this._startTime) * this._timeScale / e
                }
                return this._timeScale = e, this._uncache(!1)
            }, o.reversed = function(e) {
                return arguments.length ? (e != this._reversed && (this._reversed = e, this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)), this) : this._reversed
            }, o.paused = function(e) {
                if (!arguments.length) return this._paused;
                var t, o, s = this._timeline;
                return e != this._paused && s && (g || e || m.wake(), o = (t = s.rawTime()) - this._pauseTime, !e && s.smoothChildTiming && (this._startTime += o, this._uncache(!1)), this._pauseTime = e ? t : null, this._paused = e, this._active = this.isActive(), !e && 0 != o && this._initted && this.duration() && (t = s.smoothChildTiming ? this._totalTime : (t - this._startTime) / this._timeScale, this.render(t, t === this._totalTime, !0))), this._gc && !e && this._enabled(!0, !1), this
            };
            var E = c("core.FWDSimpleTimeline", function(e) {
                d.call(this, 0, e), this.autoRemoveChildren = this.smoothChildTiming = !0
            });
            (o = E.prototype = new d).constructor = E, o.kill()._gc = !1, o._first = o._last = o._recent = null, o._sortChildren = !1, o.add = o.insert = function(e, t, o, s) {
                var i, n;
                if (e._startTime = Number(t || 0) + e._delay, e._paused && this !== e._timeline && (e._pauseTime = e._startTime + (this.rawTime() - e._startTime) / e._timeScale), e.timeline && e.timeline._remove(e, !0), e.timeline = e._timeline = this, e._gc && e._enabled(!0, !0), i = this._last, this._sortChildren)
                    for (n = e._startTime; i && i._startTime > n;) i = i._prev;
                return i ? (e._next = i._next, i._next = e) : (e._next = this._first, this._first = e), e._next ? e._next._prev = e : this._last = e, e._prev = i, this._recent = e, this._timeline && this._uncache(!0), this
            }, o._remove = function(e, t) {
                return e.timeline === this && (t || e._enabled(!1, !0), e._prev ? e._prev._next = e._next : this._first === e && (this._first = e._next), e._next ? e._next._prev = e._prev : this._last === e && (this._last = e._prev), e._next = e._prev = e.timeline = null, e === this._recent && (this._recent = this._last), this._timeline && this._uncache(!0)), this
            }, o.render = function(e, t, o) {
                var s, i = this._first;
                for (this._totalTime = this._time = this._rawPrevTime = e; i;) s = i._next, (i._active || e >= i._startTime && !i._paused) && (i._reversed ? i.render((i._dirty ? i.totalDuration() : i._totalDuration) - (e - i._startTime) * i._timeScale, t, o) : i.render((e - i._startTime) * i._timeScale, t, o)), i = s
            }, o.rawTime = function() {
                return g || m.wake(), this._totalTime
            };
            var V = c("FWDTweenLite", function(e, t, o) {
                    if (d.call(this, t, o), this.render = V.prototype.render, null == e) throw "Cannot tween a null target.";
                    this.target = e = "string" != typeof e ? e : V.selector(e) || e;
                    var s, i, n, l = e.jquery || e.length && e !== _ && e[0] && (e[0] === _ || e[0].nodeType && e[0].style && !e.nodeType),
                        a = this.vars.overwrite;
                    if (this._overwrite = a = null == a ? z[V.defaultOverwrite] : "number" == typeof a ? a >> 0 : z[a], (l || e instanceof Array || e.push && P(e)) && "number" != typeof e[0])
                        for (this._targets = n = r(e), this._propLookup = [], this._siblings = [], s = 0; s < n.length; s++)(i = n[s]) ? "string" != typeof i ? i.length && i !== _ && i[0] && (i[0] === _ || i[0].nodeType && i[0].style && !i.nodeType) ? (n.splice(s--, 1), this._targets = n = n.concat(r(i))) : (this._siblings[s] = J(i, this, !1), 1 === a && 1 < this._siblings[s].length && Z(i, this, null, 1, this._siblings[s])) : "string" == typeof(i = n[s--] = V.selector(i)) && n.splice(s + 1, 1) : n.splice(s--, 1);
                    else this._propLookup = {}, this._siblings = J(e, this, !1), 1 === a && 1 < this._siblings.length && Z(e, this, null, 1, this._siblings);
                    (this.vars.immediateRender || 0 === t && 0 === this._delay && !1 !== this.vars.immediateRender) && (this._time = -v, this.render(Math.min(0, -this._delay)))
                }, !0),
                O = function(e) {
                    return e && e.length && e !== _ && e[0] && (e[0] === _ || e[0].nodeType && e[0].style && !e.nodeType)
                };
            (o = V.prototype = new d).constructor = V, o.kill()._gc = !1, o.ratio = 0, o._firstPT = o._targets = o._overwrittenProps = o._startAt = null, o._notifyPluginsOfEnabled = o._lazy = !1, V.version = "1.19.0", V.defaultEase = o._ease = new B(null, null, 1, 1), V.defaultOverwrite = "auto", V.ticker = m, V.autoSleep = 120, V.lagSmoothing = function(e, t) {
                m.lagSmoothing(e, t)
            }, V.selector = _.$ || _.jQuery || function(e) {
                var t = _.$ || _.jQuery;
                return t ? (V.selector = t)(e) : "undefined" == typeof document ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById("#" === e.charAt(0) ? e.substr(1) : e)
            };
            var I = [],
                k = {},
                x = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
                A = function(e) {
                    for (var t, o = this._firstPT; o;) t = o.blob ? e ? this.join("") : this.start : o.c * e + o.s, o.m ? t = o.m(t, this._target || o.t) : t < 1e-6 && -1e-6 < t && (t = 0), o.f ? o.fp ? o.t[o.p](o.fp, t) : o.t[o.p](t) : o.t[o.p] = t, o = o._next
                },
                L = function(e, t, o, s) {
                    var i, n, l, a, r, d, u, h = [e, t],
                        c = 0,
                        _ = "",
                        f = 0;
                    for (h.start = e, o && (o(h), e = h[0], t = h[1]), h.length = 0, i = e.match(x) || [], n = t.match(x) || [], s && (s._next = null, s.blob = 1, h._firstPT = h._applyPT = s), r = n.length, a = 0; a < r; a++) u = n[a], _ += (d = t.substr(c, t.indexOf(u, c) - c)) || !a ? d : ",", c += d.length, f ? f = (f + 1) % 5 : "rgba(" === d.substr(-5) && (f = 1), u === i[a] || i.length <= a ? _ += u : (_ && (h.push(_), _ = ""), l = parseFloat(i[a]), h.push(l), h._firstPT = {
                        _next: h._firstPT,
                        t: h,
                        p: h.length - 1,
                        s: l,
                        c: ("=" === u.charAt(1) ? parseInt(u.charAt(0) + "1", 10) * parseFloat(u.substr(2)) : parseFloat(u) - l) || 0,
                        f: 0,
                        m: f && f < 4 ? Math.round : 0
                    }), c += u.length;
                    return (_ += t.substr(c)) && h.push(_), h.setRatio = A, h
                },
                M = function(e, t, o, s, i, n, l, a, r) {
                    "function" == typeof s && (s = s(r || 0, e));
                    var d, u = "get" === o ? e[t] : o,
                        h = typeof e[t],
                        c = "string" == typeof s && "=" === s.charAt(1),
                        _ = {
                            t: e,
                            p: t,
                            s: u,
                            f: "function" == h,
                            pg: 0,
                            n: i || t,
                            m: n ? "function" == typeof n ? n : Math.round : 0,
                            pr: 0,
                            c: c ? parseInt(s.charAt(0) + "1", 10) * parseFloat(s.substr(2)) : parseFloat(s) - u || 0
                        };
                    if ("number" != h && ("function" == h && "get" === o && (d = t.indexOf("set") || "function" != typeof e["get" + t.substr(3)] ? t : "get" + t.substr(3), _.s = u = l ? e[d](l) : e[d]()), "string" == typeof u && (l || isNaN(u)) ? (_.fp = l, _ = {
                            t: L(u, s, a || V.defaultStringFilter, _),
                            p: "setRatio",
                            s: 0,
                            c: 1,
                            f: 2,
                            pg: 0,
                            n: i || t,
                            pr: 0,
                            m: 0
                        }) : c || (_.s = parseFloat(u), _.c = parseFloat(s) - _.s || 0)), _.c) return (_._next = this._firstPT) && (_._next._prev = _), this._firstPT = _
                },
                R = V._internals = {
                    isArray: P,
                    isSelector: O,
                    lazyTweens: I,
                    blobDif: L
                },
                N = V._plugins = {},
                j = R.tweenLookup = {},
                Y = 0,
                X = R.reservedProps = {
                    ease: 1,
                    delay: 1,
                    overwrite: 1,
                    onComplete: 1,
                    onCompleteParams: 1,
                    onCompleteScope: 1,
                    useFrames: 1,
                    runBackwards: 1,
                    startAt: 1,
                    onUpdate: 1,
                    onUpdateParams: 1,
                    onUpdateScope: 1,
                    onStart: 1,
                    onStartParams: 1,
                    onStartScope: 1,
                    onReverseComplete: 1,
                    onReverseCompleteParams: 1,
                    onReverseCompleteScope: 1,
                    onRepeat: 1,
                    onRepeatParams: 1,
                    onRepeatScope: 1,
                    easeParams: 1,
                    yoyo: 1,
                    immediateRender: 1,
                    repeat: 1,
                    repeatDelay: 1,
                    data: 1,
                    paused: 1,
                    reversed: 1,
                    autoCSS: 1,
                    lazy: 1,
                    onOverwrite: 1,
                    callbackScope: 1,
                    stringFilter: 1,
                    id: 1
                },
                z = {
                    none: 0,
                    all: 1,
                    auto: 2,
                    concurrent: 3,
                    allOnStart: 4,
                    preexisting: 5,
                    true: 1,
                    false: 0
                },
                Q = d._rootFramesTimeline = new E,
                G = d._rootTimeline = new E,
                q = 30,
                K = R.lazyRender = function() {
                    var e, t = I.length;
                    for (k = {}; - 1 < --t;)(e = I[t]) && !1 !== e._lazy && (e.render(e._lazy[0], e._lazy[1], !0), e._lazy = !1);
                    I.length = 0
                };
            G._startTime = m.time, Q._startTime = m.frame, G._active = Q._active = !0, setTimeout(K, 1), d._updateRoot = V.render = function() {
                var e, t, o;
                if (I.length && K(), G.render((m.time - G._startTime) * G._timeScale, !1, !1), Q.render((m.frame - Q._startTime) * Q._timeScale, !1, !1), I.length && K(), m.frame >= q) {
                    for (o in q = m.frame + (parseInt(V.autoSleep, 10) || 120), j) {
                        for (e = (t = j[o].tweens).length; - 1 < --e;) t[e]._gc && t.splice(e, 1);
                        0 === t.length && delete j[o]
                    }
                    if ((!(o = G._first) || o._paused) && V.autoSleep && !Q._first && 1 === m._listeners.tick.length) {
                        for (; o && o._paused;) o = o._next;
                        o || m.sleep()
                    }
                }
            }, m.addEventListener("tick", d._updateRoot);
            var J = function(e, t, o) {
                    var s, i, n = e._gsTweenID;
                    if (j[n || (e._gsTweenID = n = "t" + Y++)] || (j[n] = {
                            target: e,
                            tweens: []
                        }), t && ((s = j[n].tweens)[i = s.length] = t, o))
                        for (; - 1 < --i;) s[i] === t && s.splice(i, 1);
                    return j[n].tweens
                },
                $ = function(e, t, o, s) {
                    var i, n, l = e.vars.onOverwrite;
                    return l && (i = l(e, t, o, s)), (l = V.onOverwrite) && (n = l(e, t, o, s)), !1 !== i && !1 !== n
                },
                Z = function(e, t, o, s, i) {
                    var n, l, a, r;
                    if (1 === s || 4 <= s) {
                        for (r = i.length, n = 0; n < r; n++)
                            if ((a = i[n]) !== t) a._gc || a._kill(null, e, t) && (l = !0);
                            else if (5 === s) break;
                        return l
                    }
                    var d, u = t._startTime + v,
                        h = [],
                        c = 0,
                        _ = 0 === t._duration;
                    for (n = i.length; - 1 < --n;)(a = i[n]) === t || a._gc || a._paused || (a._timeline !== t._timeline ? (d = d || ee(t, 0, _), 0 === ee(a, d, _) && (h[c++] = a)) : a._startTime <= u && a._startTime + a.totalDuration() / a._timeScale > u && ((_ || !a._initted) && u - a._startTime <= 2e-10 || (h[c++] = a)));
                    for (n = c; - 1 < --n;)
                        if (a = h[n], 2 === s && a._kill(o, e, t) && (l = !0), 2 !== s || !a._firstPT && a._initted) {
                            if (2 !== s && !$(a, t)) continue;
                            a._enabled(!1, !1) && (l = !0)
                        }
                    return l
                },
                ee = function(e, t, o) {
                    for (var s = e._timeline, i = s._timeScale, n = e._startTime; s._timeline;) {
                        if (n += s._startTime, i *= s._timeScale, s._paused) return -100;
                        s = s._timeline
                    }
                    return t < (n /= i) ? n - t : o && n === t || !e._initted && n - t < 2 * v ? v : (n += e.totalDuration() / e._timeScale / i) > t + v ? 0 : n - t - v
                };
            o._init = function() {
                var e, t, o, s, i, n, l = this.vars,
                    a = this._overwrittenProps,
                    r = this._duration,
                    d = !!l.immediateRender,
                    u = l.ease;
                if (l.startAt) {
                    for (s in this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()), i = {}, l.startAt) i[s] = l.startAt[s];
                    if (i.overwrite = !1, i.immediateRender = !0, i.lazy = d && !1 !== l.lazy, i.startAt = i.delay = null, this._startAt = V.to(this.target, 0, i), d)
                        if (0 < this._time) this._startAt = null;
                        else if (0 !== r) return
                } else if (l.runBackwards && 0 !== r)
                    if (this._startAt) this._startAt.render(-1, !0), this._startAt.kill(), this._startAt = null;
                    else {
                        for (s in 0 !== this._time && (d = !1), o = {}, l) X[s] && "autoCSS" !== s || (o[s] = l[s]);
                        if (o.overwrite = 0, o.data = "isFromStart", o.lazy = d && !1 !== l.lazy, o.immediateRender = d, this._startAt = V.to(this.target, 0, o), d) {
                            if (0 === this._time) return
                        } else this._startAt._init(), this._startAt._enabled(!1), this.vars.immediateRender && (this._startAt = null)
                    }
                if (this._ease = u = u ? u instanceof B ? u : "function" == typeof u ? new B(u, l.easeParams) : D[u] || V.defaultEase : V.defaultEase, l.easeParams instanceof Array && u.config && (this._ease = u.config.apply(u, l.easeParams)), this._easeType = this._ease._type, this._easePower = this._ease._power, this._firstPT = null, this._targets)
                    for (n = this._targets.length, e = 0; e < n; e++) this._initProps(this._targets[e], this._propLookup[e] = {}, this._siblings[e], a ? a[e] : null, e) && (t = !0);
                else t = this._initProps(this.target, this._propLookup, this._siblings, a, 0);
                if (t && V._onPluginEvent("_onInitAllProps", this), a && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)), l.runBackwards)
                    for (o = this._firstPT; o;) o.s += o.c, o.c = -o.c, o = o._next;
                this._onUpdate = l.onUpdate, this._initted = !0
            }, o._initProps = function(e, t, o, s, i) {
                var n, l, a, r, d, u;
                if (null == e) return !1;
                for (n in k[e._gsTweenID] && K(), this.vars.css || e.style && e !== _ && e.nodeType && N.css && !1 !== this.vars.autoCSS && function(e, t) {
                        var o, s = {};
                        for (o in e) X[o] || o in t && "transform" !== o && "x" !== o && "y" !== o && "width" !== o && "height" !== o && "className" !== o && "border" !== o || !(!N[o] || N[o] && N[o]._autoCSS) || (s[o] = e[o], delete e[o]);
                        e.css = s
                    }(this.vars, e), this.vars)
                    if (u = this.vars[n], X[n]) u && (u instanceof Array || u.push && P(u)) && -1 !== u.join("").indexOf("{self}") && (this.vars[n] = u = this._swapSelfInParams(u, this));
                    else if (N[n] && (r = new N[n])._onInitTween(e, this.vars[n], this, i)) {
                    for (this._firstPT = d = {
                            _next: this._firstPT,
                            t: r,
                            p: "setRatio",
                            s: 0,
                            c: 1,
                            f: 1,
                            n: n,
                            pg: 1,
                            pr: r._priority,
                            m: 0
                        }, l = r._overwriteProps.length; - 1 < --l;) t[r._overwriteProps[l]] = this._firstPT;
                    (r._priority || r._onInitAllProps) && (a = !0), (r._onDisable || r._onEnable) && (this._notifyPluginsOfEnabled = !0), d._next && (d._next._prev = d)
                } else t[n] = M.call(this, e, n, "get", u, n, 0, null, this.vars.stringFilter, i);
                return s && this._kill(s, e) ? this._initProps(e, t, o, s, i) : 1 < this._overwrite && this._firstPT && 1 < o.length && Z(e, this, t, this._overwrite, o) ? (this._kill(t, e), this._initProps(e, t, o, s, i)) : (this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration) && (k[e._gsTweenID] = !0), a)
            }, o.render = function(e, t, o) {
                var s, i, n, l, a = this._time,
                    r = this._duration,
                    d = this._rawPrevTime;
                if (r - 1e-7 <= e) this._totalTime = this._time = r, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1, this._reversed || (s = !0, i = "onComplete", o = o || this._timeline.autoRemoveChildren), 0 === r && (!this._initted && this.vars.lazy && !o || (this._startTime === this._timeline._duration && (e = 0), (d < 0 || e <= 0 && -1e-7 <= e || d === v && "isPause" !== this.data) && d !== e && (o = !0, v < d && (i = "onReverseComplete")), this._rawPrevTime = l = !t || e || d === e ? e : v));
                else if (e < 1e-7) this._totalTime = this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== a || 0 === r && 0 < d) && (i = "onReverseComplete", s = this._reversed), e < 0 && (this._active = !1, 0 === r && (!this._initted && this.vars.lazy && !o || (0 <= d && (d !== v || "isPause" !== this.data) && (o = !0), this._rawPrevTime = l = !t || e || d === e ? e : v))), this._initted || (o = !0);
                else if (this._totalTime = this._time = e, this._easeType) {
                    var u = e / r,
                        h = this._easeType,
                        c = this._easePower;
                    (1 === h || 3 === h && .5 <= u) && (u = 1 - u), 3 === h && (u *= 2), 1 === c ? u *= u : 2 === c ? u *= u * u : 3 === c ? u *= u * u * u : 4 === c && (u *= u * u * u * u), this.ratio = 1 === h ? 1 - u : 2 === h ? u : e / r < .5 ? u / 2 : 1 - u / 2
                } else this.ratio = this._ease.getRatio(e / r);
                if (this._time !== a || o) {
                    if (!this._initted) {
                        if (this._init(), !this._initted || this._gc) return;
                        if (!o && this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration)) return this._time = this._totalTime = a, this._rawPrevTime = d, I.push(this), void(this._lazy = [e, t]);
                        this._time && !s ? this.ratio = this._ease.getRatio(this._time / r) : s && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                    }
                    for (!1 !== this._lazy && (this._lazy = !1), this._active || !this._paused && this._time !== a && 0 <= e && (this._active = !0), 0 === a && (this._startAt && (0 <= e ? this._startAt.render(e, t, o) : i || (i = "_dummyGS")), this.vars.onStart && (0 === this._time && 0 !== r || t || this._callback("onStart"))), n = this._firstPT; n;) n.f ? n.t[n.p](n.c * this.ratio + n.s) : n.t[n.p] = n.c * this.ratio + n.s, n = n._next;
                    this._onUpdate && (e < 0 && this._startAt && -1e-4 !== e && this._startAt.render(e, t, o), t || (this._time !== a || s || o) && this._callback("onUpdate")), i && (this._gc && !o || (e < 0 && this._startAt && !this._onUpdate && -1e-4 !== e && this._startAt.render(e, t, o), s && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !t && this.vars[i] && this._callback(i), 0 === r && this._rawPrevTime === v && l !== v && (this._rawPrevTime = 0)))
                }
            }, o._kill = function(e, t, o) {
                if ("all" === e && (e = null), null == e && (null == t || t === this.target)) return this._lazy = !1, this._enabled(!1, !1);
                t = "string" != typeof t ? t || this._targets || this.target : V.selector(t) || t;
                var s, i, n, l, a, r, d, u, h, c = o && this._time && o._startTime === this._startTime && this._timeline === o._timeline;
                if ((P(t) || O(t)) && "number" != typeof t[0])
                    for (s = t.length; - 1 < --s;) this._kill(e, t[s], o) && (r = !0);
                else {
                    if (this._targets) {
                        for (s = this._targets.length; - 1 < --s;)
                            if (t === this._targets[s]) {
                                a = this._propLookup[s] || {}, this._overwrittenProps = this._overwrittenProps || [], i = this._overwrittenProps[s] = e ? this._overwrittenProps[s] || {} : "all";
                                break
                            }
                    } else {
                        if (t !== this.target) return !1;
                        a = this._propLookup, i = this._overwrittenProps = e ? this._overwrittenProps || {} : "all"
                    }
                    if (a) {
                        if (d = e || a, u = e !== i && "all" !== i && e !== a && ("object" != typeof e || !e._tempKill), o && (V.onOverwrite || this.vars.onOverwrite)) {
                            for (n in d) a[n] && (h || (h = []), h.push(n));
                            if ((h || !e) && !$(this, o, t, h)) return !1
                        }
                        for (n in d)(l = a[n]) && (c && (l.f ? l.t[l.p](l.s) : l.t[l.p] = l.s, r = !0), l.pg && l.t._kill(d) && (r = !0), l.pg && 0 !== l.t._overwriteProps.length || (l._prev ? l._prev._next = l._next : l === this._firstPT && (this._firstPT = l._next), l._next && (l._next._prev = l._prev), l._next = l._prev = null), delete a[n]), u && (i[n] = 1);
                        !this._firstPT && this._initted && this._enabled(!1, !1)
                    }
                }
                return r
            }, o.invalidate = function() {
                return this._notifyPluginsOfEnabled && V._onPluginEvent("_onDisable", this), this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null, this._notifyPluginsOfEnabled = this._active = this._lazy = !1, this._propLookup = this._targets ? {} : [], d.prototype.invalidate.call(this), this.vars.immediateRender && (this._time = -v, this.render(Math.min(0, -this._delay))), this
            }, o._enabled = function(e, t) {
                if (g || m.wake(), e && this._gc) {
                    var o, s = this._targets;
                    if (s)
                        for (o = s.length; - 1 < --o;) this._siblings[o] = J(s[o], this, !0);
                    else this._siblings = J(this.target, this, !0)
                }
                return d.prototype._enabled.call(this, e, t), !(!this._notifyPluginsOfEnabled || !this._firstPT) && V._onPluginEvent(e ? "_onEnable" : "_onDisable", this)
            }, V.to = function(e, t, o) {
                return new V(e, t, o)
            }, V.from = function(e, t, o) {
                return o.runBackwards = !0, o.immediateRender = 0 != o.immediateRender, new V(e, t, o)
            }, V.fromTo = function(e, t, o, s) {
                return s.startAt = o, s.immediateRender = 0 != s.immediateRender && 0 != o.immediateRender, new V(e, t, s)
            }, V.delayedCall = function(e, t, o, s, i) {
                return new V(t, 0, {
                    delay: e,
                    onComplete: t,
                    onCompleteParams: o,
                    callbackScope: s,
                    onReverseComplete: t,
                    onReverseCompleteParams: o,
                    immediateRender: !1,
                    lazy: !1,
                    useFrames: i,
                    overwrite: 0
                })
            }, V.set = function(e, t) {
                return new V(e, 0, t)
            }, V.getTweensOf = function(e, t) {
                if (null == e) return [];
                var o, s, i, n;
                if (e = "string" != typeof e ? e : V.selector(e) || e, (P(e) || O(e)) && "number" != typeof e[0]) {
                    for (o = e.length, s = []; - 1 < --o;) s = s.concat(V.getTweensOf(e[o], t));
                    for (o = s.length; - 1 < --o;)
                        for (n = s[o], i = o; - 1 < --i;) n === s[i] && s.splice(o, 1)
                } else
                    for (o = (s = J(e).concat()).length; - 1 < --o;)(s[o]._gc || t && !s[o].isActive()) && s.splice(o, 1);
                return s
            }, V.killTweensOf = V.killDelayedCallsTo = function(e, t, o) {
                "object" == typeof t && (o = t, t = !1);
                for (var s = V.getTweensOf(e, t), i = s.length; - 1 < --i;) s[i]._kill(o, e)
            };
            var te = c("plugins.TweenPlugin", function(e, t) {
                this._overwriteProps = (e || "").split(","), this._propName = this._overwriteProps[0], this._priority = t || 0, this._super = te.prototype
            }, !0);
            if (o = te.prototype, te.version = "1.19.0", te.API = 2, o._firstPT = null, o._addTween = M, o.setRatio = A, o._kill = function(e) {
                    var t, o = this._overwriteProps,
                        s = this._firstPT;
                    if (null != e[this._propName]) this._overwriteProps = [];
                    else
                        for (t = o.length; - 1 < --t;) null != e[o[t]] && o.splice(t, 1);
                    for (; s;) null != e[s.n] && (s._next && (s._next._prev = s._prev), s._prev ? (s._prev._next = s._next, s._prev = null) : this._firstPT === s && (this._firstPT = s._next)), s = s._next;
                    return !1
                }, o._mod = o._roundProps = function(e) {
                    for (var t, o = this._firstPT; o;)(t = e[this._propName] || null != o.n && e[o.n.split(this._propName + "_").join("")]) && "function" == typeof t && (2 === o.f ? o.t._applyPT.m = t : o.m = t), o = o._next
                }, V._onPluginEvent = function(e, t) {
                    var o, s, i, n, l, a = t._firstPT;
                    if ("_onInitAllProps" === e) {
                        for (; a;) {
                            for (l = a._next, s = i; s && s.pr > a.pr;) s = s._next;
                            (a._prev = s ? s._prev : n) ? a._prev._next = a: i = a, (a._next = s) ? s._prev = a : n = a, a = l
                        }
                        a = t._firstPT = i
                    }
                    for (; a;) a.pg && "function" == typeof a.t[e] && a.t[e]() && (o = !0), a = a._next;
                    return o
                }, te.activate = function(e) {
                    for (var t = e.length; - 1 < --t;) e[t].API === te.API && (N[(new e[t])._propName] = e[t]);
                    return !0
                }, n.plugin = function(e) {
                    if (!(e && e.propName && e.init && e.API)) throw "illegal plugin definition.";
                    var t, o = e.propName,
                        s = e.priority || 0,
                        i = e.overwriteProps,
                        n = {
                            init: "_onInitTween",
                            set: "setRatio",
                            kill: "_kill",
                            round: "_mod",
                            mod: "_mod",
                            initAll: "_onInitAllProps"
                        },
                        l = c("plugins." + o.charAt(0).toUpperCase() + o.substr(1) + "Plugin", function() {
                            te.call(this, o, s), this._overwriteProps = i || []
                        }, !0 === e.fwd_global),
                        a = l.prototype = new te(o);
                    for (t in (a.constructor = l).API = e.API, n) "function" == typeof e[t] && (a[n[t]] = e[t]);
                    return l.version = e.version, te.activate([l]), l
                }, e = _._fwd_gsQueue) {
                for (t = 0; t < e.length; t++) e[t]();
                for (o in w) w[o].func || _.console.log("GSAP encountered missing dependency: " + o)
            }
            g = !1
        }
    }("undefined" != typeof fwd_module && fwd_module.exports && "undefined" != typeof fwd_global ? fwd_global : this || window, "FWDAnimation")
}

function A(t, e, o) {
var s = e || 0,
    i = 0;
"string" == typeof t ? (i = o || t.length, this.a = function(e) {
    return 255 & t.charCodeAt(e + s)
}) : "unknown" == typeof t && (i = o || IEBinary_getLength(t), this.a = function(e) {
    return IEBinary_getByteAt(t, e + s)
}), this.l = function(e, t) {
    for (var o = Array(t), s = 0; s < t; s++) o[s] = this.a(e + s);
    return o
}, this.h = function() {
    return i
}, this.d = function(e, t) {
    return 0 != (this.a(e) & 1 << t)
}, this.w = function(e) {
    return (e = (this.a(e + 1) << 8) + this.a(e)) < 0 && (e += 65536), e
}, this.i = function(e) {
    var t = this.a(e);
    return (t = (((t << 8) + this.a(e + 1) << 8) + this.a(e + 2) << 8) + (e = this.a(e + 3))) < 0 && (t += 4294967296), t
}, this.o = function(e) {
    var t = this.a(e);
    return (t = ((t << 8) + this.a(e + 1) << 8) + (e = this.a(e + 2))) < 0 && (t += 16777216), t
}, this.c = function(e, t) {
    for (var o = [], s = e, i = 0; s < e + t; s++, i++) o[i] = String.fromCharCode(this.a(s));
    return o.join("")
}, this.e = function(e, t, o) {
    switch (e = this.l(e, t), o.toLowerCase()) {
        case "utf-16":
        case "utf-16le":
        case "utf-16be":
            t = o;
            var s, i = 0,
                n = 1;
            o = 0, s = Math.min(s || e.length, e.length), 254 == e[0] && 255 == e[1] ? (t = !0, i = 2) : 255 == e[0] && 254 == e[1] && (t = !1, i = 2), t && (n = 0, o = 1), t = [];
            for (var l = 0; i < s; l++) {
                var a = e[i + n],
                    r = (a << 8) + e[i + o];
                i = i + 2;
                if (0 == r) break;
                a < 216 || 224 <= a ? t[l] = String.fromCharCode(r) : (a = (e[i + n] << 8) + e[i + o], i += 2, t[l] = String.fromCharCode(r, a))
            }(e = new String(t.join(""))).g = i;
            break;
        case "utf-8":
            for (s = 0, i = Math.min(i || e.length, e.length), 239 == e[0] && 187 == e[1] && 191 == e[2] && (s = 3), n = [], o = 0; s < i && 0 != (t = e[s++]); o++) t < 128 ? n[o] = String.fromCharCode(t) : 194 <= t && t < 224 ? (l = e[s++], n[o] = String.fromCharCode(((31 & t) << 6) + (63 & l))) : 224 <= t && t < 240 ? (l = e[s++], r = e[s++], n[o] = String.fromCharCode(((255 & t) << 12) + ((63 & l) << 6) + (63 & r))) : 240 <= t && t < 245 && (t = ((7 & t) << 18) + ((63 & (l = e[s++])) << 12) + ((63 & (r = e[s++])) << 6) + (63 & (a = e[s++])) - 65536, n[o] = String.fromCharCode(55296 + (t >> 10), 56320 + (1023 & t)));
            (e = new String(n.join(""))).g = s;
            break;
        default:
            for (i = [], n = n || e.length, s = 0; s < n && 0 != (o = e[s++]);) i[s - 1] = String.fromCharCode(o);
            (e = new String(i.join(""))).g = s
    }
    return e
}, this.f = function(e, t) {
    t()
}
}

function B(t, o, u) {
function h() {
    var e = null;
    return window.XMLHttpRequest ? e = new XMLHttpRequest : window.ActiveXObject && (e = new ActiveXObject("Microsoft.XMLHTTP")), e
}

function s(e, n) {
    var l, o;

    function s(e) {
        var t = ~~(e[0] / l) - o;
        return t < 0 && (t = 0), (e = 1 + ~~(e[1] / l) + o) >= blockTotal && (e = blockTotal - 1), [t, e]
    }

    function i(o, s) {
        for (; r[o[0]];)
            if (o[0]++, o[0] > o[1]) return void(s && s());
        for (; r[o[1]];)
            if (o[1]--, o[0] > o[1]) return void(s && s());
        var i = [o[0] * l, (o[1] + 1) * l - 1];
        ! function(e, t, o, s, i, n) {
            var l = h();
            l ? (void 0 === n && (n = !0), t && (void 0 !== l.onload ? l.onload = function() {
                "200" == l.status || "206" == l.status ? (l.fileSize = i || l.getResponseHeader("Content-Length"), t(l)) : o && o(), l = null
            } : l.onreadystatechange = function() {
                4 == l.readyState && ("200" == l.status || "206" == l.status ? (l.fileSize = i || l.getResponseHeader("Content-Length"), t(l)) : o && o(), l = null)
            }), l.open("GET", e, n), l.overrideMimeType && l.overrideMimeType("text/plain; charset=x-user-defined"), s && l.setRequestHeader("Range", "bytes=" + s[0] + "-" + s[1]), l.setRequestHeader("If-Modified-Since", "Sat, 1 Jan 1970 00:00:00 GMT"), l.send(null)) : o && o()
        }(e, function(e) {
            parseInt(e.getResponseHeader("Content-Length"), 10) == n && (o[0] = 0, o[1] = blockTotal - 1, i[0] = 0, i[1] = n - 1), e = {
                data: e.N || e.responseText,
                offset: i[0]
            };
            for (var t = o[0]; t <= o[1]; t++) r[t] = e;
            s && s()
        }, u, i, t, !!s)
    }
    var t, a = new A("", 0, n),
        r = [];
    for (var d in o = void 0 === o ? 0 : o, blockTotal = 1 + ~~((n - 1) / (l = l || 2048)), a) a.hasOwnProperty(d) && "function" == typeof a[d] && (this[d] = a[d]);
    this.a = function(e) {
        var t;
        return i(s([e, e])), "string" == typeof(t = r[~~(e / l)]).data ? 255 & t.data.charCodeAt(e - t.offset) : "unknown" == typeof t.data ? IEBinary_getByteAt(t.data, e - t.offset) : void 0
    }, this.f = function(e, t) {
        i(s(e), t)
    }
}
var e, i, n;
e = t, i = function(e) {
    e = parseInt(e.getResponseHeader("Content-Length"), 10) || -1, o(new s(t, e))
}, (n = h()) && (i && (void 0 !== n.onload ? n.onload = function() {
    "200" == n.status && i(this), n = null
} : n.onreadystatechange = function() {
    4 == n.readyState && ("200" == n.status && i(this), n = null)
}), n.open("HEAD", e, !0), n.send(null))
}
if (function(e) {
    var t = function() {
        var i = this;
        t.prototype;
        this.main_do = null, this.init = function() {
            this.setupScreen(), e.onerror = this.showError, this.screen.style.zIndex = 1e25, setTimeout(this.addConsoleToDom, 100), setInterval(this.position, 100)
        }, this.position = function() {
            var e = FWDUVPUtils.getScrollOffsets();
            i.setX(e.x), i.setY(e.y)
        }, this.addConsoleToDom = function() {
            -1 != navigator.userAgent.toLowerCase().indexOf("msie 7") ? document.getElementsByTagName("body")[0].appendChild(i.screen) : document.documentElement.appendChild(i.screen)
        }, this.setupScreen = function() {
            this.main_do = new FWDUVPDisplayObject("div", "absolute"), this.main_do.setOverflow("auto"), this.main_do.setWidth(300), this.main_do.setHeight(100), this.setWidth(300), this.setHeight(100), this.main_do.setBkColor("#FFFFFF"), this.addChild(this.main_do)
        }, this.showError = function(e, t, o) {
            var s = i.main_do.getInnerHTML() + "<br>JavaScript error: " + e + " on line " + o + " for " + t;
            i.main_do.setInnerHTML(s), i.main_do.screen.scrollTop = i.main_do.screen.scrollHeight
        }, this.log = function(e) {
            var t = i.main_do.getInnerHTML() + "<br>" + e;
            i.main_do.setInnerHTML(t), i.main_do.getScreen().scrollTop = 1e4
        }, this.init()
    };
    t.setPrototype = function() {
        t.prototype = new FWDUVPDisplayObject("div", "absolute")
    }, t.prototype = null, e.FWDConsole = t
}(window), document.write("<script type='text/vbscript'>\r\nFunction IEBinary_getByteAt(strBinary, iOffset)\r\n\tIEBinary_getByteAt = AscB(MidB(strBinary,iOffset+1,1))\r\nEnd Function\r\nFunction IEBinary_getLength(strBinary)\r\n\tIEBinary_getLength = LenB(strBinary)\r\nEnd Function\r\n<\/script>\r\n"), function(e) {
    e.FileAPIReader = function(s, i) {
        return function(e, t) {
            var o = i || new FileReader;
            o.onload = function(e) {
                t(new A(e.target.result))
            }, o.readAsBinaryString(s)
        }
    }
}(this), function(e) {
    var t = e.p = {},
        r = {},
        o = [0, 7];
    t.t = function(e) {
        delete r[e]
    }, t.s = function() {
        r = {}
    }, t.B = function(n, l, a) {
        ((a = a || {}).dataReader || B)(n, function(i) {
            i.f(o, function() {
                var s = "ftypM4A" == i.c(4, 7) ? ID4 : "ID3" == i.c(0, 3) ? ID3v2 : ID3v1;
                s.m(i, function() {
                    var e, t = a.tags,
                        o = s.n(i, t);
                    t = r[n] || {};
                    for (e in o) o.hasOwnProperty(e) && (t[e] = o[e]);
                    r[n] = t, l && l()
                })
            })
        })
    }, t.v = function(e) {
        if (!r[e]) return null;
        var t, o = {};
        for (t in r[e]) r[e].hasOwnProperty(t) && (o[t] = r[e][t]);
        return o
    }, t.A = function(e, t) {
        return r[e] ? r[e][t] : null
    }, e.ID3 = e.p, t.loadTags = t.B, t.getAllTags = t.v, t.getTag = t.A, t.clearTags = t.t, t.clearAll = t.s
}(this), function(e) {
    var t = e.q = {},
        r = "Blues;Classic Rock;Country;Dance;Disco;Funk;Grunge;Hip-Hop;Jazz;Metal;New Age;Oldies;Other;Pop;R&B;Rap;Reggae;Rock;Techno;Industrial;Alternative;Ska;Death Metal;Pranks;Soundtrack;Euro-Techno;Ambient;Trip-Hop;Vocal;Jazz+Funk;Fusion;Trance;Classical;Instrumental;Acid;House;Game;Sound Clip;Gospel;Noise;AlternRock;Bass;Soul;Punk;Space;Meditative;Instrumental Pop;Instrumental Rock;Ethnic;Gothic;Darkwave;Techno-Industrial;Electronic;Pop-Folk;Eurodance;Dream;Southern Rock;Comedy;Cult;Gangsta;Top 40;Christian Rap;Pop/Funk;Jungle;Native American;Cabaret;New Wave;Psychadelic;Rave;Showtunes;Trailer;Lo-Fi;Tribal;Acid Punk;Acid Jazz;Polka;Retro;Musical;Rock & Roll;Hard Rock;Folk;Folk-Rock;National Folk;Swing;Fast Fusion;Bebob;Latin;Revival;Celtic;Bluegrass;Avantgarde;Gothic Rock;Progressive Rock;Psychedelic Rock;Symphonic Rock;Slow Rock;Big Band;Chorus;Easy Listening;Acoustic;Humour;Speech;Chanson;Opera;Chamber Music;Sonata;Symphony;Booty Bass;Primus;Porn Groove;Satire;Slow Jam;Club;Tango;Samba;Folklore;Ballad;Power Ballad;Rhythmic Soul;Freestyle;Duet;Punk Rock;Drum Solo;Acapella;Euro-House;Dance Hall".split(";");
    t.m = function(e, t) {
        var o = e.h();
        e.f([o - 128 - 1, o], t)
    }, t.n = function(e) {
        var t = e.h() - 128;
        if ("TAG" != e.c(t, 3)) return {};
        var o = e.c(3 + t, 30).replace(/\0/g, ""),
            s = e.c(33 + t, 30).replace(/\0/g, ""),
            i = e.c(63 + t, 30).replace(/\0/g, ""),
            n = e.c(93 + t, 4).replace(/\0/g, "");
        if (0 == e.a(97 + t + 28)) var l = e.c(97 + t, 28).replace(/\0/g, ""),
            a = e.a(97 + t + 29);
        else l = "", a = 0;
        return {
            version: "1.1",
            title: o,
            artist: s,
            album: i,
            year: n,
            comment: l,
            track: a,
            genre: (e = e.a(97 + t + 30)) < 255 ? r[e] : ""
        }
    }, e.ID3v1 = e.q
}(this), function(e) {
    function g(e, t) {
        var o = t.a(e),
            s = t.a(e + 1),
            i = t.a(e + 2);
        return 127 & t.a(e + 3) | (127 & i) << 7 | (127 & s) << 14 | (127 & o) << 21
    }
    var y = e.D = {};
    y.b = {}, y.frames = {
        BUF: "Recommended buffer size",
        CNT: "Play counter",
        COM: "Comments",
        CRA: "Audio encryption",
        CRM: "Encrypted meta frame",
        ETC: "Event timing codes",
        EQU: "Equalization",
        GEO: "General encapsulated object",
        IPL: "Involved people list",
        LNK: "Linked information",
        MCI: "Music CD Identifier",
        MLL: "MPEG location lookup table",
        PIC: "Attached picture",
        POP: "Popularimeter",
        REV: "Reverb",
        RVA: "Relative volume adjustment",
        SLT: "Synchronized lyric/text",
        STC: "Synced tempo codes",
        TAL: "Album/Movie/Show title",
        TBP: "BPM (Beats Per Minute)",
        TCM: "Composer",
        TCO: "Content type",
        TCR: "Copyright message",
        TDA: "Date",
        TDY: "Playlist delay",
        TEN: "Encoded by",
        TFT: "File type",
        TIM: "Time",
        TKE: "Initial key",
        TLA: "Language(s)",
        TLE: "Length",
        TMT: "Media type",
        TOA: "Original artist(s)/performer(s)",
        TOF: "Original filename",
        TOL: "Original Lyricist(s)/text writer(s)",
        TOR: "Original release year",
        TOT: "Original album/Movie/Show title",
        TP1: "Lead artist(s)/Lead performer(s)/Soloist(s)/Performing group",
        TP2: "Band/Orchestra/Accompaniment",
        TP3: "Conductor/Performer refinement",
        TP4: "Interpreted, remixed, or otherwise modified by",
        TPA: "Part of a set",
        TPB: "Publisher",
        TRC: "ISRC (International Standard Recording Code)",
        TRD: "Recording dates",
        TRK: "Track number/Position in set",
        TSI: "Size",
        TSS: "Software/hardware and settings used for encoding",
        TT1: "Content group description",
        TT2: "Title/Songname/Content description",
        TT3: "Subtitle/Description refinement",
        TXT: "Lyricist/text writer",
        TXX: "User defined text information frame",
        TYE: "Year",
        UFI: "Unique file identifier",
        ULT: "Unsychronized lyric/text transcription",
        WAF: "Official audio file webpage",
        WAR: "Official artist/performer webpage",
        WAS: "Official audio source webpage",
        WCM: "Commercial information",
        WCP: "Copyright/Legal information",
        WPB: "Publishers official webpage",
        WXX: "User defined URL link frame",
        AENC: "Audio encryption",
        APIC: "Attached picture",
        COMM: "Comments",
        COMR: "Commercial frame",
        ENCR: "Encryption method registration",
        EQUA: "Equalization",
        ETCO: "Event timing codes",
        GEOB: "General encapsulated object",
        GRID: "Group identification registration",
        IPLS: "Involved people list",
        LINK: "Linked information",
        MCDI: "Music CD identifier",
        MLLT: "MPEG location lookup table",
        OWNE: "Ownership frame",
        PRIV: "Private frame",
        PCNT: "Play counter",
        POPM: "Popularimeter",
        POSS: "Position synchronisation frame",
        RBUF: "Recommended buffer size",
        RVAD: "Relative volume adjustment",
        RVRB: "Reverb",
        SYLT: "Synchronized lyric/text",
        SYTC: "Synchronized tempo codes",
        TALB: "Album/Movie/Show title",
        TBPM: "BPM (beats per minute)",
        TCOM: "Composer",
        TCON: "Content type",
        TCOP: "Copyright message",
        TDAT: "Date",
        TDLY: "Playlist delay",
        TENC: "Encoded by",
        TEXT: "Lyricist/Text writer",
        TFLT: "File type",
        TIME: "Time",
        TIT1: "Content group description",
        TIT2: "Title/songname/content description",
        TIT3: "Subtitle/Description refinement",
        TKEY: "Initial key",
        TLAN: "Language(s)",
        TLEN: "Length",
        TMED: "Media type",
        TOAL: "Original album/movie/show title",
        TOFN: "Original filename",
        TOLY: "Original lyricist(s)/text writer(s)",
        TOPE: "Original artist(s)/performer(s)",
        TORY: "Original release year",
        TOWN: "File owner/licensee",
        TPE1: "Lead performer(s)/Soloist(s)",
        TPE2: "Band/orchestra/accompaniment",
        TPE3: "Conductor/performer refinement",
        TPE4: "Interpreted, remixed, or otherwise modified by",
        TPOS: "Part of a set",
        TPUB: "Publisher",
        TRCK: "Track number/Position in set",
        TRDA: "Recording dates",
        TRSN: "Internet radio station name",
        TRSO: "Internet radio station owner",
        TSIZ: "Size",
        TSRC: "ISRC (international standard recording code)",
        TSSE: "Software/Hardware and settings used for encoding",
        TYER: "Year",
        TXXX: "User defined text information frame",
        UFID: "Unique file identifier",
        USER: "Terms of use",
        USLT: "Unsychronized lyric/text transcription",
        WCOM: "Commercial information",
        WCOP: "Copyright/Legal information",
        WOAF: "Official audio file webpage",
        WOAR: "Official artist/performer webpage",
        WOAS: "Official audio source webpage",
        WORS: "Official internet radio station homepage",
        WPAY: "Payment",
        WPUB: "Publishers official webpage",
        WXXX: "User defined URL link frame"
    };
    var v = {
            title: ["TIT2", "TT2"],
            artist: ["TPE1", "TP1"],
            album: ["TALB", "TAL"],
            year: ["TYER", "TYE"],
            comment: ["COMM", "COM"],
            track: ["TRCK", "TRK"],
            genre: ["TCON", "TCO"],
            picture: ["APIC", "PIC"],
            lyrics: ["USLT", "ULT"]
        },
        S = ["title", "artist", "album", "track"];
    y.m = function(e, t) {
        e.f([0, g(6, e)], t)
    }, y.n = function(e, t) {
        var o = 0;
        if (4 < (d = e.a(o + 3))) return {
            version: ">2.4"
        };
        var s = e.a(o + 4),
            i = e.d(o + 5, 7),
            n = e.d(o + 5, 6),
            l = e.d(o + 5, 5),
            a = g(o + 6, e);
        o += 10;
        if (n) o = o + ((h = e.i(o)) + 4);
        var r, d = {
            version: "2." + d + "." + s,
            major: d,
            revision: s,
            flags: {
                unsynchronisation: i,
                extended_header: n,
                experimental_indicator: l
            },
            size: a
        };
        if (i) r = {};
        else {
            a = a - 10, i = e, s = t, n = {}, l = d.major;
            for (var u, h = [], c = 0; u = (s || S)[c]; c++) h = h.concat(v[u] || [u]);
            for (s = h; o < a;) {
                c = i, u = o;
                var _ = h = null;
                switch (l) {
                    case 2:
                        r = c.c(u, 3);
                        var f = c.o(u + 3),
                            p = 6;
                        break;
                    case 3:
                        r = c.c(u, 4), f = c.i(u + 4), p = 10;
                        break;
                    case 4:
                        r = c.c(u, 4), f = g(u + 4, c), p = 10
                }
                if ("" == r) break;
                o += p + f, s.indexOf(r) < 0 || (2 < l && (_ = {
                    message: {
                        P: c.d(u + 8, 6),
                        I: c.d(u + 8, 5),
                        M: c.d(u + 8, 4)
                    },
                    k: {
                        K: c.d(u + 8 + 1, 7),
                        F: c.d(u + 8 + 1, 3),
                        H: c.d(u + 8 + 1, 2),
                        C: c.d(u + 8 + 1, 1),
                        u: c.d(u + 8 + 1, 0)
                    }
                }), u += p, _ && _.k.u && (g(u, c), u += 4, f -= 4), _ && _.k.C || (r in y.b ? h = y.b[r] : "T" == r[0] && (h = y.b["T*"]), h = h ? h(u, f, c, _) : void 0, h = {
                    id: r,
                    size: f,
                    description: r in y.frames ? y.frames[r] : "Unknown",
                    data: h
                }, r in n ? (n[r].id && (n[r] = [n[r]]), n[r].push(h)) : n[r] = h))
            }
            r = n
        }
        for (var b in v)
            if (v.hasOwnProperty(b)) {
                e: {
                    for ("string" == typeof(f = v[b]) && (f = [f]), o = void(p = 0); o = f[p]; p++)
                        if (o in r) {
                            e = r[o].data;
                            break e
                        }
                    e = void 0
                }
                e && (d[b] = e)
            }
        for (var m in r) r.hasOwnProperty(m) && (d[m] = r[m]);
        return d
    }, e.ID3v2 = y
}(this), function() {
    function a(e) {
        var t;
        switch (e) {
            case 0:
                t = "iso-8859-1";
                break;
            case 1:
                t = "utf-16";
                break;
            case 2:
                t = "utf-16be";
                break;
            case 3:
                t = "utf-8"
        }
        return t
    }
    var r = "32x32 pixels 'file icon' (PNG only);Other file icon;Cover (front);Cover (back);Leaflet page;Media (e.g. lable side of CD);Lead artist/lead performer/soloist;Artist/performer;Conductor;Band/Orchestra;Composer;Lyricist/text writer;Recording Location;During recording;During performance;Movie/video screen capture;A bright coloured fish;Illustration;Band/artist logotype;Publisher/Studio logotype".split(";");
    ID3v2.b.APIC = function(e, t, o, s, i) {
        i = i || "3", s = e;
        var n = a(o.a(e));
        switch (i) {
            case "2":
                var l = o.c(e + 1, 3);
                e += 4;
                break;
            case "3":
            case "4":
                e += 1 + (l = o.e(e + 1, t - (e - s), n)).g
        }
        return i = o.a(e, 1), i = r[i], e += 1 + (n = o.e(e + 1, t - (e - s), n)).g, {
            format: l.toString(),
            type: i,
            description: n.toString(),
            data: o.l(e, s + t - e)
        }
    }, ID3v2.b.COMM = function(e, t, o) {
        var s = e,
            i = a(o.a(e)),
            n = o.c(e + 1, 3),
            l = o.e(e + 4, t - 4, i);
        return e += 4 + l.g, e = o.e(e, s + t - e, i), {
            language: n,
            O: l.toString(),
            text: e.toString()
        }
    }, ID3v2.b.COM = ID3v2.b.COMM, ID3v2.b.PIC = function(e, t, o, s) {
        return ID3v2.b.APIC(e, t, o, s, "2")
    }, ID3v2.b.PCNT = function(e, t, o) {
        return o.J(e)
    }, ID3v2.b.CNT = ID3v2.b.PCNT, ID3v2.b["T*"] = function(e, t, o) {
        var s = a(o.a(e));
        return o.e(e + 1, t - 1, s).toString()
    }, ID3v2.b.TCON = function(e, t, o) {
        return ID3v2.b["T*"].apply(this, arguments).replace(/^\(\d+\)/, "")
    }, ID3v2.b.TCO = ID3v2.b.TCON, ID3v2.b.USLT = function(e, t, o) {
        var s = e,
            i = a(o.a(e)),
            n = o.c(e + 1, 3),
            l = o.e(e + 4, t - 4, i);
        return e += 4 + l.g, e = o.e(e, s + t - e, i), {
            language: n,
            G: l.toString(),
            L: e.toString()
        }
    }, ID3v2.b.ULT = ID3v2.b.USLT
}(), function(e) {
    var _ = e.r = {};
    _.types = {
        0: "uint8",
        1: "text",
        13: "jpeg",
        14: "png",
        21: "uint8"
    }, _.j = {
        "©alb": ["album"],
        "©art": ["artist"],
        "©ART": ["artist"],
        aART: ["artist"],
        "©day": ["year"],
        "©nam": ["title"],
        "©gen": ["genre"],
        trkn: ["track"],
        "©wrt": ["composer"],
        "©too": ["encoder"],
        cprt: ["copyright"],
        covr: ["picture"],
        "©grp": ["grouping"],
        keyw: ["keyword"],
        "©lyr": ["lyrics"],
        "©cmt": ["comment"],
        tmpo: ["tempo"],
        cpil: ["compilation"],
        disk: ["disc"]
    }, _.m = function(e, t) {
        e.f([0, 7], function() {
            ! function e(t, o, s, i) {
                var n = t.i(o);
                if (0 == n) i();
                else {
                    var l = t.c(o + 4, 4); - 1 < ["moov", "udta", "meta", "ilst"].indexOf(l) ? ("meta" == l && (o += 4), t.f([o + 8, o + 8 + 8], function() {
                        e(t, o + 8, n - 8, i)
                    })) : t.f([o + (l in _.j ? 0 : n), o + n + 8], function() {
                        e(t, o + n, s, i)
                    })
                }
            }(e, 0, e.h(), t)
        })
    }, _.n = function(e) {
        var t = {};
        return function e(t, o, s, i, n) {
            n = void 0 === n ? "" : n + "  ";
            for (var l = s; l < s + i;) {
                var a = o.i(l);
                if (0 == a) break;
                var r = o.c(l + 4, 4);
                if (-1 < ["moov", "udta", "meta", "ilst"].indexOf(r)) {
                    "meta" == r && (l += 4), e(t, o, l + 8, a - 8, n);
                    break
                }
                if (_.j[r]) {
                    var d = o.o(l + 16 + 1),
                        u = _.j[r];
                    if (d = _.types[d], "trkn" == r) t[u[0]] = o.a(l + 16 + 11), t.count = o.a(l + 16 + 13);
                    else {
                        r = l + 16 + 4 + 4;
                        var h, c = a - 16 - 4 - 4;
                        switch (d) {
                            case "text":
                                h = o.e(r, c, "UTF-8");
                                break;
                            case "uint8":
                                h = o.w(r);
                                break;
                            case "jpeg":
                            case "png":
                                h = {
                                    k: "image/" + d,
                                    data: o.l(r, c)
                                }
                        }
                        t[u[0]] = "comment" === u[0] ? {
                            text: h
                        } : h
                    }
                }
                l += a
            }
        }(t, e, 0, e.h()), t
    }, e.ID4 = e.r
}(this), function(r) {
    var e = navigator.platform,
        t = !1;
    if ("iPad" != e && "iPhone" != e || (t = !0), t) {
        var o = !1;
        if (-1 != navigator.userAgent.indexOf("6") && (o = !0), o) {
            var s = {},
                i = {},
                n = r.setTimeout,
                d = r.setInterval,
                l = r.clearTimeout,
                a = r.clearInterval;
            r.setTimeout = function() {
                return u(n, s, arguments)
            }, r.setInterval = function() {
                return u(d, i, arguments)
            }, r.clearTimeout = function(e) {
                var t = s[e];
                t && (delete s[e], l(t.id))
            }, r.clearInterval = function(e) {
                var t = i[e];
                t && (delete i[e], a(t.id))
            }, r.addEventListener("scroll", function() {
                var e;
                for (e in s) h(n, l, s, e);
                for (e in i) h(d, a, i, e)
            })
        }
    }

    function u(e, t, o) {
        var s, i = o[0],
            n = e === d;
        return o[0] = function() {
            i && (i.apply(r, arguments), n || (delete t[s], i = null))
        }, s = e.apply(r, o), t[s] = {
            args: o,
            created: Date.now(),
            cb: i,
            id: s
        }, s
    }

    function h(e, t, o, s) {
        var i = o[s];
        if (i) {
            var n = e === d;
            if (t(i.id), !n) {
                var l = i.args[1],
                    a = Date.now() - i.created;
                a < 0 && (a = 0), (l -= a) < 0 && (l = 0), i.args[1] = l
            }
            i.args[0] = function() {
                i.cb && (i.cb.apply(r, arguments), n || (delete o[s], i.cb = null))
            }, i.created = Date.now(), i.id = e.apply(r, i.args)
        }
    }
}(window), function(e) {
    var _ = function(e, t, o, s, i, n, l, a, r, d, u, h) {
        var c = this;
        _.prototype;
        this.main_do = null, this.icon_do = null, this.iconS_do = null, this.bk_do = null, this.text_do = null, this.border_do = null, this.thumbHolder_do = null, this.icon_img = e, c.useHEXColorsForSkin_bl = d, c.normalButtonsColor_str = u, c.selectedButtonsColor_str = h, this.borderNColor_str = i, this.borderSColor_str = n, this.adsBackgroundPath_str = l, this.position_str = s, this.textNormalColor_str = a, this.textSelectedColor_str = r, this.text_str = o, this.iconOverPath_str = t, this.totalWidth = 215, this.totalHeight = 64, this.fontSize = 12, this.hasThumbanil_bl = !1, this.isShowed_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, c.init = function() {
            c.setOverflow("visible"), c.setupMainContainers(), c.hide(!1, !0)
        }, c.setupMainContainers = function() {
            this.main_do = new FWDUVPDisplayObject("div"), this.main_do.hasTransform3d_bl = !1, this.main_do.hasTransform2d_bl = !1, this.main_do.setBackfaceVisibility(), this.bk_do = new FWDUVPDisplayObject("div"), this.bk_do.getStyle().background = "url('" + this.adsBackgroundPath_str + "')", this.text_do = new FWDUVPDisplayObject("div"), this.text_do.hasTransform3d_bl = !1, this.text_do.hasTransform2d_bl = !1, this.text_do.setBackfaceVisibility(), this.text_do.setOverflow("visible"), this.text_do.getStyle().display = "inline", this.text_do.getStyle().fontFamily = "Arial", this.text_do.getStyle().fontSize = "22px", this.text_do.getStyle().whiteSpace = "nowrap", this.text_do.getStyle().color = this.textNormalColor_str, this.text_do.getStyle().fontSmoothing = "antialiased", this.text_do.getStyle().webkitFontSmoothing = "antialiased", this.text_do.getStyle().textRendering = "optimizeLegibility", this.thumbHolder_do = new FWDUVPDisplayObject("div"), this.thumbHolder_do.setWidth(this.totalHeight - 8), this.thumbHolder_do.setHeight(this.totalHeight - 8), this.thumbHolder_do.setX(this.totalWidth - this.thumbHolder_do.w - 4), this.thumbHolder_do.setY(4), this.border_do = new FWDUVPDisplayObject("div"), this.border_do.getStyle().border = "1px solid " + this.borderNColor_str, this.border_do.setButtonMode(!0), this.main_do.setWidth(this.totalWidth), this.main_do.setHeight(this.totalHeight), this.bk_do.setWidth(this.totalWidth), this.bk_do.setHeight(this.totalHeight), "left" == this.position_str ? (this.border_do.setX(-1), this.border_do.setWidth(this.totalWidth - 1)) : this.border_do.setWidth(this.totalWidth), this.border_do.setHeight(this.totalHeight - 2), this.setWidth(this.totalWidth), this.setHeight(this.totalHeight), this.useHEXColorsForSkin_bl ? (this.icon_do = new FWDUVPDisplayObject("div"), this.icon_do.setWidth(c.icon_img.width), this.icon_do.setHeight(c.icon_img.height), this.icon_do_canvas = FWDUVPUtils.getCanvasWithModifiedColor(this.icon_img, this.normalButtonsColor_str).canvas, this.icon_do.screen.appendChild(c.icon_do_canvas)) : (this.icon_do = new FWDUVPDisplayObject("img"), this.icon_do.setScreen(this.icon_img), this.icon_do.setWidth(this.icon_img.width), this.icon_do.setHeight(this.icon_img.height)), this.iconS_img = new Image, this.iconS_img.src = this.iconOverPath_str, this.useHEXColorsForSkin_bl ? (this.iconS_do = new FWDUVPDisplayObject("div"), this.iconS_do.setWidth(this.icon_do.w), this.iconS_do.setHeight(this.icon_do.h), this.iconS_img.onload = function() {
                c.iconS_do_canvas = FWDUVPUtils.getCanvasWithModifiedColor(c.iconS_img, c.selectedButtonsColor_str).canvas, c.iconS_do.screen.appendChild(c.iconS_do_canvas)
            }) : (this.iconS_do = new FWDUVPDisplayObject("img"), this.iconS_do.setScreen(this.iconS_img), this.iconS_do.setWidth(this.icon_do.w), this.iconS_do.setHeight(this.icon_do.h)), this.iconS_do.setAlpha(0), this.main_do.addChild(this.bk_do), this.main_do.addChild(this.text_do), this.main_do.addChild(this.thumbHolder_do), this.main_do.addChild(this.icon_do), this.main_do.addChild(this.iconS_do), this.main_do.addChild(this.border_do), FWDUVPUtils.isIEAndLessThen9 && (this.dumy_do = new FWDUVPDisplayObject("div"), this.dumy_do.setBkColor("#00FF00"), this.dumy_do.setAlpha(1e-4), this.dumy_do.setWidth(this.totalWidth), this.dumy_do.setHeight(this.totalHeight), this.dumy_do.setButtonMode(!0), this.main_do.addChild(this.dumy_do)), this.addChild(this.main_do), this.updateText(c.text_str), FWDUVPUtils.isIEAndLessThen9 ? c.isMobile_bl ? c.hasPointerEvent_bl ? (c.dumy_do.screen.addEventListener("pointerup", c.onMouseUp), c.dumy_do.screen.addEventListener("pointerover", c.onMouseOver), c.dumy_do.screen.addEventListener("pointerout", c.onMouseOut)) : c.dumy_do.screen.addEventListener("touchend", c.onMouseUp) : c.dumy_do.screen.addEventListener ? (c.dumy_do.screen.addEventListener("mouseover", c.onMouseOver), c.dumy_do.screen.addEventListener("mouseout", c.onMouseOut), c.dumy_do.screen.addEventListener("mouseup", c.onMouseUp)) : c.dumy_do.screen.attachEvent && (c.dumy_do.screen.attachEvent("onmouseover", c.onMouseOver), c.dumy_do.screen.attachEvent("onmouseout", c.onMouseOut), c.dumy_do.screen.attachEvent("onmouseup", c.onMouseUp)) : c.isMobile_bl ? c.hasPointerEvent_bl ? (c.border_do.screen.addEventListener("pointerup", c.onMouseUp), c.border_do.screen.addEventListener("pointerover", c.onMouseOver), c.border_do.screen.addEventListener("pointerout", c.onMouseOut)) : c.border_do.screen.addEventListener("touchend", c.onMouseUp) : c.border_do.screen.addEventListener ? (c.border_do.screen.addEventListener("mouseover", c.onMouseOver), c.border_do.screen.addEventListener("mouseout", c.onMouseOut), c.border_do.screen.addEventListener("mouseup", c.onMouseUp)) : c.border_do.screen.attachEvent && (c.border_do.screen.attachEvent("onmouseover", c.onMouseOver), c.border_do.screen.attachEvent("onmouseout", c.onMouseOut), c.border_do.screen.attachEvent("onmouseup", c.onMouseUp))
        }, c.onMouseOver = function(e) {
            e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE && "mouse" != e.pointerType || c.setSelectedState()
        }, c.onMouseOut = function(e) {
            e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE && "mouse" != e.pointerType || c.setNormalState()
        }, c.onMouseUp = function(e) {
            e.preventDefault && e.preventDefault(), 2 != e.button && c.isShowed_bl && c.dispatchEvent(_.MOUSE_UP)
        }, this.updateText = function(e) {
            var t;
            this.text_do.setInnerHTML(e), setTimeout(function() {
                t = c.text_do.getWidth() + 8 + c.iconS_do.w, c.text_do.setX(parseInt(c.totalWidth - t) / 2), c.text_do.setY(parseInt((c.totalHeight - c.text_do.getHeight()) / 2) + 2), c.icon_do.setX(c.text_do.x + t - c.iconS_do.w), c.icon_do.setY(parseInt((c.totalHeight - c.iconS_do.h) / 2) + 2), c.iconS_do.setX(c.text_do.x + t - c.iconS_do.w), c.iconS_do.setY(parseInt((c.totalHeight - c.iconS_do.h) / 2) + 2)
            }, 50)
        }, this.setNormalState = function() {
            FWDAnimation.to(c.iconS_do, .5, {
                alpha: 0,
                ease: Expo.easeOut
            }), FWDAnimation.to(c.text_do.screen, .5, {
                css: {
                    color: c.textNormalColor_str
                },
                ease: Expo.easeOut
            }), FWDAnimation.to(c.border_do.screen, .5, {
                css: {
                    borderColor: c.borderNColor_str
                },
                ease: Expo.easeOut
            })
        }, this.setSelectedState = function() {
            FWDAnimation.to(c.iconS_do, .5, {
                alpha: 1,
                ease: Expo.easeOut
            }), FWDAnimation.to(c.text_do.screen, .5, {
                css: {
                    color: c.textSelectedColor_str
                },
                ease: Expo.easeOut
            }), FWDAnimation.to(c.border_do.screen, .5, {
                css: {
                    borderColor: c.borderSColor_str
                },
                ease: Expo.easeOut
            })
        }, this.show = function(e) {
            this.isShowed_bl || (this.isShowed_bl = !0, this.setVisible(!0), FWDAnimation.killTweensOf(this.main_do), e && !c.isMobile_bl ? "left" == this.position_str ? FWDAnimation.to(this.main_do, .8, {
                x: 0,
                delay: .8,
                ease: Expo.easeInOut
            }) : FWDAnimation.to(this.main_do, .8, {
                x: 1 - this.totalWidth,
                delay: .8,
                ease: Expo.easeInOut
            }) : "left" == this.position_str ? this.main_do.setX(0) : this.main_do.setX(-this.totalWidth), this.text_do.getStyle().color = this.textNormalColor_str)
        }, this.hide = function(e, t) {
            (this.isShowed_bl || t) && (this.isShowed_bl = !1, this.hasThumbanil_bl = !1, FWDAnimation.killTweensOf(this.main_do), e && !c.isMobile_bl ? "left" == this.position_str ? FWDAnimation.to(this.main_do, .8, {
                x: -this.totalWidth,
                ease: Expo.easeInOut,
                onComplete: this.hideCompleteHandler
            }) : FWDAnimation.to(this.main_do, .8, {
                x: 0,
                ease: Expo.easeInOut,
                onComplete: this.hideCompleteHandler
            }) : ("left" == this.position_str ? this.main_do.setX(-this.totalWidth) : this.main_do.setX(0), this.hideCompleteHandler()))
        }, this.hideCompleteHandler = function() {
            c.smallImage_img && (c.smallImage_img.onload = null, c.smallImage_img.src = "", FWDAnimation.killTweensOf(c.icon_do)), 1 != c.main_do.alpha && c.main_do.setAlpha(1), c.thumbHolder_do.setVisible(!1), c.setVisible(!1)
        }, this.hideWithOpacity = function() {
            FWDUVPUtils.isIEAndLessThen9 || FWDAnimation.to(this.main_do, .8, {
                alpha: .5
            })
        }, this.showWithOpacity = function() {
            FWDUVPUtils.isIEAndLessThen9 || FWDAnimation.to(this.main_do, .8, {
                alpha: 1
            })
        }, this.updateHEXColors = function(e, t) {
            this.textNormalColor_str = e, this.textSelectedColor_str = t;
            try {
                FWDUVPUtils.changeCanvasHEXColor(c.icon_img, c.icon_do_canvas, e), FWDUVPUtils.changeCanvasHEXColor(c.iconS_img, c.iconS_do_canvas, t), this.text_do.getStyle().color = this.textNormalColor_str, this.borderNColor_str = e, this.borderSColor_str = t, this.border_do.getStyle().border = "1px solid " + this.borderNColor_str
            } catch (e) {}
        }, c.init()
    };
    _.setPrototype = function() {
        _.prototype = null, _.prototype = new FWDUVPTransformDisplayObject("div")
    }, _.CLICK = "onClick", _.MOUSE_OVER = "onMouseOver", _.SHOW_TOOLTIP = "showTooltip", _.MOUSE_OUT = "onMouseOut", _.MOUSE_UP = "onMouseDown", _.prototype = null, e.FWDUVPAdsButton = _
}(window), function(e) {
    var l = function(e, t, o, s, i) {
        var n = this;
        l.prototype;
        this.main_do = null, this.bk_do = null, this.text_do = null, this.border_do = null, this.thumbHolder_do = null, this.borderNColor_str = t, this.borderSColor_str = o, this.adsBackgroundPath_str = s, this.position_str = e, this.timeColor_str = i, this.totalWidth = 215, this.totalHeight = 64, this.fontSize = 12, this.hasThumbanil_bl = !1, this.isShowed_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, n.init = function() {
            n.setOverflow("visible"), n.setupMainContainers(), n.hide(!1, !0)
        }, n.setupMainContainers = function() {
            this.main_do = new FWDUVPDisplayObject("div"), this.main_do.hasTransform3d_bl = !1, this.main_do.hasTransform2d_bl = !1, this.main_do.setBackfaceVisibility(), this.bk_do = new FWDUVPDisplayObject("div"), this.bk_do.getStyle().background = "url('" + this.adsBackgroundPath_str + "')", this.text_do = new FWDUVPDisplayObject("div"), this.text_do.hasTransform3d_bl = !1, this.text_do.hasTransform2d_bl = !1, this.text_do.setBackfaceVisibility(), this.text_do.getStyle().fontFamily = "Arial", this.text_do.getStyle().fontSize = "12px", this.text_do.getStyle().lineHeight = "18px", this.text_do.getStyle().textAlign = "center", this.text_do.getStyle().color = this.timeColor_str, this.text_do.getStyle().fontSmoothing = "antialiased", this.text_do.getStyle().webkitFontSmoothing = "antialiased", this.text_do.getStyle().textRendering = "optimizeLegibility", this.text_do.setInnerHTML("..."), this.thumbHolder_do = new FWDUVPDisplayObject("div"), this.thumbHolder_do.setWidth(this.totalHeight - 8), this.thumbHolder_do.setHeight(this.totalHeight - 8), this.thumbHolder_do.setX(this.totalWidth - this.thumbHolder_do.w - 4), this.thumbHolder_do.setY(4), this.border_do = new FWDUVPDisplayObject("div"), this.border_do.getStyle().border = "1px solid " + this.borderNColor_str, this.main_do.setWidth(this.totalWidth), this.main_do.setHeight(this.totalHeight), this.bk_do.setWidth(this.totalWidth), this.bk_do.setHeight(this.totalHeight), "left" == this.position_str ? (this.border_do.setX(-1), this.border_do.setWidth(this.totalWidth - 1)) : this.border_do.setWidth(this.totalWidth), this.border_do.setHeight(this.totalHeight - 2), this.setWidth(this.totalWidth), this.setHeight(this.totalHeight), this.main_do.addChild(this.bk_do), this.main_do.addChild(this.text_do), this.main_do.addChild(this.thumbHolder_do), this.main_do.addChild(this.border_do), this.addChild(this.main_do)
        }, this.loadThumbnail = function(e) {
            if (this.hasThumbanil_bl = !0, this.smallImage_img) {
                this.smallImage_img.removeAttribute("width"), this.smallImage_img.removeAttribute("height"), this.smallImage_img.onload = null, this.smallImage_img.src = "";
                try {
                    FWDUVPUtils.isIE || this.thumbHolder_do.removeChild(n.thumbnail_do)
                } catch (e) {}
            }
            this.thumbnail_do || (this.thumbnail_do = new FWDUVPDisplayObject("img"), this.smallImage_img = new Image), this.thumbHolder_do.setVisible(!0), this.smallImage_img.onload = this.onSmallImageLoad, this.smallImage_img.src = e
        }, this.onSmallImageLoad = function() {
            n.smallImageOriginalW = n.smallImage_img.width, n.smallImageOriginalH = n.smallImage_img.height, n.thumbnail_do.setScreen(n.smallImage_img), n.thumbHolder_do.addChild(n.thumbnail_do);
            var e = n.thumbHolder_do.w / n.smallImageOriginalW,
                t = n.thumbHolder_do.h / n.smallImageOriginalH,
                o = 0;
            t <= e ? o = e : e <= t && (o = t), n.thumbnail_do.setWidth(Math.round(n.smallImageOriginalW * o)), n.thumbnail_do.setHeight(Math.round(n.smallImageOriginalH * o)), n.thumbnail_do.setX(Math.round((n.thumbHolder_do.w - n.thumbnail_do.w) / 2)), n.thumbnail_do.setY(Math.round((n.thumbHolder_do.h - n.thumbnail_do.h) / 2)), n.thumbnail_do.setAlpha(0), FWDAnimation.to(n.thumbnail_do, .8, {
                alpha: 1
            }), n.updateText()
        }, this.updateText = function(e) {
            e && this.text_do.setInnerHTML(e), this.hasThumbanil_bl ? (this.text_do.setX(16), this.text_do.setWidth(this.totalWidth - this.totalHeight - 26)) : (this.text_do.setX(8), this.text_do.setWidth(this.totalWidth - 16)), this.text_do.setY(parseInt((n.totalHeight - n.text_do.getHeight()) / 2))
        }, this.show = function(e) {
            this.isShowed_bl || (this.isShowed_bl = !0, this.setVisible(!0), FWDAnimation.killTweensOf(this.main_do), e && !n.isMobile_bl ? "left" == this.position_str ? FWDAnimation.to(this.main_do, .8, {
                x: 0,
                delay: .2,
                ease: Expo.easeInOut
            }) : FWDAnimation.to(this.main_do, .8, {
                x: 1 - this.totalWidth,
                delay: .2,
                ease: Expo.easeInOut
            }) : "left" == this.position_str ? this.main_do.setX(0) : this.main_do.setX(-this.totalWidth))
        }, this.hide = function(e, t) {
            (this.isShowed_bl || t) && (this.isShowed_bl = !1, this.hasThumbanil_bl = !1, FWDAnimation.killTweensOf(this.main_do), e && !n.isMobile_bl ? "left" == this.position_str ? FWDAnimation.to(this.main_do, .8, {
                x: -this.totalWidth,
                ease: Expo.easeInOut,
                onComplete: this.hideCompleteHandler
            }) : FWDAnimation.to(this.main_do, .8, {
                x: 0,
                ease: Expo.easeInOut,
                onComplete: this.hideCompleteHandler
            }) : ("left" == this.position_str ? this.main_do.setX(-this.totalWidth) : this.main_do.setX(0), this.hideCompleteHandler()))
        }, this.hideCompleteHandler = function() {
            n.smallImage_img && (n.smallImage_img.onload = null, n.smallImage_img.src = "", FWDAnimation.killTweensOf(n.thumbnail_do)), 1 != n.main_do.alpha && n.main_do.setAlpha(1), n.thumbHolder_do.setVisible(!1), n.setVisible(!1)
        }, this.hideWithOpacity = function() {
            FWDUVPUtils.isIEAndLessThen9 || FWDAnimation.to(this.main_do, .8, {
                alpha: .5
            })
        }, this.showWithOpacity = function() {
            FWDUVPUtils.isIEAndLessThen9 || FWDAnimation.to(this.main_do, .8, {
                alpha: 1
            })
        }, this.updateHEXColors = function(e, t) {
            this.timeColor_str = e, this.text_do.getStyle().color = this.timeColor_str, this.borderNColor_str = e, this.borderSColor_str = t, this.border_do.getStyle().border = "1px solid " + this.borderNColor_str
        }, n.init()
    };
    l.setPrototype = function() {
        l.prototype = null, l.prototype = new FWDUVPTransformDisplayObject("div")
    }, l.CLICK = "onClick", l.MOUSE_OVER = "onMouseOver", l.SHOW_TOOLTIP = "showTooltip", l.MOUSE_OUT = "onMouseOut", l.MOUSE_UP = "onMouseDown", l.prototype = null, e.FWDUVPAdsStart = l
}(window), function(window) {
    var FWDUVPAnnotation = function(props_obj) {
        var self = this,
            prototype = FWDUVPAnnotation.prototype;
        this.id = props_obj.id, this.startTime = props_obj.start, this.endTime = props_obj.end, this.htmlContent_str = props_obj.content, this.left = props_obj.left, this.top = props_obj.top, this.showCloseButton_bl = props_obj.showCloseButton_bl, this.clickSource = props_obj.clickSource, this.clickSourceTarget = props_obj.clickSourceTarget, this.closeButtonNpath = props_obj.closeButtonNpath, this.closeButtonSPath = props_obj.closeButtonSPath, this.normalStateClass = props_obj.normalStateClass, this.selectedStateClass = props_obj.selectedStateClass, this.showAnnotationsPositionTool_bl = props_obj.showAnnotationsPositionTool_bl, this.parent = props_obj.parent, this.curX = this.left, this.curY = this.top, this.data = props_obj.data, this.useHEXColorsForSkin_bl = props_obj.useHEXColorsForSkin_bl, this.normalButtonsColor_str = props_obj.normalButtonsColor_str, this.selectedButtonsColor_str = props_obj.selectedButtonsColor_str, this.handPath_str = props_obj.handPath_str, this.grabPath_str = props_obj.grabPath_str, this.dummy_do = null, this.isShowed_bl = !1, this.isClosed_bl = !1, self.init = function() {
            -1 != this.data.skinPath_str.indexOf("hex_white") && (self.selectedButtonsColor_str = "#FFFFFF"), self.setOverflow("visible"), self.setAlpha(0), self.setVisible(!1), FWDUVPUtils.hasTransform2d && (this.getStyle().transformOrigin = "0% 0%"), this.screen.innerHTML = this.htmlContent_str, this.screen.className = this.normalStateClass, this.setBackfaceVisibility(), this.getStyle().fontSmoothing = "antialiased", this.getStyle().webkitFontSmoothing = "antialiased", this.getStyle().textRendering = "optimizeLegibility", this.dummy_do = new FWDUVPDisplayObject("div"), this.dummy_do.getStyle().width = "100%", this.dummy_do.getStyle().height = "100%", this.addChild(this.dummy_do), setTimeout(function() {
                self.w = self.getWidth(), self.h = self.getHeight()
            }, 100), self.showCloseButton_bl && !self.showAnnotationsPositionTool_bl && (FWDUVPSimpleSizeButton.setPrototype(), self.closeButton_do = new FWDUVPSimpleSizeButton(self.closeButtonNpath, self.closeButtonSPath, 21, 21, this.useHEXColorsForSkin_bl, this.normalButtonsColor_str, this.selectedButtonsColor_str), self.closeButton_do.setScale2(0), self.closeButton_do.addListener(FWDUVPSimpleSizeButton.MOUSE_UP, self.closeClickButtonCloseHandler), self.closeButton_do.getStyle().position = "absolute", self.addChild(self.closeButton_do)), self.showAnnotationsPositionTool_bl && (self.info_do = new FWDUVPDisplayObject("div"), self.info_do.getStyle().backgroundColor = "#FFFFFF", self.info_do.getStyle().boxShadow = "2px 2px 2px #888888;", this.info_do.getStyle().fontSmoothing = "antialiased", this.info_do.getStyle().webkitFontSmoothing = "antialiased", this.info_do.getStyle().textRendering = "optimizeLegibility", this.addChild(this.info_do), setTimeout(function() {
                self.info_do.screen.innerHTML = "<div style='padding:4px; maring:4px; color:#000000'> data-left=" + Math.round(self.curX * self.parent.scaleInverse) + "</div><div style='padding:4px; margin:4px; color:#000000;'> data-top=" + Math.round(self.curY * self.parent.scaleInverse) + "</div>", self.setX(Math.round(self.curX * self.parent.scale)), self.setY(Math.round(self.curY * self.parent.scale))
            }, 100), self.isMobile_bl ? self.hasPointerEvent_bl ? self.screen.addEventListener("pointerdown", self.selfOnDownHandler) : self.screen.addEventListener("touchdown", self.selfOnDownHandler) : window.addEventListener && self.screen.addEventListener("mousedown", self.selfOnDownHandler), self.getStyle().cursor = "url(" + self.handPath_str + "), default"), self.clickSource && !self.showAnnotationsPositionTool_bl && (self.dummy_do.setButtonMode(!0), self.dummy_do.screen.addEventListener("click", this.onClickHandler), self.dummy_do.screen.addEventListener("mouseover", this.onMouseOverHandler), self.dummy_do.screen.addEventListener("mouseout", this.onMouseOutHandler))
        }, this.selfOnDownHandler = function(e) {
            e.preventDefault && e.preventDefault(), self.getStyle().cursor = "url(" + self.grabPath_str + "), default", self.parent.addChild(self);
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            self.startX = t.screenX - self.parent.getGlobalX(), self.startY = t.screenY - self.parent.getGlobalY(), self.curX = self.x, self.curY = self.y, self.isMobile_bl ? self.hasPointerEvent_bl ? (window.addEventListener("pointermove", self.selfMoveHandler), window.addEventListener("pointerup", self.selfEndHandler)) : (window.addEventListener("touchmove", self.selfMoveHandler), window.addEventListener("touchend", self.selfEndHandler)) : window.addEventListener && (window.addEventListener("mousemove", self.selfMoveHandler), window.addEventListener("mouseup", self.selfEndHandler))
        }, this.selfMoveHandler = function(e) {
            e.preventDefault && e.preventDefault();
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            self.localX = t.screenX - self.parent.getGlobalX(), self.localY = t.screenY - self.parent.getGlobalY(), self.curX = self.x, self.curY = self.y, self.curX += self.localX - self.startX, self.curY += self.localY - self.startY, self.setX(self.curX), self.setY(self.curY), self.startX = t.screenX - self.parent.getGlobalX(), self.startY = t.screenY - self.parent.getGlobalY(), self.info_do.screen.innerHTML = "<div style='padding:4px; maring:4px; color:#000000'> data-left=" + Math.round(self.curX * self.parent.scaleInverse) + "</div><div style='padding:4px; margin:4px; color:#000000;'> data-top=" + Math.round(self.curY * self.parent.scaleInverse) + "</div>"
        }, this.selfEndHandler = function(e) {
            self.getStyle().cursor = "url(" + self.handPath_str + "), default", self.isMobile_bl ? self.hasPointerEvent_bl ? (window.removeEventListener("pointermove", self.selfMoveHandler), window.removeEventListener("pointerup", self.selfEndHandler)) : (window.removeEventListener("touchmove", self.selfMoveHandler), window.removeEventListener("touchend", self.selfEndHandler)) : window.removeEventListener && (window.removeEventListener("mousemove", self.selfMoveHandler), window.removeEventListener("mouseup", self.selfEndHandler))
        }, this.onMouseOverHandler = function(e) {
            self.setSelectedAtate()
        }, this.onMouseOutHandler = function(e) {
            self.setNormalState()
        }, this.onClickHandler = function() {
            -1 != self.clickSource.indexOf("https") || -1 != self.clickSource.indexOf("http") ? window.open(self.clickSource, self.clickSourceTarget) : eval(self.clickSource)
        }, this.closeClickButtonCloseHandler = function() {
            self.hide(), self.isClosed_bl = !0
        }, this.show = function() {
            this.isShowed_bl || this.isClosed_bl || (self.isShowed_bl = !0, self.setVisible(!0), FWDAnimation.killTweensOf(self), FWDAnimation.to(self, .8, {
                alpha: 1,
                ease: Quint.easeOut
            }), self.closeButton_do && FWDAnimation.to(self.closeButton_do, .8, {
                scale: 1,
                delay: .2,
                ease: Elastic.easeOut
            }))
        }, this.hide = function() {
            this.isShowed_bl && (FWDAnimation.killTweensOf(self), self.isShowed_bl = !1, self.setVisible(!1), self.setAlpha(0), self.closeButton_do && (FWDAnimation.killTweensOf(self.closeButton_do), self.closeButton_do.setScale2(0)))
        }, this.setNormalState = function() {
            self.selectedStateClass && FWDAnimation.to(self.screen, .8, {
                className: self.normalStateClass,
                ease: Quint.easeOut
            })
        }, this.setSelectedAtate = function() {
            self.selectedStateClass && FWDAnimation.to(self.screen, .8, {
                className: self.selectedStateClass,
                ease: Quint.easeOut
            })
        }, this.updateHEXColors = function(e, t) {
            self.closeButton_do && self.closeButton_do.updateHEXColors(e, t, self.buttonWidth, self.buttonHeight)
        }, self.init()
    };
    FWDUVPAnnotation.setPrototype = function() {
        FWDUVPAnnotation.prototype = null, FWDUVPUtils.hasTransform2d ? FWDUVPAnnotation.prototype = new FWDUVPTransformDisplayObject("div") : FWDUVPAnnotation.prototype = new FWDUVPDisplayObject("div")
    }, FWDUVPAnnotation.prototype = null, window.FWDUVPAnnotation = FWDUVPAnnotation
}(window), function(e) {
    var t = function(i, s) {
        var n = this;
        t.prototype;
        n.normalButtonsColor_str = s.normalButtonsColor_str, n.selectedButtonsColor_str = s.selectedButtonsColor_str, this.ann_ar = [], this.showAnnotationsPositionTool_bl = s.showAnnotationsPositionTool_bl, n.init = function() {
            n.setOverflow("visible")
        }, n.setupAnnotations = function(e) {
            if (n.ann_ar)
                for (var t = 0; t < n.ann_ar.length; t++) try {
                    this.removeChild(n.ann_ar[t])
                } catch (e) {}
            if (null != (n.source_ar = e)) {
                n.setVisible(!0), this.source_ar = e, this.ann_ar = [], this.totalAnnotations = n.source_ar.length;
                for (t = 0; t < n.totalAnnotations; t++) {
                    FWDUVPAnnotation.setPrototype();
                    var o = new FWDUVPAnnotation({
                        id: t,
                        start: this.source_ar[t].start,
                        end: this.source_ar[t].end,
                        left: this.source_ar[t].left,
                        top: this.source_ar[t].top,
                        clickSource: this.source_ar[t].clickSource,
                        clickSourceTarget: this.source_ar[t].clickSourceTarget,
                        content: this.source_ar[t].content,
                        showCloseButton_bl: this.source_ar[t].showCloseButton_bl,
                        closeButtonNpath: s.annotationAddCloseNPath_str,
                        closeButtonSPath: s.annotationAddCloseSPath_str,
                        normalStateClass: this.source_ar[t].normalStateClass,
                        selectedStateClass: this.source_ar[t].selectedStateClass,
                        showAnnotationsPositionTool_bl: n.showAnnotationsPositionTool_bl,
                        parent: n,
                        handPath_str: s.handPath_str,
                        grabPath_str: s.grabPath_str,
                        useHEXColorsForSkin_bl: s.useHEXColorsForSkin_bl,
                        normalButtonsColor_str: n.normalButtonsColor_str,
                        selectedButtonsColor_str: n.selectedButtonsColor_str,
                        data: s
                    });
                    this.ann_ar[t] = o, this.addChild(o)
                }
            } else n.setVisible(!1)
        }, this.update = function(e) {
            if (0 != n.totalAnnotations)
                for (var t, o = 0; o < n.totalAnnotations; o++) t = n.ann_ar[o], e <= 0 ? t.hide() : e >= t.startTime && e <= t.endTime ? (t.show(), n.position()) : t.hide()
        }, this.position = function(e) {
            var t = i.stageWidth / i.maxWidth;
            if (n.setX(Math.round((i.stageWidth - t * i.maxWidth) / 2)), n.setY(Math.round((i.tempVidStageHeight - t * i.maxHeight) / 2)), n.scale = i.stageWidth / i.maxWidth, n.scaleY = n.scale, n.scaleX = n.scale, n.scaleInverse = i.maxWidth / i.stageWidth, !n.showAnnotationsPositionTool_bl)
                for (var o = 0; o < n.totalAnnotations; o++) {
                    var s = this.ann_ar[o];
                    s.setScale2(n.scale), s.finalX = Math.floor(s.left * n.scaleX), i.playlist_do && i.isPlaylistShowed_bl && "right" == i.tempPlaylistPosition_str && !i.isFullScreen_bl && s.left > i.maxWidth / 3 && (s.finalX -= i.playlistWidth + i.spaceBetweenControllerAndPlaylist), s.finalY = Math.floor(s.top * n.scaleY), s.closeButton_do && (s.closeButton_do.setWidth(Math.round(s.closeButton_do.buttonWidth * n.scaleInverse)), s.closeButton_do.setHeight(Math.round(s.closeButton_do.buttonHeight * n.scaleInverse)), s.closeButton_do.n_do.setWidth(Math.round(s.closeButton_do.buttonWidth * n.scaleInverse)), s.closeButton_do.n_do.setHeight(Math.round(s.closeButton_do.buttonHeight * n.scaleInverse)), s.closeButton_do.n_do_canvas && (s.closeButton_do.n_do_canvas.style.width = Math.round(s.closeButton_do.buttonWidth * n.scaleInverse) + "px", s.closeButton_do.n_do_canvas.style.height = Math.round(s.closeButton_do.buttonheight * n.scaleInverse) + "px", s.closeButton_do.s_do_canvas.style.width = Math.round(s.closeButton_do.buttonWidth * n.scaleInverse) + "px", s.closeButton_do.s_do_canvas.style.height = Math.round(s.closeButton_do.buttonheight * n.scaleInverse) + "px"), s.closeButton_do.s_do.setWidth(Math.round(s.closeButton_do.buttonWidth * n.scaleInverse)), s.closeButton_do.s_do.setHeight(Math.round(s.closeButton_do.buttonHeight * n.scaleInverse)), s.closeButton_do.setX(Math.floor(s.getWidth() - s.closeButton_do.w / 2)), s.closeButton_do.setY(Math.floor(-s.closeButton_do.h / 2))), s.prevFinalX != s.finalX && (e ? FWDAnimation.to(s, .8, {
                        x: s.finalX,
                        ease: Expo.easeInOut
                    }) : s.setX(s.finalX)), s.prevFinalY != s.finalY && (e ? FWDAnimation.to(s, .8, {
                        y: s.finalY,
                        ease: Expo.easeInOut
                    }) : s.setY(s.finalY)), s.prevFinalX = s.finalX, s.prevFinalY = s.finalY
                }
        }, this.updateHEXColors = function(e, t) {
            if (n.normalButtonsColor_str = e, n.selectedButtonsColor_str = t, n.ann_ar)
                for (var o = 0; o < n.ann_ar.length; o++) n.ann_ar[o].updateHEXColors(e, t)
        }, n.init()
    };
    t.setPrototype = function() {
        t.prototype = null, t.prototype = new FWDUVPDisplayObject("div", "absolute")
    }, t.prototype = null, e.FWDUVPAnnotations = t
}(window), function(o) {
    var i = function(t, e) {
        var l = this;
        i.prototype;
        this.audio_el = null, this.sourcePath_str = null, this.lastPercentPlayed = 0, this.volume = e, this.curDuration = 0, this.countNormalMp3Errors = 0, this.countShoutCastErrors = 0, this.maxShoutCastCountErrors = 5, this.maxNormalCountErrors = 1, this.testShoutCastId_to, this.audioVisualizerLinesColor_str = FWDUVPUtils.hexToRgb(t.data.audioVisualizerLinesColor_str), this.audioVisualizerCircleColor_str = FWDUVPUtils.hexToRgb(t.data.audioVisualizerCircleColor_str), this.preload_bl = !1, this.allowScrubing_bl = !1, this.hasError_bl = !0, this.isPlaying_bl = !1, this.isStopped_bl = !0, this.hasPlayedOnce_bl = !1, this.isStartEventDispatched_bl = !1, this.isSafeToBeControlled_bl = !1, this.isShoutcast_bl = !1, this.isNormalMp3_bl = !1, this.init = function() {
            l.setupAudio()
        }, this.resizeAndPosition = function(e, t) {
            e && (l.stageWidth = e, l.stageHeight = t), l.setWidth(l.stageWidth), l.setHeight(l.stageHeight), l.resizeSpectrumCanvas()
        }, this.setupAudio = function() {
            null == l.audio_el && (l.audio_el = document.createElement("audio"), l.screen.appendChild(l.audio_el), l.audio_el.controls = !1, l.audio_el.preload = "auto", l.audio_el.volume = l.volume, FWDUVPUtils.isLocal || (l.audio_el.crossOrigin = "*"), l.setPlaybackRate(t.data.defaultPlaybackRate_ar[t.data.startAtPlaybackIndex])), l.audio_el.addEventListener("error", l.errorHandler), l.audio_el.addEventListener("canplay", l.safeToBeControlled), l.audio_el.addEventListener("canplaythrough", l.safeToBeControlled), l.audio_el.addEventListener("progress", l.updateProgress), l.audio_el.addEventListener("timeupdate", l.updateAudio), l.audio_el.addEventListener("pause", l.pauseHandler), l.audio_el.addEventListener("play", l.playHandler), l.audio_el.addEventListener("ended", l.endedHandler)
        }, this.destroyAudio = function() {
            l.audio_el && (l.audio_el.removeEventListener("error", l.errorHandler), l.audio_el.removeEventListener("canplay", l.safeToBeControlled), l.audio_el.removeEventListener("canplaythrough", l.safeToBeControlled), l.audio_el.removeEventListener("progress", l.updateProgress), l.audio_el.removeEventListener("timeupdate", l.updateAudio), l.audio_el.removeEventListener("pause", l.pauseHandler), l.audio_el.removeEventListener("play", l.playHandler), l.audio_el.removeEventListener("ended", l.endedHandler), l.audio_el.removeEventListener("waiting", l.startToBuffer), l.audio_el.removeEventListener("playing", l.stopToBuffer), l.audio_el.src = "", l.audio_el.load())
        }, this.startToBuffer = function(e) {
            l.dispatchEvent(FWDUVPVideoScreen.START_TO_BUFFER)
        }, this.stopToBuffer = function() {
            l.dispatchEvent(FWDUVPVideoScreen.STOP_TO_BUFFER)
        }, this.togglePlayPause = function() {
            null != l && l.isSafeToBeControlled_bl && (l.isPlaying_bl ? l.pause() : l.play())
        }, this.errorHandler = function(e) {
            if (null != l.sourcePath_str && null != l.sourcePath_str) {
                if (l.isNormalMp3_bl && l.countNormalMp3Errors <= l.maxNormalCountErrors) return l.stop(), l.testShoutCastId_to = setTimeout(l.play, 200), void l.countNormalMp3Errors++;
                if (l.isShoutcast_bl && l.countShoutCastErrors <= l.maxShoutCastCountErrors && 0 == l.audio_el.networkState) return l.testShoutCastId_to = setTimeout(l.play, 200), void l.countShoutCastErrors++;
                var t;
                l.hasError_bl = !0, l.stop(), t = 0 == l.audio_el.networkState ? "error 'self.audio_el.networkState = 1'" : 1 == l.audio_el.networkState ? "error 'self.audio_el.networkState = 1'" : 2 == l.audio_el.networkState ? "'self.audio_el.networkState = 2'" : 3 == l.audio_el.networkState ? "source not found" : e, o.console && o.console.log(l.audio_el.networkState), l.dispatchEvent(i.ERROR, {
                    text: t
                })
            }
        }, this.setSource = function(e) {
            l.sourcePath_str = e, clearTimeout(l.testShoutCastId_to), -1 != l.sourcePath_str.indexOf(";") ? (l.isShoutcast_bl = !0, l.countShoutCastErrors = 0) : l.isShoutcast_bl = !1, -1 == l.sourcePath_str.indexOf(";") ? (l.isNormalMp3_bl = !0, l.countNormalMp3Errors = 0) : l.isNormalMp3_bl = !1, l.lastPercentPlayed = 0, l.audio_el && l.stop(!0)
        }, this.play = function(e) {
            if (l.isStopped_bl) l.isPlaying_bl = !1, l.hasError_bl = !1, l.allowScrubing_bl = !1, l.isStopped_bl = !1, l.setupAudio(), l.audio_el.src = l.sourcePath_str, l.play(), l.setVisible(!0);
            else if (!l.audio_el.ended || e) try {
                l.isPlaying_bl = !0, l.hasPlayedOnce_bl = !0, l.audio_el.play(), FWDUVPUtils.isIE && l.dispatchEvent(i.PLAY)
            } catch (e) {
                console.log(e)
            }
        }, this.resume = function() {
            l.isStopped_bl || l.play()
        }, this.pause = function() {
            null != l && null != l.audio_el && (l.audio_el.ended || (l.audio_el.pause(), l.isPlaying_bl = !1, FWDUVPUtils.isIE && l.dispatchEvent(i.PAUSE)))
        }, this.pauseHandler = function() {
            l.allowScrubing_bl || (l.stopSpectrum(), l.dispatchEvent(i.PAUSE))
        }, this.playHandler = function() {
            l.allowScrubing_bl || (l.isStartEventDispatched_bl || (l.dispatchEvent(i.START), l.isStartEventDispatched_bl = !0), l.startSpectrum(), l.dispatchEvent(i.PLAY))
        }, this.endedHandler = function() {
            l.dispatchEvent(i.PLAY_COMPLETE)
        }, this.stop = function(e) {
            (null != l && null != l.audio_el && !l.isStopped_bl || e) && (l.isPlaying_bl = !1, l.isStopped_bl = !0, l.hasPlayedOnce_bl = !0, l.isSafeToBeControlled_bl = !1, l.isStartEventDispatched_bl = !1, l.setVisible(!1), clearTimeout(l.testShoutCastId_to), l.stopToUpdateSubtitles(), l.stopSpectrum(), l.audio_el.pause(), l.destroyAudio(), l.dispatchEvent(i.STOP), l.dispatchEvent(i.LOAD_PROGRESS, {
                percent: 0
            }))
        }, this.safeToBeControlled = function() {
            l.isSafeToBeControlled_bl || (l.hasHours_bl = 0 < Math.floor(l.audio_el.duration / 3600), l.isPlaying_bl = !0, l.isSafeToBeControlled_bl = !0, l.startToUpdateSubtitles(), l.dispatchEvent(i.SAFE_TO_SCRUBB), l.dispatchEvent(i.SAFE_TO_UPDATE_VOLUME))
        }, this.updateProgress = function() {
            var e = 0;
            0 < l.audio_el.buffered.length && (e = l.audio_el.buffered.end(l.audio_el.buffered.length - 1).toFixed(1) / l.audio_el.duration.toFixed(1), !isNaN(e) && e || (e = 0)), 1 == e && l.audio_el.removeEventListener("progress", l.updateProgress), l.dispatchEvent(i.LOAD_PROGRESS, {
                percent: e
            })
        }, this.updateAudio = function() {
            var e;
            l.allowScrubing_bl || (e = l.audio_el.currentTime / l.audio_el.duration, l.dispatchEvent(i.UPDATE, {
                percent: e
            }));
            var t = l.formatTime(l.audio_el.duration),
                o = l.formatTime(l.audio_el.currentTime);
            isNaN(l.audio_el.duration) ? l.dispatchEvent(FWDUVPVideoScreen.UPDATE_TIME, {
                curTime: "00:00",
                totalTime: "00:00",
                seconds: 0,
                totalTimeInSeconds: 0
            }) : l.dispatchEvent(FWDUVPVideoScreen.UPDATE_TIME, {
                curTime: o,
                totalTime: t,
                seconds: parseInt(l.audio_el.currentTime),
                totalTimeInSeconds: l.audio_el.duration
            }), l.lastPercentPlayed = e, l.curDuration = o
        }, this.startToScrub = function() {
            l.allowScrubing_bl = !0
        }, this.stopToScrub = function() {
            l.allowScrubing_bl = !1
        }, this.scrubbAtTime = function(e) {
            l.audio_el.currentTime = e;
            var t = FWDUVPVideoScreen.formatTime(l.audio_el.duration),
                o = FWDUVPVideoScreen.formatTime(l.audio_el.currentTime);
            l.dispatchEvent(FWDUVPVideoScreen.UPDATE_TIME, {
                curTime: o,
                totalTime: t
            })
        }, this.scrub = function(e, t) {
            if (null != l.audio_el && l.audio_el.duration) {
                t && l.startToScrub();
                try {
                    l.audio_el.currentTime = l.audio_el.duration * e;
                    var o = l.formatTime(l.audio_el.duration),
                        s = l.formatTime(l.audio_el.currentTime);
                    l.dispatchEvent(i.UPDATE_TIME, {
                        curTime: s,
                        totalTime: o
                    })
                } catch (t) {}
            }
        }, this.replay = function() {
            l.scrub(0), l.play()
        }, this.stopToUpdateSubtitles = function() {
            clearInterval(l.startToUpdateSubtitleId_int)
        }, this.startToUpdateSubtitles = function() {
            clearInterval(l.startToUpdateSubtitleId_int), l.startToUpdateSubtitleId_int = setInterval(l.updateSubtitleHandler, 10)
        }, this.updateSubtitleHandler = function() {
            l.dispatchEvent(i.UPDATE_SUBTITLE, {
                curTime: l.audio_el.currentTime
            })
        }, this.setVolume = function(e) {
            null != e && (l.volume = e), l.audio_el && (l.audio_el.volume = l.volume)
        }, this.formatTime = function(e) {
            var t = Math.floor(e / 3600),
                o = e % 3600,
                s = Math.floor(o / 60),
                i = o % 60,
                n = Math.ceil(i);
            return s = 10 <= s ? s : "0" + s, n = 10 <= n ? n : "0" + n, isNaN(n) ? "00:00" : l.hasHours_bl ? t + ":" + s + ":" + n : s + ":" + n
        }, this.setPlaybackRate = function(e) {
            l.audio_el && (.25 == e && (e = "0.5"), l.audio_el.defaultPlaybackRate = e, l.audio_el.playbackRate = e)
        }, this.setupSpectrum = function() {
            if (!t.useWithoutVideoScreen_bl) {
                var e = o.AudioContext || o.webkitAudioContext;
                !this.canvas_do && e && (3 < i.countAudioContext || (i.countAudioContext++, this.canvas_do = new FWDUVPDisplayObject("canvas"), this.addChild(this.canvas_do), this.canvas = this.canvas_do.screen, this.ctx = this.canvas.getContext("2d"), this.resizeSpectrumCanvas(), e && (this.context = new e, this.analyser = this.context.createAnalyser(), this.source = this.context.createMediaElementSource(this.audio_el), this.source.connect(this.analyser), this.analyser.connect(this.context.destination), this.fbc_array = new Uint8Array(this.analyser.frequencyBinCount), this.renderSpectrum())))
            }
        }, this.resizeSpectrumCanvas = function() {
            l.canvas_do && (l.canvas_do.setWidth(l.stageWidth), l.canvas_do.setHeight(l.stageHeight), l.canvas.width = l.stageWidth, l.canvas.height = l.stageHeight)
        }, l.bars = 200, FWDUVPUtils.isMobile && (l.bars = 100), l.react_x = 0, l.react_y = 0, l.radius = 0, l.deltarad = 0, l.shockwave = 0, l.rot = 0, l.intensity = 0, l.isSeeking = 0, l.center_x, l.center_y, this.renderSpectrum = function() {
            if (l.canvas_do) {
                l.resizeSpectrumCanvas();
                var e = l.ctx.createLinearGradient(0, 0, 0, l.canvas.height);
                e.addColorStop(0, "rgba(0, 0, 0, 1)"), e.addColorStop(1, "rgba(0, 0, 0, 1)"), l.ctx.fillStyle = e, l.ctx.fillRect(0, 0, l.canvas.width, l.canvas.height), l.ctx.fillStyle = "rgba(255, 255, 255, " + (125e-7 * l.intensity - .4) + ")", l.ctx.fillRect(0, 0, l.canvas.width, l.canvas.height), l.rot = l.rot + 1e-7 * l.intensity, l.react_x = 0, l.react_y = 0, l.intensity = 0, l.analyser.getByteFrequencyData(l.fbc_array);
                for (var t = 0; t < l.bars; t++) {
                    rads = 2 * Math.PI / l.bars, bar_x = l.center_x, bar_y = l.center_y;
                    var o = l.stageHeight / 3;
                    isNaN(o) && (o = 10), bar_height = Math.round(l.fbc_array[t] / 256 * o), bar_width = Math.round(.02 * bar_height), bar_x_term = l.center_x + Math.cos(rads * t + l.rot) * (l.radius + bar_height), bar_y_term = l.center_y + Math.sin(rads * t + l.rot) * (l.radius + bar_height), l.ctx.save();
                    var s = l.audioVisualizerLinesColor_str;
                    l.ctx.strokeStyle = s, l.ctx.lineWidth = bar_width, l.ctx.beginPath(), l.ctx.moveTo(bar_x, bar_y), l.ctx.lineTo(bar_x_term, bar_y_term), l.ctx.stroke(), l.react_x += Math.cos(rads * t + l.rot) * (l.radius + bar_height), l.react_y += Math.sin(rads * t + l.rot) * (l.radius + bar_height), l.intensity += bar_height
                }
                l.center_x = l.canvas.width / 2 - .007 * l.react_x, l.center_y = l.canvas.height / 2 - .007 * l.react_y, radius_old = l.radius, l.radius = 25 + .002 * l.intensity, l.deltarad = l.radius - radius_old, l.ctx.fillStyle = l.audioVisualizerCircleColor_str, l.ctx.beginPath(), l.ctx.arc(l.center_x, l.center_y, l.radius + 2, 0, 2 * Math.PI, !1), l.ctx.fill(), l.shockwave += 60, l.ctx.lineWidth = 15, l.ctx.strokeStyle = l.audioVisualizerCircleColor_str, l.ctx.beginPath(), l.ctx.arc(l.center_x, l.center_y, l.shockwave + l.radius, 0, 2 * Math.PI, !1), l.ctx.stroke(), 15 < l.deltarad && (l.shockwave = 0, l.ctx.fillStyle = "rgba(255, 255, 255, 0.7)", l.ctx.fillRect(0, 0, l.canvas.width, l.canvas.height), l.rot = l.rot + .4), l.startSpectrum()
            }
        }, this.startSpectrum = function() {
            l.canvas_do && (l.stopSpectrum(), l.spectrumAnimationFrameId = o.requestAnimationFrame(l.renderSpectrum))
        }, this.stopSpectrum = function() {
            l.canvas_do && cancelAnimationFrame(l.spectrumAnimationFrameId)
        }, this.init()
    };
    i.setPrototype = function() {
        i.prototype = new FWDUVPDisplayObject("div")
    }, i.UPDATE_SUBTITLE = "updateSubtitle", i.ERROR = "error", i.UPDATE = "update", i.UPDATE = "update", i.UPDATE_TIME = "updateTime", i.SAFE_TO_SCRUBB = "safeToControll", i.SAFE_TO_UPDATE_VOLUME = "safeToUpdateVolume", i.LOAD_PROGRESS = "loadProgress", i.START = "start", i.PLAY = "play", i.PAUSE = "pause", i.STOP = "stop", i.PLAY_COMPLETE = "playComplete", i.countAudioContext = 0, o.FWDUVPAudioScreen = i
}(window), function() {
    var e = function(o, s) {
        var p = this;
        e.prototype;
        this.image_img, this.catThumbBk_img = o.catThumbBk_img, this.catNextN_img = o.catNextN_img, this.catPrevN_img = o.catPrevN_img, this.catCloseN_img = o.catCloseN_img, this.mainHolder_do = null, this.closeButton_do = null, this.nextButton_do = null, this.prevButton_do = null, this.thumbs_ar = [], this.categories_ar = o.cats_ar, this.catBkPath_str = o.catBkPath_str, this.id = 0, this.mouseX = 0, this.mouseY = 0, this.dif = 0, this.tempId = p.id, this.stageWidth = 0, this.stageHeight = 0, this.thumbW = 0, this.thumbH = 0, this.buttonsMargins = o.buttonsMargins, this.thumbnailMaxWidth = o.thumbnailMaxWidth, this.thumbnailMaxHeight = o.thumbnailMaxHeight, this.spacerH = o.horizontalSpaceBetweenThumbnails, this.spacerV = o.verticalSpaceBetweenThumbnails, this.dl, this.howManyThumbsToDisplayH = 0, this.howManyThumbsToDisplayV = 0, p.catNextN_img && (this.categoriesOffsetTotalWidth = 2 * p.catNextN_img.width + 30, this.categoriesOffsetTotalHeight = p.catNextN_img.height + 30), this.totalThumbnails = p.categories_ar.length, this.delayRate = .06, this.countLoadedThumbs = 0, this.inputBackgroundColor_str = o.inputBackgroundColor_str, this.inputColor_str = o.inputColor_str, this.hideCompleteId_to, this.showCompleteId_to, this.loadThumbnailsId_to, this.preventMouseWheelNavigId_to, this.preventMouseWheelNavig_bl = !1, this.areThumbnailsCreated_bl = !1, this.areThumbnailsLoaded_bl = !1, this.isShowed_bl = !1, this.isOnDOM_bl = !1, this.showSearchInput_bl = o.showPlaylistsSearchInput_bl, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.useVectorIcons_bl = o.useVectorIcons_bl, p.init = function() {
            -1 != o.skinPath_str.indexOf("hex_white") ? p.selectedButtonsColor_str = "#FFFFFF" : p.selectedButtonsColor_str = o.selectedButtonsColor_str, p.getStyle().zIndex = 16777271, p.getStyle().msTouchAction = "none", p.getStyle().webkitTapHighlightColor = "rgba(0, 0, 0, 0)", p.getStyle().width = "100%", p.mainHolder_do = new FWDUVPDisplayObject("div"), p.mainHolder_do.getStyle().background = "url('" + p.catBkPath_str + "')", p.mainHolder_do.setY(-3e3), p.addChild(p.mainHolder_do), p.setupDisable(), p.isMobile_bl && (p.setupMobileMove(), FWDUVPUtils.isChrome && (FWDUVPUtils.isIEAndLessThen9 ? document.getElementsByTagName("body")[0].appendChild(p.screen) : document.documentElement.appendChild(p.screen))), (!p.isMobile_bl || p.isMobile_bl && p.hasPointerEvent_bl) && p.setSelectable(!1), window.addEventListener ? (p.screen.addEventListener("mousewheel", p.mouseWheelDumyHandler), p.screen.addEventListener("DOMMouseScroll", p.mouseWheelDumyHandler)) : document.attachEvent && p.screen.attachEvent("onmousewheel", p.mouseWheelDumyHandler), p.showSearchInput_bl && p.setupInput()
        }, this.mouseWheelDumyHandler = function(e) {
            var t;
            if (FWDAnimation.isTweening(p.mainHolder_do)) return e.preventDefault && e.preventDefault(), !1;
            for (var o = 0; o < p.totalThumbnails; o++)
                if (t = p.thumbs_ar[o], FWDAnimation.isTweening(t)) return e.preventDefault && e.preventDefault(), !1;
            var s = e.detail || e.wheelDelta;
            if (e.wheelDelta && (s *= -1), FWDUVPUtils.isOpera && (s *= -1), 0 < s) p.nextButtonOnMouseUpHandler();
            else if (s < 0) {
                if (p.leftId <= 0) return;
                p.prevButtonOnMouseUpHandler()
            }
            if (!e.preventDefault) return !1;
            e.preventDefault()
        }, p.resizeAndPosition = function(e) {
            if (p.isShowed_bl || e) {
                var t = FWDUVPUtils.getScrollOffsets(),
                    o = FWDUVPUtils.getViewportSize();
                p.stageWidth = o.w, p.stageHeight = o.h, FWDAnimation.killTweensOf(p.mainHolder_do), p.mainHolder_do.setX(0), p.mainHolder_do.setWidth(p.stageWidth), p.mainHolder_do.setHeight(p.stageHeight), p.setX(t.x), p.setY(t.y), p.setHeight(p.stageHeight), (p.isMobile_bl || s.isEmbedded_bl) && p.setWidth(p.stageWidth), p.positionButtons(), p.tempId = p.id, p.resizeAndPositionThumbnails(), p.disableEnableNextAndPrevButtons(), p.input_do && (p.input_do.setX(p.stageWidth - p.input_do.getWidth() - p.buttonsMargins), p.input_do.setY(p.stageHeight - p.input_do.getHeight() - p.buttonsMargins), p.inputArrow_do.setX(p.input_do.x + p.input_do.getWidth() - 14), p.inputArrow_do.setY(p.input_do.y + p.input_do.getHeight() / 2 - p.inputArrow_do.getHeight() / 2))
            }
        }, p.onScrollHandler = function() {
            var e = FWDUVPUtils.getScrollOffsets();
            p.setX(e.x), p.setY(e.y)
        }, this.setupInput = function() {
            p.input_do = new FWDUVPDisplayObject("input"), p.input_do.screen.maxLength = 20, p.input_do.getStyle().textAlign = "left", p.input_do.getStyle().outline = "none", p.input_do.getStyle().boxShadow = "none", p.input_do.getStyle().fontSmoothing = "antialiased", p.input_do.getStyle().webkitFontSmoothing = "antialiased", p.input_do.getStyle().textRendering = "optimizeLegibility", p.input_do.getStyle().fontFamily = "Arial", p.input_do.getStyle().fontSize = "12px", p.input_do.getStyle().padding = "6px", FWDUVPUtils.isIEAndLessThen9 || (p.input_do.getStyle().paddingRight = "-6px"), p.input_do.getStyle().paddingTop = "2px", p.input_do.getStyle().paddingBottom = "3px", p.input_do.getStyle().backgroundColor = p.inputBackgroundColor_str, p.input_do.getStyle().color = p.inputColor_str, p.input_do.getStyle().borderRadius = "6px", p.input_do.screen.value = "search", p.input_do.setHeight(20), p.input_do.setX(18), p.noSearchFound_do = new FWDUVPDisplayObject("div"), p.noSearchFound_do.setX(0), p.noSearchFound_do.getStyle().textAlign = "center", p.noSearchFound_do.getStyle().width = "100%", p.noSearchFound_do.getStyle().fontSmoothing = "antialiased", p.noSearchFound_do.getStyle().webkitFontSmoothing = "antialiased", p.noSearchFound_do.getStyle().textRendering = "optimizeLegibility", p.noSearchFound_do.getStyle().fontFamily = "Arial", p.noSearchFound_do.getStyle().fontSize = "12px", p.noSearchFound_do.getStyle().color = p.inputColor_str, p.noSearchFound_do.setInnerHTML("NOTHING FOUND!"), p.noSearchFound_do.setVisible(!1), p.addChild(p.noSearchFound_do);
            var e = new Image;
            e.src = o.inputArrowPath_str, p.inputArrow_do = new FWDUVPDisplayObject("img"), p.inputArrow_do.setScreen(e), p.inputArrow_do.setWidth(9), p.inputArrow_do.setHeight(10), p.hasPointerEvent_bl ? p.input_do.screen.addEventListener("pointerdown", p.inputFocusInHandler) : p.input_do.screen.addEventListener && (p.input_do.screen.addEventListener("mousedown", p.inputFocusInHandler), p.input_do.screen.addEventListener("touchstart", p.inputFocusInHandler)), p.input_do.screen.addEventListener("keyup", p.keyUpHandler), p.mainHolder_do.addChild(p.input_do), p.mainHolder_do.addChild(p.inputArrow_do)
        }, this.inputFocusInHandler = function() {
            p.hasInputFocus_bl || (p.hasInputFocus_bl = !0, "search" == p.input_do.screen.value && (p.input_do.screen.value = ""), p.input_do.screen.focus(), setTimeout(function() {
                p.hasPointerEvent_bl ? window.addEventListener("pointerdown", p.inputFocusOutHandler) : window.addEventListener && (window.addEventListener("mousedown", p.inputFocusOutHandler), window.addEventListener("touchstart", p.inputFocusOutHandler))
            }, 50))
        }, this.inputFocusOutHandler = function(e) {
            if (p.hasInputFocus_bl) {
                var t = FWDUVPUtils.getViewportMouseCoordinates(e);
                return FWDUVPUtils.hitTest(p.input_do.screen, t.screenX, t.screenY) ? void 0 : (p.hasInputFocus_bl = !1, void("" == p.input_do.screen.value && (p.input_do.screen.value = "search", p.hasPointerEvent_bl ? window.removeEventListener("pointerdown", p.inputFocusOutHandler) : window.removeEventListener && (window.removeEventListener("mousedown", p.inputFocusOutHandler), window.removeEventListener("touchstart", p.inputFocusOutHandler)))))
            }
        }, this.keyUpHandler = function(e) {
            e.stopPropagation && e.stopPropagation(), p.prevInputValue_str != p.input_do.screen.value && (clearTimeout(p.keyPressedId_to), p.keyPressed_bl = !0, clearTimeout(p.rsId_to), p.rsId_to = setTimeout(function() {
                p.resizeAndPositionThumbnails(!0), p.disableEnableNextAndPrevButtons()
            }, 400)), p.prevInputValue_str = p.input_do.screen.value, p.keyPressedId_to = setTimeout(function() {
                p.keyPressed_bl = !1
            }, 450)
        }, this.showNothingFound = function() {
            p.isShowNothingFound_bl || (p.isShowNothingFound_bl = !0, p.noSearchFound_do.setVisible(!0), p.noSearchFound_do.setY(parseInt((p.stageHeight - p.noSearchFound_do.getHeight()) / 2)), p.noSearchFound_do.setAlpha(0), FWDAnimation.to(p.noSearchFound_do, .1, {
                alpha: 1,
                yoyo: !0,
                repeat: 4
            }))
        }, this.hideNothingFound = function() {
            p.isShowNothingFound_bl && (p.isShowNothingFound_bl = !1, FWDAnimation.killTweensOf(p.noSearchFound_do), p.noSearchFound_do.setVisible(!1))
        }, this.setupDisable = function() {
            p.disable_do = new FWDUVPDisplayObject("div"), FWDUVPUtils.isIE && (p.disable_do.setBkColor("#FFFFFF"), p.disable_do.setAlpha(.01)), p.addChild(p.disable_do)
        }, this.showDisable = function() {
            p.disable_do.w != p.stageWidth && (p.disable_do.setWidth(p.stageWidth), p.disable_do.setHeight(p.stageHeight))
        }, this.hideDisable = function() {
            0 != p.disable_do.w && (p.disable_do.setWidth(0), p.disable_do.setHeight(0))
        }, this.setupButtons = function() {
            p.closeButton_do || (p.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), p.closeButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<div class='table-fwduvp-button'><span class='table-cell-fwduvp-button icon-close'></span></div>", void 0, "UVPCategoriesNextAndPrevNormalState", "UVPCategoriesNextAndPrevSelectedState")) : (FWDUVPSimpleButton.setPrototype(), p.closeButton_do = new FWDUVPSimpleButton(p.catCloseN_img, o.catCloseSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, p.selectedButtonsColor_str)), p.closeButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, p.closeButtonOnMouseUpHandler), p.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), p.nextButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<div class='table-fwduvp-button'><span class='table-cell-fwduvp-button icon-FF-right'></span></div>", void 0, "UVPCategoriesNextAndPrevNormalState", "UVPCategoriesNextAndPrevSelectedState")) : (FWDUVPSimpleButton.setPrototype(), p.nextButton_do = new FWDUVPSimpleButton(p.catNextN_img, o.catNextSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, p.selectedButtonsColor_str)), p.nextButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, p.nextButtonOnMouseUpHandler), p.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), p.prevButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<div class='table-fwduvp-button'><span class='table-cell-fwduvp-button icon-FF-left'></span></div>", void 0, "UVPCategoriesNextAndPrevNormalState", "UVPCategoriesNextAndPrevSelectedState")) : (FWDUVPSimpleButton.setPrototype(), p.prevButton_do = new FWDUVPSimpleButton(p.catPrevN_img, o.catPrevSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, p.selectedButtonsColor_str)), p.prevButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, p.prevButtonOnMouseUpHandler))
        }, this.closeButtonOnMouseUpHandler = function() {
            p.hide()
        }, this.nextButtonOnMouseUpHandler = function() {
            var e = p.howManyThumbsToDisplayH * p.howManyThumbsToDisplayV;
            p.tempId += e, p.tempId > p.totalThumbnails - 1 && (p.tempId = p.totalThumbnails - 1);
            var t = Math.floor(p.tempId / e);
            p.tempId = t * e, p.resizeAndPositionThumbnails(!0, "next"), p.disableEnableNextAndPrevButtons(!1, !0)
        }, this.prevButtonOnMouseUpHandler = function() {
            var e = p.howManyThumbsToDisplayH * p.howManyThumbsToDisplayV;
            p.tempId -= e, p.tempId < 0 && (p.tempId = 0);
            var t = Math.floor(p.tempId / e);
            p.tempId = t * e, p.resizeAndPositionThumbnails(!0, "prev"), p.disableEnableNextAndPrevButtons(!0, !1)
        }, this.positionButtons = function() {
            p.closeButton_do.setX(p.stageWidth - p.closeButton_do.w - p.buttonsMargins), p.closeButton_do.setY(p.buttonsMargins), p.nextButton_do.setX(p.stageWidth - p.nextButton_do.w - p.buttonsMargins), p.nextButton_do.setY(parseInt((p.stageHeight - p.nextButton_do.h) / 2)), p.prevButton_do.setX(p.buttonsMargins), p.prevButton_do.setY(parseInt((p.stageHeight - p.prevButton_do.h) / 2))
        }, this.disableEnableNextAndPrevButtons = function(e, t) {
            var o = p.howManyThumbsToDisplayH * p.howManyThumbsToDisplayV,
                s = Math.floor(p.tempId / o),
                i = Math.ceil(p.totalThumbnails / o) - 1;
            p.howManyThumbsToDisplayH, p.howManyThumbsToDisplayH;
            o >= p.totalThumbnails ? (p.nextButton_do.disable(), p.prevButton_do.disable(), p.nextButton_do.setDisabledState(), p.prevButton_do.setDisabledState()) : 0 == s ? (p.nextButton_do.enable(), p.prevButton_do.disable(), p.nextButton_do.setEnabledState(), p.prevButton_do.setDisabledState()) : (s == i ? (p.nextButton_do.disable(), p.prevButton_do.enable(), p.nextButton_do.setDisabledState()) : (p.nextButton_do.enable(), p.prevButton_do.enable(), p.nextButton_do.setEnabledState()), p.prevButton_do.setEnabledState()), e || p.prevButton_do.setNormalState(), t || p.nextButton_do.setNormalState()
        }, this.setupMobileMove = function() {
            p.hasPointerEvent_bl ? p.screen.addEventListener("pointerdown", p.mobileDownHandler) : p.screen.addEventListener("touchstart", p.mobileDownHandler)
        }, this.mobileDownHandler = function(e) {
            if (!e.touches || 1 == e.touches.length) {
                var t = FWDUVPUtils.getViewportMouseCoordinates(e);
                p.mouseX = t.screenX, p.mouseY = t.screenY, p.hasPointerEvent_bl ? (window.addEventListener("pointerup", p.mobileUpHandler), window.addEventListener("pointermove", p.mobileMoveHandler)) : (window.addEventListener("touchend", p.mobileUpHandler), window.addEventListener("touchmove", p.mobileMoveHandler))
            }
        }, this.mobileMoveHandler = function(e) {
            if (e.preventDefault && e.preventDefault(), !e.touches || 1 == e.touches.length) {
                p.showDisable();
                var t = FWDUVPUtils.getViewportMouseCoordinates(e);
                p.dif = p.mouseX - t.screenX, p.mouseX = t.screenX, p.mouseY = t.screenY
            }
        }, this.mobileUpHandler = function(e) {
            p.hideDisable(), 10 < p.dif ? p.nextButtonOnMouseUpHandler() : p.dif < -10 && p.prevButtonOnMouseUpHandler(), p.dif = 0, p.hasPointerEvent_bl ? (window.removeEventListener("pointerup", p.mobileUpHandler), window.removeEventListener("pointermove", p.mobileMoveHandler)) : (window.removeEventListener("touchend", p.mobileUpHandler), window.removeEventListener("touchmove", p.mobileMoveHandler))
        }, this.setupThumbnails = function() {
            if (!p.areThumbnailsCreated_bl) {
                var e;
                p.areThumbnailsCreated_bl = !0;
                for (var t = 0; t < p.totalThumbnails; t++) FWDUVPCategoriesThumb.setPrototype(), (e = new FWDUVPCategoriesThumb(p, t, o.catThumbBkPath_str, o.catThumbBkTextPath_str, o.thumbnailSelectedType_str, p.categories_ar[t].htmlContent, p.categories_ar[t].htmlText_str)).addListener(FWDUVPCategoriesThumb.MOUSE_UP, p.thumbnailOnMouseUpHandler), p.thumbs_ar[t] = e, p.mainHolder_do.addChild(e);
                p.mainHolder_do.addChild(p.closeButton_do), p.mainHolder_do.addChild(p.nextButton_do), p.mainHolder_do.addChild(p.prevButton_do)
            }
        }, this.thumbnailOnMouseUpHandler = function(e) {
            p.id = e.id, p.disableOrEnableThumbnails(), p.hide()
        }, this.resizeAndPositionThumbnails = function(e, t) {
            if (p.areThumbnailsCreated_bl) {
                var o, s, i, n, l, a, r, d, u, h = [].concat(p.thumbs_ar);
                if (p.isSearched_bl = !1, p.input_do && (inputValue = p.input_do.screen.value.toLowerCase(), "search" != inputValue))
                    for (var c = 0; c < h.length; c++) - 1 == (o = h[c]).htmlText_str.toLowerCase().indexOf(inputValue.toLowerCase()) && (FWDAnimation.killTweensOf(o), o.hide(), h.splice(c, 1), c--);
                p.totalThumbnails = h.length, p.totalThumbnails != p.thumbs_ar.length && (p.isSearched_bl = !0), 0 == p.totalThumbnails ? p.showNothingFound() : p.hideNothingFound(), this.remainWidthSpace = this.stageWidth - n;
                var _ = p.stageWidth - p.categoriesOffsetTotalWidth,
                    f = p.stageHeight - p.categoriesOffsetTotalHeight;
                p.howManyThumbsToDisplayH = Math.ceil((_ - p.spacerH) / (p.thumbnailMaxWidth + p.spacerH)), p.thumbW = Math.floor((_ - p.spacerH * (p.howManyThumbsToDisplayH - 1)) / p.howManyThumbsToDisplayH), p.thumbW > p.thumbnailMaxWidth && (p.howManyThumbsToDisplayH += 1, p.thumbW = Math.floor((_ - p.spacerH * (p.howManyThumbsToDisplayH - 1)) / p.howManyThumbsToDisplayH)), p.thumbH = Math.floor(p.thumbW / p.thumbnailMaxWidth * p.thumbnailMaxHeight), p.howManyThumbsToDisplayV = Math.floor(f / (p.thumbH + p.spacerV)), p.howManyThumbsToDisplayV < 1 && (p.howManyThumbsToDisplayV = 1), n = Math.min(p.howManyThumbsToDisplayH, p.totalThumbnails) * (p.thumbW + p.spacerH) - p.spacerH, l = Math.min(Math.ceil(p.totalThumbnails / p.howManyThumbsToDisplayH), p.howManyThumbsToDisplayV) * (p.thumbH + p.spacerV) - p.spacerV, a = p.howManyThumbsToDisplayH > p.totalThumbnails ? 0 : _ - n, p.howManyThumbsToDisplayH > p.totalThumbnails && (p.howManyThumbsToDisplayH = p.totalThumbnails), u = p.howManyThumbsToDisplayH * p.howManyThumbsToDisplayV, s = Math.floor(p.tempId / u), p.isSearched_bl && (s = 0), d = p.howManyThumbsToDisplayH * s, firstId = s * u, (r = firstId + u) > p.totalThumbnails && (r = p.totalThumbnails);
                for (c = 0; c < p.totalThumbnails; c++)(o = h[c]).finalW = p.thumbW, c % p.howManyThumbsToDisplayH == p.howManyThumbsToDisplayH - 1 && (o.finalW += a), o.finalH = p.thumbH, o.finalX = c % p.howManyThumbsToDisplayH * (p.thumbW + p.spacerH), o.finalX += Math.floor(c / u) * p.howManyThumbsToDisplayH * (p.thumbW + p.spacerH), o.finalX += (p.stageWidth - n) / 2, o.finalX = Math.floor(o.finalX - d * (p.thumbW + p.spacerH)), o.finalY = c % u, o.finalY = Math.floor(o.finalY / p.howManyThumbsToDisplayH) * (p.thumbH + p.spacerV), o.finalY += (f - l) / 2, o.finalY += p.categoriesOffsetTotalHeight / 2, o.finalY = Math.floor(o.finalY), s < (i = Math.floor(c / u)) ? o.finalX += 150 : i < s && (o.finalX -= 150), e ? c >= firstId && c < r ? (dl = "next" == t ? c % u * p.delayRate + .1 : (u - c % u) * p.delayRate + .1, p.keyPressed_bl && (dl = 0), o.resizeAndPosition(!0, dl)) : o.resizeAndPosition(!0, 0) : o.resizeAndPosition(), o.show();
                p.howManyThumbsToDisplayH * p.howManyThumbsToDisplayV >= p.totalThumbnails ? (p.nextButton_do.setVisible(!1), p.prevButton_do.setVisible(!1)) : (p.nextButton_do.setVisible(!0), p.prevButton_do.setVisible(!0))
            }
        }, this.loadImages = function() {
            p.countLoadedThumbs > p.totalThumbnails - 1 || (p.image_img && (p.image_img.onload = null, p.image_img.onerror = null), p.image_img = new Image, p.image_img.onerror = p.onImageLoadError, p.image_img.onload = p.onImageLoadComplete, p.image_img.src = p.categories_ar[p.countLoadedThumbs].thumbnailPath)
        }, this.onImageLoadError = function(e) {}, this.onImageLoadComplete = function(e) {
            p.thumbs_ar[p.countLoadedThumbs].setImage(p.image_img), p.countLoadedThumbs++, p.loadWithDelayId_to = setTimeout(p.loadImages, 40)
        }, this.disableOrEnableThumbnails = function() {
            for (var e, t = 0; t < p.totalThumbnails; t++) e = p.thumbs_ar[t], t == p.id ? e.disable() : e.enable()
        }, this.show = function(e) {
            if (!p.isShowed_bl)
                if (p.isShowed_bl = !0, p.isOnDOM_bl = !0, p.id = e, p.setupButtons(), FWDUVPUtils.isChrome && p.isMobile_bl ? p.setVisible(!0) : FWDUVPUtils.isIEAndLessThen9 ? document.getElementsByTagName("body")[0].appendChild(p.screen) : document.documentElement.appendChild(p.screen), window.addEventListener ? window.addEventListener("scroll", p.onScrollHandler) : window.attachEvent && window.attachEvent("onscroll", p.onScrollHandler), p.setupThumbnails(), p.useVectorIcons_bl) {
                    if (0 == p.closeButton_do.w) var t = setInterval(function() {
                        0 < p.closeButton_do.w && (p.categoriesOffsetTotalWidth = 2 * p.closeButton_do.w + 30, p.categoriesOffsetTotalHeight = p.closeButton_do.h + 30, clearInterval(t))
                    }, 50);
                    p.checkButtonsId_to = setInterval(function() {
                        0 != p.closeButton_do.w && (p.resizeAndPosition(!0), p.showDisable(), p.disableOrEnableThumbnails(), clearTimeout(p.hideCompleteId_to), clearTimeout(p.showCompleteId_to), p.mainHolder_do.setY(-p.stageHeight), p.isMobile_bl ? (p.showCompleteId_to = setTimeout(p.showCompleteHandler, 1200), FWDAnimation.to(p.mainHolder_do, .8, {
                            y: 0,
                            delay: .4,
                            ease: Expo.easeInOut
                        })) : (p.showCompleteId_to = setTimeout(p.showCompleteHandler, 800), FWDAnimation.to(p.mainHolder_do, .8, {
                            y: 0,
                            ease: Expo.easeInOut
                        })), clearInterval(p.checkButtonsId_to))
                    }, 50)
                } else p.resizeAndPosition(!0), p.showDisable(), p.disableOrEnableThumbnails(), clearTimeout(p.hideCompleteId_to), clearTimeout(p.showCompleteId_to), p.mainHolder_do.setY(-p.stageHeight), p.isMobile_bl ? (p.showCompleteId_to = setTimeout(p.showCompleteHandler, 1200), FWDAnimation.to(p.mainHolder_do, .8, {
                    y: 0,
                    delay: .4,
                    ease: Expo.easeInOut
                })) : (p.showCompleteId_to = setTimeout(p.showCompleteHandler, 800), FWDAnimation.to(p.mainHolder_do, .8, {
                    y: 0,
                    ease: Expo.easeInOut
                }))
        }, this.showCompleteHandler = function() {
            p.mainHolder_do.setY(0), p.hideDisable(), FWDUVPUtils.isIphone && (s.videoScreen_do && s.videoScreen_do.setY(-5e3), s.ytb_do && s.ytb_do.setY(-5e3)), p.resizeAndPosition(!0), p.areThumbnailsLoaded_bl || (p.loadImages(), p.areThumbnailsLoaded_bl = !0)
        }, this.hide = function() {
            p.isShowed_bl && (p.isShowed_bl = !1, FWDUVPUtils.isIphone && (s.videoScreen_do && s.videoScreen_do.setY(0), s.ytb_do && s.ytb_do.setY(0)), clearTimeout(p.hideCompleteId_to), clearTimeout(p.showCompleteId_to), p.showDisable(), p.hideCompleteId_to = setTimeout(p.hideCompleteHandler, 800), FWDAnimation.killTweensOf(p.mainHolder_do), FWDAnimation.to(p.mainHolder_do, .8, {
                y: -p.stageHeight,
                ease: Expo.easeInOut
            }), window.addEventListener ? window.removeEventListener("scroll", p.onScrollHandler) : window.detachEvent && window.detachEvent("onscroll", p.onScrollHandler), p.resizeAndPosition())
        }, this.hideCompleteHandler = function() {
            FWDUVPUtils.isChrome && p.isMobile_bl ? p.setVisible(!1) : FWDUVPUtils.isIEAndLessThen9 ? document.getElementsByTagName("body")[0].removeChild(p.screen) : document.documentElement.removeChild(p.screen), p.isOnDOM_bl = !1, p.dispatchEvent(e.HIDE_COMPLETE)
        }, this.updateHEXColors = function(e, t) {
            -1 != o.skinPath_str.indexOf("hex_white") ? p.selectedColor_str = "#FFFFFF" : p.selectedColor_str = t, p.closeButton_do.updateHEXColors(e, p.selectedColor_str), p.nextButton_do.updateHEXColors(e, p.selectedColor_str), p.prevButton_do.updateHEXColors(e, p.selectedColor_str)
        }, this.init()
    };
    e.setPrototype = function() {
        e.prototype = new FWDUVPDisplayObject("div")
    }, e.HIDE_COMPLETE = "hideComplete", e.prototype = null, window.FWDUVPCategories = e
}(), function(e) {
    var r = function(t, e, o, s, i, n, l) {
        var a = this;
        r.prototype;
        this.backgroundImagePath_str = o, this.catThumbTextBkPath_str = s, this.canvas_el = null, this.htmlContent = n, this.htmlText_str = l, this.simpleText_do = null, this.effectImage_do = null, this.imageHolder_do = null, this.normalImage_do = null, this.effectImage_do = null, this.dumy_do = null, this.thumbnailSelectedType_str = i, this.id = e, this.imageOriginalW, this.imageOriginalH, this.finalX, this.finalY, this.finalW, this.finalH, this.imageFinalX, this.imageFinalY, this.imageFinalW, this.imageFinalH, this.dispatchShowWithDelayId_to, this.isShowed_bl = !1, this.hasImage_bl = !1, this.isSelected_bl = !1, this.isDisabled_bl = !1, this.hasCanvas_bl = FWDUVPlayer.hasCanvas, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.init = function() {
            a.getStyle().background = "url('" + a.backgroundImagePath_str + "')", a.setupMainContainers(), a.setupDescription(), a.setupDumy()
        }, this.setupMainContainers = function() {
            a.imageHolder_do = new FWDUVPDisplayObject("div"), a.addChild(a.imageHolder_do)
        }, this.setupDumy = function() {
            a.dumy_do = new FWDUVPDisplayObject("div"), FWDUVPUtils.isIE && (a.dumy_do.setBkColor("#FFFFFF"), a.dumy_do.setAlpha(0)), a.addChild(a.dumy_do)
        }, this.setupDescription = function() {
            a.simpleText_do = new FWDUVPDisplayObject("div"), a.simpleText_do.getStyle().background = "url('" + a.catThumbTextBkPath_str + "')", FWDUVPUtils.isFirefox && (a.simpleText_do.hasTransform3d_bl = !1, a.simpleText_do.hasTransform2d_bl = !1), a.simpleText_do.setBackfaceVisibility(), a.simpleText_do.getStyle().width = "100%", a.simpleText_do.getStyle().fontFamily = "Arial", a.simpleText_do.getStyle().fontSize = "12px", a.simpleText_do.getStyle().textAlign = "left", a.simpleText_do.getStyle().color = "#FFFFFF", a.simpleText_do.getStyle().fontSmoothing = "antialiased", a.simpleText_do.getStyle().webkitFontSmoothing = "antialiased", a.simpleText_do.getStyle().textRendering = "optimizeLegibility", a.simpleText_do.setInnerHTML(a.htmlContent), a.addChild(a.simpleText_do)
        }, this.positionDescription = function() {
            a.simpleText_do.setY(parseInt(a.finalH - a.simpleText_do.getHeight()))
        }, this.setupBlackAndWhiteImage = function(e) {
            if (a.hasCanvas_bl && "opacity" != a.thumbnailSelectedType_str) {
                var t = document.createElement("canvas"),
                    o = t.getContext("2d");
                t.width = a.imageOriginalW, t.height = a.imageOriginalH, o.drawImage(e, 0, 0);
                var s = o.getImageData(0, 0, t.width, t.height),
                    i = s.data;
                if ("threshold" == a.thumbnailSelectedType_str)
                    for (var n = 0; n < i.length; n += 4) {
                        var l = 150 <= .2126 * i[n] + .7152 * i[n + 1] + .0722 * i[n + 2] ? 255 : 0;
                        i[n] = i[n + 1] = i[n + 2] = l
                    } else if ("blackAndWhite" == a.thumbnailSelectedType_str)
                        for (n = 0; n < i.length; n += 4) {
                            l = .2126 * i[n] + .7152 * i[n + 1] + .0722 * i[n + 2];
                            i[n] = i[n + 1] = i[n + 2] = l
                        }
                    o.putImageData(s, 0, 0, 0, 0, s.width, s.height), a.effectImage_do = new FWDUVPDisplayObject("canvas"), a.effectImage_do.screen = t, a.effectImage_do.setAlpha(.9), a.effectImage_do.setMainProperties()
            }
        }, this.setImage = function(e) {
            a.normalImage_do = new FWDUVPDisplayObject("img"), a.normalImage_do.setScreen(e), a.imageOriginalW = a.normalImage_do.w, a.imageOriginalH = a.normalImage_do.h, a.setButtonMode(!0), a.setupBlackAndWhiteImage(e), a.resizeImage(), a.imageHolder_do.setX(parseInt(a.finalW / 2)), a.imageHolder_do.setY(parseInt(a.finalH / 2)), a.imageHolder_do.setWidth(0), a.imageHolder_do.setHeight(0), a.normalImage_do.setX(-parseInt(a.normalImage_do.w / 2)), a.normalImage_do.setY(-parseInt(a.normalImage_do.h / 2)), a.normalImage_do.setAlpha(0), a.effectImage_do && (a.effectImage_do.setX(-parseInt(a.normalImage_do.w / 2)), a.effectImage_do.setY(-parseInt(a.normalImage_do.h / 2)), a.effectImage_do.setAlpha(.01)), FWDAnimation.to(a.imageHolder_do, .8, {
                x: 0,
                y: 0,
                w: a.finalW,
                h: a.finalH,
                ease: Expo.easeInOut
            }), FWDAnimation.to(a.normalImage_do, .8, {
                alpha: 1,
                x: a.imageFinalX,
                y: a.imageFinalY,
                ease: Expo.easeInOut
            }), a.effectImage_do && FWDAnimation.to(a.effectImage_do, .8, {
                x: a.imageFinalX,
                y: a.imageFinalY,
                ease: Expo.easeInOut
            }), a.hasPointerEvent_bl ? (a.screen.addEventListener("pointerup", a.onMouseUp), a.screen.addEventListener("pointerover", a.onMouseOver), a.screen.addEventListener("pointerout", a.onMouseOut)) : a.screen.addEventListener && (a.isMobile_bl || (a.screen.addEventListener("mouseover", a.onMouseOver), a.screen.addEventListener("mouseout", a.onMouseOut), a.screen.addEventListener("mouseup", a.onMouseUp)), a.screen.addEventListener("touchend", a.onMouseUp)), this.imageHolder_do.addChild(a.normalImage_do), a.effectImage_do && a.imageHolder_do.addChild(a.effectImage_do), this.hasImage_bl = !0, a.id == t.id && a.disable()
        }, a.onMouseOver = function(e, t) {
            a.isDisabled_bl || e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE || a.setSelectedState(!0)
        }, a.onMouseOut = function(e) {
            a.isDisabled_bl || e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE || a.setNormalState(!0)
        }, a.onMouseUp = function(e) {
            a.isDisabled_bl || 2 == e.button || (e.preventDefault && e.preventDefault(), a.dispatchEvent(r.MOUSE_UP, {
                id: a.id
            }))
        }, this.resizeAndPosition = function(e, t) {
            FWDAnimation.killTweensOf(a), FWDAnimation.killTweensOf(a.imageHolder_do), e ? FWDAnimation.to(a, .8, {
                x: a.finalX,
                y: a.finalY,
                delay: t,
                ease: Expo.easeInOut
            }) : (a.setX(a.finalX), a.setY(a.finalY)), a.setWidth(a.finalW), a.setHeight(a.finalH), a.imageHolder_do.setX(0), a.imageHolder_do.setY(0), a.imageHolder_do.setWidth(a.finalW), a.imageHolder_do.setHeight(a.finalH), a.dumy_do.setWidth(a.finalW), a.dumy_do.setHeight(a.finalH), a.resizeImage(), a.positionDescription()
        }, this.resizeImage = function(e) {
            if (a.normalImage_do) {
                FWDAnimation.killTweensOf(a.normalImage_do);
                var t, o = a.finalW / a.imageOriginalW,
                    s = a.finalH / a.imageOriginalH;
                t = s <= o ? o : s, a.imageFinalW = Math.ceil(t * a.imageOriginalW), a.imageFinalH = Math.ceil(t * a.imageOriginalH), a.imageFinalX = Math.round((a.finalW - a.imageFinalW) / 2), a.imageFinalY = Math.round((a.finalH - a.imageFinalH) / 2), a.effectImage_do && (FWDAnimation.killTweensOf(a.effectImage_do), a.effectImage_do.setX(a.imageFinalX), a.effectImage_do.setY(a.imageFinalY), a.effectImage_do.setWidth(a.imageFinalW), a.effectImage_do.setHeight(a.imageFinalH), a.isDisabled_bl && a.setSelectedState(!1, !0)), a.normalImage_do.setX(a.imageFinalX), a.normalImage_do.setY(a.imageFinalY), a.normalImage_do.setWidth(a.imageFinalW), a.normalImage_do.setHeight(a.imageFinalH), a.isDisabled_bl ? a.normalImage_do.setAlpha(.3) : a.normalImage_do.setAlpha(1)
            }
        }, this.setNormalState = function(e) {
            a.isSelected_bl && (a.isSelected_bl = !1, "threshold" == a.thumbnailSelectedType_str || "blackAndWhite" == a.thumbnailSelectedType_str ? e ? FWDAnimation.to(a.effectImage_do, 1, {
                alpha: .01,
                ease: Quart.easeOut
            }) : a.effectImage_do.setAlpha(.01) : "opacity" == a.thumbnailSelectedType_str && (e ? FWDAnimation.to(a.normalImage_do, 1, {
                alpha: 1,
                ease: Quart.easeOut
            }) : a.normalImage_do.setAlpha(1)))
        }, this.setSelectedState = function(e, t) {
            a.isSelected_bl && !t || (a.isSelected_bl = !0, "threshold" == a.thumbnailSelectedType_str || "blackAndWhite" == a.thumbnailSelectedType_str ? e ? FWDAnimation.to(a.effectImage_do, 1, {
                alpha: 1,
                ease: Expo.easeOut
            }) : a.effectImage_do.setAlpha(1) : "opacity" == a.thumbnailSelectedType_str && (e ? FWDAnimation.to(a.normalImage_do, 1, {
                alpha: .3,
                ease: Expo.easeOut
            }) : a.normalImage_do.setAlpha(.3)))
        }, this.show = function() {
            FWDAnimation.to(a, .8, {
                scale: 1,
                ease: Expo.easeInOut
            })
        }, this.hide = function() {
            FWDAnimation.to(a, .8, {
                scale: 0,
                ease: Expo.easeInOut
            })
        }, this.enable = function() {
            a.hasImage_bl && (a.isDisabled_bl = !1, a.setButtonMode(!0), a.setNormalState(!0))
        }, this.disable = function() {
            a.hasImage_bl && (a.isDisabled_bl = !0, a.setButtonMode(!1), a.setSelectedState(!0))
        }, this.init()
    };
    r.setPrototype = function() {
        r.prototype = new FWDUVPTransformDisplayObject("div")
    }, r.MOUSE_UP = "onMouseUp", r.prototype = null, e.FWDUVPCategoriesThumb = r
}(window), function(s) {
    var t = function(i, n) {
        var l = this;
        t.prototype;
        this.categories_ar = n.categories_ar, this.buttons_ar = [], this.mainHolder_do = null, this.selector_do = null, this.mainButtonsHolder_do = null, this.buttonsHolder_do = null, this.arrowW = n.arrowW, this.arrowH = n.arrowH, l.useHEXColorsForSkin_bl = i.data.useHEXColorsForSkin_bl, l.normalButtonsColor_str = i.data.normalButtonsColor_str, l.selectedButtonsColor_str = i.data.selectedButtonsColor_str, this.arrowN_str = n.arrowN_str, this.arrowS_str = n.arrowS_str, this.selectorLabel_str = n.selectorLabel, this.selectorBkColorN_str = n.selectorBackgroundNormalColor, this.selectorBkColorS_str = n.selectorBackgroundSelectedColor, this.selectorTextColorN_str = n.selectorTextNormalColor, this.selectorTextColorS_str = n.selectorTextSelectedColor, this.itemBkColorN_str = n.buttonBackgroundNormalColor, this.itemBkColorS_str = n.buttonBackgroundSelectedColor, this.itemTextColorN_str = n.buttonTextNormalColor, this.itemTextColorS_str = n.buttonTextSelectedColor, this.scrollBarHandlerFinalY = 0, this.finalX, this.finalY, this.totalButtons = l.categories_ar.length, this.curId = n.startAtPlaylist, this.buttonsHolderWidth = 0, this.buttonsHolderHeight = 0, this.totalWidth = i.stageWidth, this.buttonHeight = n.buttonHeight, this.totalButtonsHeight = 0, this.sapaceBetweenButtons = 1, this.thumbnailsFinalY = 0, this.vy = 0, this.vy2 = 0, this.friction = .9, this.hideMenuTimeOutId_to, this.getMaxWidthResizeAndPositionId_to, this.isShowed_bl = !1, this.addMouseWheelSupport_bl = i.data.addMouseWheelSupport_bl, this.scollbarSpeedSensitivity = i.data.scollbarSpeedSensitivity, this.isOpened_bl = !1, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.isMobile_bl = FWDUVPUtils.isMobile, this.init = function() {
            l.setOverflow("visible"), l.setupMainContainers(), l.setupScrollLogic(), l.getMaxWidthResizeAndPosition(), l.mainButtonsHolder_do.setVisible(!1), l.bk_do.setVisible(!1)
        }, this.setupMainContainers = function() {
            var e;
            if (l.mainHolder_do = new FWDUVPDisplayObject("div"), l.mainHolder_do.setOverflow("visible"), l.addChild(l.mainHolder_do), l.bk_do = new FWDUVPDisplayObject("div"), l.bk_do.setY(l.buttonHeight), l.bk_do.setBkColor(i.playlistBackgroundColor_str), l.bk_do.setAlpha(0), l.mainHolder_do.addChild(l.bk_do), l.mainButtonsHolder_do = new FWDUVPDisplayObject("div"), l.mainButtonsHolder_do.setY(l.buttonHeight), l.mainHolder_do.addChild(l.mainButtonsHolder_do), i.repeatBackground_bl) l.dummyBk_do = new FWDUVPDisplayObject("div"), l.dummyBk_do.getStyle().background = "url('" + i.bkPath_str + "')";
            else {
                l.dummyBk_do = new FWDUVPDisplayObject("img");
                var t = new Image;
                t.src = i.bkPath_str, l.dummyBk_do.setScreen(t)
            }
            l.dummyBk_do.setHeight(l.buttonHeight), l.mainHolder_do.addChild(l.dummyBk_do), l.buttonsHolder_do = new FWDUVPDisplayObject("div"), l.mainButtonsHolder_do.addChild(l.buttonsHolder_do);
            var o = l.selectorLabel_str;
            "default" == l.selectorLabel_str && (o = l.categories_ar[l.curId]), FWDUVPComboBoxSelector.setPrototype(), l.selector_do = new FWDUVPComboBoxSelector(11, 6, n.arrowN_str, n.arrowS_str, o, l.selectorBkColorN_str, l.selectorBkColorS_str, l.selectorTextColorN_str, l.selectorTextColorS_str, l.buttonHeight, l.useHEXColorsForSkin_bl, l.normalButtonsColor_str, l.selectedButtonsColor_str), l.mainHolder_do.addChild(l.selector_do), l.selector_do.setNormalState(!1), l.selector_do.addListener(FWDUVPComboBoxSelector.CLICK, l.openMenuHandler);
            for (var s = 0; s < l.totalButtons; s++) FWDUVPComboBoxButton.setPrototype(), e = new FWDUVPComboBoxButton(l, l.categories_ar[s], l.itemBkColorN_str, l.itemBkColorS_str, l.itemTextColorN_str, l.itemTextColorS_str, s, l.buttonHeight), (l.buttons_ar[s] = e).addListener(FWDUVPComboBoxButton.CLICK, l.buttonOnMouseDownHandler), l.buttonsHolder_do.addChild(e)
        }, this.buttonOnMouseDownHandler = function(e) {
            l.curId = e.target.id, clearTimeout(l.hideMenuTimeOutId_to), l.hide(!0), l.selector_do.enable(), l.hasPointerEvent_bl ? s.removeEventListener("pointerdown", l.checkOpenedMenu) : (s.removeEventListener("touchstart", l.checkOpenedMenu), l.isMobile_bl || (s.removeEventListener("mousedown", l.checkOpenedMenu), s.removeEventListener("mousemove", l.checkOpenedMenu))), l.selector_do.setText(l.buttons_ar[l.curId].label1_str), l.dispatchEvent(t.BUTTON_PRESSED, {
                id: l.curId
            })
        }, this.openMenuHandler = function(e) {
            FWDAnimation.isTweening(l.mainButtonsHolder_do) || (l.isShowed_bl ? l.checkOpenedMenu(e.e, !0) : (l.selector_do.disable(), l.show(!0), l.startToCheckOpenedMenu(), l.dispatchEvent(t.OPEN)))
        }, this.setButtonsStateBasedOnId = function(e) {
            l.curId = e;
            for (var t = 0; t < l.totalButtons; t++) button_do = l.buttons_ar[t], t == l.curId ? button_do.disable() : button_do.enable();
            l.selector_do.setText(l.buttons_ar[l.curId].label1_str), l.scrHandler_do ? (l.updateScrollBarSizeActiveAndDeactivate(), l.updateScrollBarHandlerAndContent(!1, !0)) : l.thumbnailsFinalY = 0
        }, this.setValue = function(e) {
            l.curId = e, l.setButtonsStateBasedOnId()
        }, this.startToCheckOpenedMenu = function(e) {
            l.hasPointerEvent_bl ? s.addEventListener("pointerdown", l.checkOpenedMenu) : (s.addEventListener("touchstart", l.checkOpenedMenu), l.isMobile_bl || s.addEventListener("mousedown", l.checkOpenedMenu))
        }, this.checkOpenedMenu = function(e, t) {
            e.preventDefault && e.preventDefault();
            var o = FWDUVPUtils.getViewportMouseCoordinates(e);
            e.type, !FWDUVPUtils.hitTest(l.screen, o.screenX, o.screenY) && !FWDUVPUtils.hitTest(l.mainButtonsHolder_do.screen, o.screenX, o.screenY) || t ? (l.hide(!0), l.selector_do.enable(), l.hasPointerEvent_bl ? s.removeEventListener("pointerdown", l.checkOpenedMenu) : (l.isMobile_bl || (s.removeEventListener("touchstart", l.checkOpenedMenu), s.removeEventListener("mousemove", l.checkOpenedMenu)), s.removeEventListener("mousedown", l.checkOpenedMenu))) : clearTimeout(l.hideMenuTimeOutId_to)
        }, l.getMaxWidthResizeAndPosition = function() {
            for (var e, t = l.totalButtonsHeight = 0; t < l.totalButtons; t++)(e = l.buttons_ar[t]).setY(1 + t * (e.totalHeight + l.sapaceBetweenButtons)), l.allowToScrollAndScrollBarIsActive_bl && !l.isMobile_bl ? l.totalWidth = i.stageWidth - 6 : l.totalWidth = i.stageWidth, e.totalWidth = l.totalWidth, e.setWidth(l.totalWidth), e.centerText();
            l.totalButtonsHeight = e.getY() + e.totalHeight - l.sapaceBetweenButtons, l.dummyBk_do.setWidth(l.totalWidth + 6), l.setWidth(l.totalWidth), l.setHeight(l.buttonHeight), l.selector_do.totalWidth = l.totalWidth + 6, l.selector_do.setWidth(l.totalWidth + 6), l.selector_do.centerText(), l.buttonsHolder_do.setWidth(l.totalWidth), l.buttonsHolder_do.setHeight(l.totalButtonsHeight)
        }, this.position = function() {
            FWDUVPUtils.isAndroid ? (l.setX(Math.floor(l.finalX)), l.setY(Math.floor(l.finalY - 1)), setTimeout(l.poscombo - box, 100)) : (l.poscombo, box())
        }, this.resizeAndPosition = function() {
            l.stageWidth = i.stageWidth, l.stageHeight = i.stageHeight, l.bk_do.setWidth(l.stageWidth), l.bk_do.setHeight(l.stageHeight - i.removeFromThumbsHolderHeight + 3), l.mainButtonsHolder_do.setWidth(l.stageWidth), l.mainButtonsHolder_do.setHeight(l.stageHeight - i.removeFromThumbsHolderHeight + 3), l.totalButtonsHeight > l.mainButtonsHolder_do.h ? l.allowToScrollAndScrollBarIsActive_bl = !0 : l.allowToScrollAndScrollBarIsActive_bl = !1, !l.allowToScrollAndScrollBarIsActive_bl && l.scrMainHolder_do ? l.scrMainHolder_do.setVisible(!1) : l.allowToScrollAndScrollBarIsActive_bl && l.scrMainHolder_do && l.isShowed_bl && l.scrMainHolder_do.setVisible(!0), l.scrHandler_do && l.updateScrollBarSizeActiveAndDeactivate(), this.getMaxWidthResizeAndPosition(), l.updateScrollBarHandlerAndContent()
        }, this.hide = function(e, t) {
            (l.isShowed_bl || t) && (FWDAnimation.killTweensOf(this), l.isShowed_bl = !1, FWDAnimation.killTweensOf(l.mainButtonsHolder_do), FWDAnimation.killTweensOf(l.bk_do), e ? (FWDAnimation.to(l.mainButtonsHolder_do, .8, {
                y: -l.totalButtonsHeight,
                ease: Expo.easeInOut,
                onComplete: l.hideComplete
            }), FWDAnimation.to(l.bk_do, .8, {
                alpha: 0
            })) : (l.mainButtonsHolder_do.setY(l.buttonHeight - l.totalButtonsHeight), l.bk_do.setAlpha(0), l.setHeight(l.buttonHeight)))
        }, this.hideComplete = function() {
            l.mainButtonsHolder_do.setVisible(!1), l.bk_do.setVisible(!1)
        }, this.show = function(e, t) {
            l.isShowed_bl && !t || (FWDAnimation.killTweensOf(this), l.mainButtonsHolder_do.setY(-l.totalButtonsHeight), l.isShowed_bl = !0, l.mainButtonsHolder_do.setVisible(!0), l.bk_do.setVisible(!0), l.resizeAndPosition(), FWDAnimation.killTweensOf(l.mainButtonsHolder_do), FWDAnimation.killTweensOf(l.bk_do), l.scrMainHolder_do && l.allowToScrollAndScrollBarIsActive_bl && l.scrMainHolder_do.setVisible(!0), e ? (FWDAnimation.to(l.bk_do, .8, {
                alpha: 1
            }), FWDAnimation.to(l.mainButtonsHolder_do, .8, {
                y: l.buttonHeight,
                ease: Expo.easeInOut
            })) : (l.bk_do.setAlpha(1), l.mainButtonsHolder_do.setY(l.buttonHeight)))
        }, this.setupScrollLogic = function() {
            l.setupMobileScrollbar(), l.isMobile_bl || l.setupScrollbar(), l.addMouseWheelSupport_bl && l.addMouseWheelSupport()
        }, this.setupMobileScrollbar = function() {
            l.hasPointerEvent_bl ? l.mainButtonsHolder_do.screen.addEventListener("pointerdown", l.scrollBarTouchStartHandler) : l.mainButtonsHolder_do.screen.addEventListener("touchstart", l.scrollBarTouchStartHandler), l.isMobile_bl && (l.updateMobileScrollBarId_int = setInterval(l.updateMobileScrollBar, 16))
        }, this.scrollBarTouchStartHandler = function(e) {
            e.preventDefault && e.preventDefault(), l.isScrollingOnMove_bl = !1, FWDAnimation.killTweensOf(l.buttonsHolder_do);
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            l.isDragging_bl = !0, l.lastPresedY = t.screenY, l.checkLastPresedY = t.screenY, l.hasPointerEvent_bl ? (s.addEventListener("pointerup", l.scrollBarTouchEndHandler), s.addEventListener("pointermove", l.scrollBarTouchMoveHandler)) : (s.addEventListener("touchend", l.scrollBarTouchEndHandler), s.addEventListener("touchmove", l.scrollBarTouchMoveHandler)), s.addEventListener("mouseup", l.scrollBarTouchEndHandler), s.addEventListener("mousemove", l.scrollBarTouchMoveHandler), clearInterval(l.updateMoveMobileScrollbarId_int), l.updateMoveMobileScrollbarId_int = setInterval(l.updateMoveMobileScrollbar, 20)
        }, this.scrollBarTouchMoveHandler = function(e) {
            if (e.preventDefault && e.preventDefault(), e.stopImmediatePropagation(), !(l.totalButtonsHeight < l.mainButtonsHolder_do.h)) {
                i.parent.showDisable();
                var t = FWDUVPUtils.getViewportMouseCoordinates(e);
                (t.screenY >= l.checkLastPresedY + 6 || t.screenY <= l.checkLastPresedY - 6) && (l.isScrollingOnMove_bl = !0);
                var o = t.screenY - l.lastPresedY;
                if (l.thumbnailsFinalY += o, l.thumbnailsFinalY = Math.round(l.thumbnailsFinalY), l.lastPresedY = t.screenY, l.vy = 2 * o, !l.isMobile) {
                    0 < l.thumbnailsFinalY ? l.thumbnailsFinalY = 0 : l.thumbnailsFinalY < l.mainButtonsHolder_do.h - l.totalButtonsHeight && (l.thumbnailsFinalY = l.mainButtonsHolder_do.h - l.totalButtonsHeight);
                    var s = Math.max(0, l.thumbnailsFinalY / (l.mainButtonsHolder_do.h - l.totalButtonsHeight));
                    l.scrMainHolder_do && (l.scrollBarHandlerFinalY = Math.round((l.scrMainHolder_do.h - l.scrHandler_do.h) * s), l.scrollBarHandlerFinalY < 0 ? l.scrollBarHandlerFinalY = 0 : l.scrollBarHandlerFinalY > l.scrMainHolder_do.h - l.scrHandler_do.h - 1 && (l.scrollBarHandlerFinalY = l.scrMainHolder_do.h - l.scrHandler_do.h - 1), FWDAnimation.killTweensOf(l.scrHandler_do), FWDAnimation.killTweensOf(l.scrHandlerLines_do), l.scrHandler_do.setY(l.scrollBarHandlerFinalY), l.scrHandlerLines_do.setY(l.scrollBarHandlerFinalY + parseInt((l.scrHandler_do.h - l.scrHandlerLinesN_do.h) / 2)))
                }
            }
        }, this.scrollBarTouchEndHandler = function(e) {
            l.isDragging_bl = !1, clearInterval(l.updateMoveMobileScrollbarId_int), clearTimeout(l.disableOnMoveId_to), l.disableOnMoveId_to = setTimeout(function() {
                i.parent.hideDisable()
            }, 100), l.hasPointerEvent_bl ? (s.removeEventListener("pointerup", l.scrollBarTouchEndHandler), s.removeEventListener("pointermove", l.scrollBarTouchMoveHandler)) : (s.removeEventListener("touchend", l.scrollBarTouchEndHandler), s.removeEventListener("touchmove", l.scrollBarTouchMoveHandler)), s.removeEventListener("mousemove", l.scrollBarTouchMoveHandler)
        }, this.updateMoveMobileScrollbar = function() {
            l.buttonsHolder_do.setY(l.thumbnailsFinalY)
        }, this.updateMobileScrollBar = function(e) {
            l.isDragging_bl || (l.totalButtonsHeight < l.mainButtonsHolder_do.h && (l.thumbnailsFinalY = .01), l.vy *= l.friction, l.thumbnailsFinalY += l.vy, 0 < l.thumbnailsFinalY ? (l.vy2 = .3 * (0 - l.thumbnailsFinalY), l.vy *= l.friction, l.thumbnailsFinalY += l.vy2) : l.thumbnailsFinalY < l.mainButtonsHolder_do.h - l.totalButtonsHeight && (l.vy2 = .3 * (l.mainButtonsHolder_do.h - l.totalButtonsHeight - l.thumbnailsFinalY), l.vy *= l.friction, l.thumbnailsFinalY += l.vy2), l.buttonsHolder_do.setY(Math.round(l.thumbnailsFinalY)))
        }, this.setupScrollbar = function() {
            l.scrMainHolder_do = new FWDUVPDisplayObject("div"), l.scrMainHolder_do.setVisible(!1), l.scrMainHolder_do.setWidth(i.scrWidth), l.scrTrack_do = new FWDUVPDisplayObject("div"), l.scrTrack_do.setWidth(i.scrWidth);
            var e = new Image;
            e.src = i.scrBkTop_img.src, l.scrTrackTop_do = new FWDUVPDisplayObject("img"), l.scrTrackTop_do.setWidth(i.scrTrackTop_do.w), l.scrTrackTop_do.setHeight(i.scrTrackTop_do.h), l.scrTrackTop_do.setScreen(e), l.scrTrackMiddle_do = new FWDUVPDisplayObject("div"), l.scrTrackMiddle_do.getStyle().background = "url('" + i.data.scrBkMiddlePath_str + "')", l.scrTrackMiddle_do.setWidth(i.scrWidth), l.scrTrackMiddle_do.setY(l.scrTrackTop_do.h);
            var t = new Image;
            t.src = i.data.scrBkBottomPath_str, l.scrTrackBottom_do = new FWDUVPDisplayObject("img"), l.scrTrackBottom_do.setScreen(t), l.scrTrackBottom_do.setWidth(l.scrTrackTop_do.w), l.scrTrackBottom_do.setHeight(l.scrTrackTop_do.h), l.scrHandler_do = new FWDUVPDisplayObject("div"), l.scrHandler_do.setWidth(i.scrWidth), l.scrDragTop_img = new Image, l.scrDragTop_img.src = i.scrDragTop_img.src, l.scrDragTop_img.width = i.scrDragTop_img.width, l.scrDragTop_img.height = i.scrDragTop_img.height, l.scrHandlerTop_do = new FWDUVPDisplayObject("img"), l.useHEXColorsForSkin_bl ? (l.scrHandlerTop_do = new FWDUVPDisplayObject("div"), l.scrHandlerTop_do.setWidth(l.scrDragTop_img.width), l.scrHandlerTop_do.setHeight(l.scrDragTop_img.height), l.mainScrubberDragTop_canvas = FWDUVPUtils.getCanvasWithModifiedColor(l.scrDragTop_img, l.normalButtonsColor_str).canvas, l.scrHandlerTop_do.screen.appendChild(l.mainScrubberDragTop_canvas)) : (l.scrHandlerTop_do = new FWDUVPDisplayObject("img"), l.scrHandlerTop_do.setScreen(l.scrDragTop_img)), l.scrHandlerMiddle_do = new FWDUVPDisplayObject("div"), l.middleImage = new Image, l.middleImage.src = i.data.scrDragMiddlePath_str, l.useHEXColorsForSkin_bl ? l.middleImage.onload = function() {
                l.scrubberDragMiddle_canvas = FWDUVPUtils.getCanvasWithModifiedColor(l.middleImage, l.normalButtonsColor_str, !0), l.scrubberDragImage_img = l.scrubberDragMiddle_canvas.image, l.scrHandlerMiddle_do.getStyle().background = "url('" + l.scrubberDragImage_img.src + "') repeat-y"
            } : l.scrHandlerMiddle_do.getStyle().background = "url('" + i.data.scrDragMiddlePath_str + "')", l.scrHandlerMiddle_do.setWidth(i.scrWidth), l.scrHandlerMiddle_do.setY(l.scrHandlerTop_do.h), l.scrHandlerBottom_do = new FWDUVPDisplayObject("div"), l.bottomImage = new Image, l.bottomImage.src = i.data.scrDragMiddlePath_str, l.useHEXColorsForSkin_bl ? l.bottomImage.onload = function() {
                l.scrubberDragBottom_canvas = FWDUVPUtils.getCanvasWithModifiedColor(l.bottomImage, l.normalButtonsColor_str, !0), l.scrubberDragBottomImage_img = l.scrubberDragBottom_canvas.image, l.scrHandlerBottom_do.getStyle().background = "url('" + l.scrubberDragBottomImage_img.src + "') repeat-y"
            } : l.scrHandlerBottom_do.getStyle().background = "url('" + i.data.scrDragBottomPath_str + "')", l.scrHandlerBottom_do.setWidth(i.scrWidth), l.scrHandlerBottom_do.setY(l.scrHandlerTop_do.h), l.scrHandlerBottom_do.setWidth(l.scrHandlerTop_do.w), l.scrHandlerBottom_do.setHeight(l.scrHandlerTop_do.h), l.scrHandler_do.setButtonMode(!0), l.scrLinesN_img = new Image, l.scrLinesN_img.src = i.scrLinesN_img.src, l.scrLinesN_img.width = i.scrLinesN_img.width, l.scrLinesN_img.height = i.scrLinesN_img.height, l.useHEXColorsForSkin_bl ? (l.scrHandlerLinesN_do = new FWDUVPDisplayObject("div"), l.scrHandlerLinesN_do.setWidth(l.scrLinesN_img.width), l.scrHandlerLinesN_do.setHeight(l.scrLinesN_img.height), l.mainhandlerN_canvas = FWDUVPUtils.getCanvasWithModifiedColor(l.scrLinesN_img, l.selectedButtonsColor_str).canvas, l.scrHandlerLinesN_do.screen.appendChild(l.mainhandlerN_canvas)) : (l.scrHandlerLinesN_do = new FWDUVPDisplayObject("img"), l.scrHandlerLinesN_do.setScreen(l.scrLinesN_img)), l.scrHandlerLinesS_img = new Image, l.scrHandlerLinesS_img.src = i.data.scrLinesSPath_str, l.useHEXColorsForSkin_bl ? (l.scrHandlerLinesS_do = new FWDUVPDisplayObject("div"), l.scrHandlerLinesS_img.onload = function() {
                l.scrHandlerLinesS_do.setWidth(l.scrHandlerLinesN_do.w), l.scrHandlerLinesS_do.setHeight(l.scrHandlerLinesN_do.h), l.scrubberLines_s_canvas = FWDUVPUtils.getCanvasWithModifiedColor(l.scrHandlerLinesS_img, l.selectedButtonsColor_str, !0), l.scrubbelinesSImage_img = l.scrubberLines_s_canvas.image, l.scrHandlerLinesS_do.getStyle().background = "url('" + l.scrubbelinesSImage_img.src + "') repeat-y"
            }) : (l.scrHandlerLinesS_do = new FWDUVPDisplayObject("img"), l.scrHandlerLinesS_do.setScreen(l.scrHandlerLinesS_img), l.scrHandlerLinesS_do.setWidth(l.scrHandlerLinesN_do.w), l.scrHandlerLinesS_do.setHeight(l.scrHandlerLinesN_do.h)), l.scrHandlerLinesS_do.setAlpha(0), l.scrHandlerLines_do = new FWDUVPDisplayObject("div"), l.scrHandlerLines_do.setWidth(l.scrHandlerLinesN_do.w), l.scrHandlerLines_do.setHeight(l.scrHandlerLinesN_do.h), l.scrHandlerLines_do.setButtonMode(!0), l.scrTrack_do.addChild(l.scrTrackTop_do), l.scrTrack_do.addChild(l.scrTrackMiddle_do), l.scrTrack_do.addChild(l.scrTrackBottom_do), l.scrHandler_do.addChild(l.scrHandlerTop_do), l.scrHandler_do.addChild(l.scrHandlerMiddle_do), l.scrHandler_do.addChild(l.scrHandlerBottom_do), l.scrHandlerLines_do.addChild(l.scrHandlerLinesN_do), l.scrHandlerLines_do.addChild(l.scrHandlerLinesS_do), l.scrMainHolder_do.addChild(l.scrTrack_do), l.scrMainHolder_do.addChild(l.scrHandler_do), l.scrMainHolder_do.addChild(l.scrHandlerLines_do), l.mainButtonsHolder_do.addChild(l.scrMainHolder_do), l.scrHandler_do.screen.addEventListener ? (l.scrHandler_do.screen.addEventListener("mouseover", l.scrollBarHandlerOnMouseOver), l.scrHandler_do.screen.addEventListener("mouseout", l.scrollBarHandlerOnMouseOut), l.scrHandler_do.screen.addEventListener("mousedown", l.scrollBarHandlerOnMouseDown), l.scrHandlerLines_do.screen.addEventListener("mouseover", l.scrollBarHandlerOnMouseOver), l.scrHandlerLines_do.screen.addEventListener("mouseout", l.scrollBarHandlerOnMouseOut), l.scrHandlerLines_do.screen.addEventListener("mousedown", l.scrollBarHandlerOnMouseDown)) : l.scrHandler_do.screen.attachEvent && (l.scrHandler_do.screen.attachEvent("onmouseover", l.scrollBarHandlerOnMouseOver), l.scrHandler_do.screen.attachEvent("onmouseout", l.scrollBarHandlerOnMouseOut), l.scrHandler_do.screen.attachEvent("onmousedown", l.scrollBarHandlerOnMouseDown), l.scrHandlerLines_do.screen.attachEvent("onmouseover", l.scrollBarHandlerOnMouseOver), l.scrHandlerLines_do.screen.attachEvent("onmouseout", l.scrollBarHandlerOnMouseOut), l.scrHandlerLines_do.screen.attachEvent("onmousedown", l.scrollBarHandlerOnMouseDown))
        }, this.scrollBarHandlerOnMouseOver = function(e) {
            l.allowToScrollAndScrollBarIsActive_bl && (FWDAnimation.killTweensOf(l.scrHandlerLinesN_do), FWDAnimation.killTweensOf(l.scrHandlerLinesS_do), FWDAnimation.to(l.scrHandlerLinesN_do, .8, {
                alpha: 0,
                ease: Expo.easeOut
            }), FWDAnimation.to(l.scrHandlerLinesS_do, .8, {
                alpha: 1,
                ease: Expo.easeOut
            }))
        }, this.scrollBarHandlerOnMouseOut = function(e) {
            !l.isDragging_bl && l.allowToScrollAndScrollBarIsActive_bl && (FWDAnimation.killTweensOf(l.scrHandlerLinesN_do), FWDAnimation.killTweensOf(l.scrHandlerLinesS_do), FWDAnimation.to(l.scrHandlerLinesN_do, .8, {
                alpha: 1,
                ease: Expo.easeOut
            }), FWDAnimation.to(l.scrHandlerLinesS_do, .8, {
                alpha: 0,
                ease: Expo.easeOut
            }))
        }, this.scrollBarHandlerOnMouseDown = function(e) {
            if (l.allowToScrollAndScrollBarIsActive_bl) {
                var t = FWDUVPUtils.getViewportMouseCoordinates(e);
                l.isDragging_bl = !0, l.yPositionOnPress = l.scrHandler_do.y, l.lastPresedY = t.screenY, FWDAnimation.killTweensOf(l.scrHandler_do), i.parent.showDisable(), s.addEventListener ? (s.addEventListener("mousemove", l.scrollBarHandlerMoveHandler), s.addEventListener("mouseup", l.scrollBarHandlerEndHandler)) : document.attachEvent && (document.attachEvent("onmousemove", l.scrollBarHandlerMoveHandler), document.attachEvent("onmouseup", l.scrollBarHandlerEndHandler))
            }
        }, this.scrollBarHandlerMoveHandler = function(e) {
            e.preventDefault && e.preventDefault();
            var t = FWDUVPUtils.getViewportMouseCoordinates(e),
                o = l.scrollBarHandlerFinalY + parseInt((l.scrHandler_do.h - l.scrHandlerLines_do.h) / 2);
            l.scrollBarHandlerFinalY = Math.round(l.yPositionOnPress + t.screenY - l.lastPresedY), l.scrollBarHandlerFinalY >= l.scrTrack_do.h - l.scrHandler_do.h ? l.scrollBarHandlerFinalY = l.scrTrack_do.h - l.scrHandler_do.h : l.scrollBarHandlerFinalY <= 0 && (l.scrollBarHandlerFinalY = 0), l.scrHandler_do.setY(l.scrollBarHandlerFinalY), FWDAnimation.killTweensOf(l.scrHandler_do), FWDAnimation.to(l.scrHandlerLines_do, .8, {
                y: o,
                ease: Quart.easeOut
            }), l.updateScrollBarHandlerAndContent(!0)
        }, l.scrollBarHandlerEndHandler = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            l.isDragging_bl = !1, FWDUVPUtils.hitTest(l.scrHandler_do.screen, t.screenX, t.screenY) || (FWDAnimation.killTweensOf(l.scrHandlerLinesN_do), FWDAnimation.killTweensOf(l.scrHandlerLinesS_do), FWDAnimation.to(l.scrHandlerLinesN_do, .8, {
                alpha: 1,
                ease: Expo.easeOut
            }), FWDAnimation.to(l.scrHandlerLinesS_do, .8, {
                alpha: 0,
                ease: Expo.easeOut
            })), i.parent.hideDisable(), FWDAnimation.killTweensOf(l.scrHandler_do), FWDAnimation.to(l.scrHandler_do, .4, {
                y: l.scrollBarHandlerFinalY,
                ease: Quart.easeOut
            }), s.removeEventListener ? (s.removeEventListener("mousemove", l.scrollBarHandlerMoveHandler), s.removeEventListener("mouseup", l.scrollBarHandlerEndHandler)) : document.detachEvent && (document.detachEvent("onmousemove", l.scrollBarHandlerMoveHandler), document.detachEvent("onmouseup", l.scrollBarHandlerEndHandler))
        }, this.updateScrollBarSizeActiveAndDeactivate = function() {
            l.disableForAWhileAfterThumbClick_bl || (l.allowToScrollAndScrollBarIsActive_bl ? (l.allowToScrollAndScrollBarIsActive_bl = !0, l.scrMainHolder_do.setX(l.stageWidth - l.scrMainHolder_do.w), l.scrMainHolder_do.setHeight(l.mainButtonsHolder_do.h), l.scrTrack_do.setHeight(l.scrMainHolder_do.h), l.scrTrackMiddle_do.setHeight(l.scrTrack_do.h - 2 * l.scrTrackTop_do.h), l.scrTrackBottom_do.setY(l.scrTrackMiddle_do.y + l.scrTrackMiddle_do.h), l.scrMainHolder_do.setAlpha(1), l.scrHandler_do.setButtonMode(!0), l.scrHandlerLines_do.setButtonMode(!0)) : (l.allowToScrollAndScrollBarIsActive_bl = !1, l.scrMainHolder_do.setX(l.stageWidth - l.scrMainHolder_do.w), l.scrMainHolder_do.setHeight(l.mainButtonsHolder_do.h), l.scrTrack_do.setHeight(l.scrMainHolder_do.h), l.scrTrackMiddle_do.setHeight(l.scrTrack_do.h - 2 * l.scrTrackTop_do.h), l.scrTrackBottom_do.setY(l.scrTrackMiddle_do.y + l.scrTrackMiddle_do.h), l.scrMainHolder_do.setAlpha(.5), l.scrHandler_do.setY(0), l.scrHandler_do.setButtonMode(!1), l.scrHandlerLines_do.setButtonMode(!1)), l.scrHandler_do.setHeight(Math.max(120, Math.round(Math.min(1, l.scrMainHolder_do.h / l.totalButtonsHeight) * l.scrMainHolder_do.h))), l.scrHandlerMiddle_do.setHeight(l.scrHandler_do.h - 2 * l.scrHandlerTop_do.h), l.scrHandlerBottom_do.setY(l.scrHandlerMiddle_do.y + l.scrHandlerMiddle_do.h), FWDAnimation.killTweensOf(l.scrHandlerLines_do), l.scrHandlerLines_do.setY(l.scrollBarHandlerFinalY + parseInt((l.scrHandler_do.h - l.scrHandlerLines_do.h) / 2)), l.scrHandlerBottom_do.setY(l.scrHandler_do.h - l.scrHandlerBottom_do.h))
        }, this.addMouseWheelSupport = function() {
            l.screen.addEventListener ? (l.screen.addEventListener("DOMMouseScroll", l.mouseWheelHandler), l.screen.addEventListener("mousewheel", l.mouseWheelHandler)) : l.screen.attachEvent && l.screen.attachEvent("onmousewheel", l.mouseWheelHandler)
        }, l.mouseWheelHandler = function(e) {
            if (e.preventDefault && e.preventDefault(), l.disableMouseWheel_bl || l.isDragging_bl) return !1;
            var t = e.detail || e.wheelDelta;
            e.wheelDelta && (t *= -1), 0 < t ? l.scrollBarHandlerFinalY += Math.round(160 * l.scollbarSpeedSensitivity * (l.mainButtonsHolder_do.h / l.totalButtonsHeight)) : t < 0 && (l.scrollBarHandlerFinalY -= Math.round(160 * l.scollbarSpeedSensitivity * (l.mainButtonsHolder_do.h / l.totalButtonsHeight))), l.scrollBarHandlerFinalY >= l.scrTrack_do.h - l.scrHandler_do.h ? l.scrollBarHandlerFinalY = l.scrTrack_do.h - l.scrHandler_do.h : l.scrollBarHandlerFinalY <= 0 && (l.scrollBarHandlerFinalY = 0);
            var o = l.scrollBarHandlerFinalY + parseInt((l.scrHandler_do.h - l.scrHandlerLines_do.h) / 2);
            if (FWDAnimation.killTweensOf(l.scrHandler_do), FWDAnimation.killTweensOf(l.scrHandlerLines_do), FWDAnimation.to(l.scrHandlerLines_do, .8, {
                    y: o,
                    ease: Quart.easeOut
                }), FWDAnimation.to(l.scrHandler_do, .5, {
                    y: l.scrollBarHandlerFinalY,
                    ease: Quart.easeOut
                }), l.isDragging_bl = !0, l.updateScrollBarHandlerAndContent(!0), l.isDragging_bl = !1, !e.preventDefault) return !1;
            e.preventDefault()
        }, this.updateScrollBarHandlerAndContent = function(e, t) {
            if (!l.disableForAWhileAfterThumbClick_bl && (l.allowToScrollAndScrollBarIsActive_bl || t)) {
                var o = 0;
                l.isDragging_bl && !l.isMobile_bl ? ("Infinity" == (o = l.scrollBarHandlerFinalY / (l.scrMainHolder_do.h - l.scrHandler_do.h)) ? o = 0 : 1 <= o && (scrollPercent = 1), l.thumbnailsFinalY = -1 * Math.round(o * (l.totalButtonsHeight - l.mainButtonsHolder_do.h)), 0 == l.mainButtonsHolder_do.h && (l.thumbnailsFinalY = 0)) : (o = l.curId / (l.totalButtons - 1), l.thumbnailsFinalY = Math.min(0, -1 * Math.round(o * (l.totalButtonsHeight - l.mainButtonsHolder_do.h))), 0 == l.mainButtonsHolder_do.h && (l.thumbnailsFinalY = 0), l.scrMainHolder_do && (l.scrollBarHandlerFinalY = Math.round((l.scrMainHolder_do.h - l.scrHandler_do.h) * o), l.scrollBarHandlerFinalY < 0 ? l.scrollBarHandlerFinalY = 0 : l.scrollBarHandlerFinalY > l.scrMainHolder_do.h - l.scrHandler_do.h - 1 && (l.scrollBarHandlerFinalY = l.scrMainHolder_do.h - l.scrHandler_do.h - 1), FWDAnimation.killTweensOf(l.scrHandler_do), FWDAnimation.killTweensOf(l.scrHandlerLines_do), e ? (FWDAnimation.to(l.scrHandler_do, .4, {
                    y: l.scrollBarHandlerFinalY,
                    ease: Quart.easeOut
                }), FWDAnimation.to(l.scrHandlerLines_do, .8, {
                    y: l.scrollBarHandlerFinalY + parseInt((l.scrHandler_do.h - l.scrHandlerLinesN_do.h) / 2),
                    ease: Quart.easeOut
                })) : (l.scrHandler_do.setY(l.scrollBarHandlerFinalY), l.scrHandlerLines_do.setY(l.scrollBarHandlerFinalY + parseInt((l.scrHandler_do.h - l.scrHandlerLinesN_do.h) / 2))))), l.lastThumbnailFinalY != l.thumbnailsFinalY && (FWDAnimation.killTweensOf(l.buttonsHolder_do), e ? FWDAnimation.to(l.buttonsHolder_do, .5, {
                    y: l.thumbnailsFinalY,
                    ease: Quart.easeOut
                }) : l.buttonsHolder_do.setY(l.thumbnailsFinalY)), l.lastThumbnailFinalY = l.thumbnailsFinalY
            }
        }, this.init()
    };
    t.setPrototype = function() {
        t.prototype = new FWDUVPDisplayObject("div")
    }, t.OPEN = "open", t.HIDE_COMPLETE = "infoWindowHideComplete", t.BUTTON_PRESSED = "buttonPressed", t.prototype = null, s.FWDUVPComboBox = t
}(window), function() {
    var d = function(t, e, o, s, i, n, l, a) {
        var r = this;
        d.prototype;
        this.bk_sdo = null, this.text_sdo = null, this.dumy_sdo = null, this.label1_str = e, this.backgroundNormalColor_str = o, this.backgroundSelectedColor_str = s, this.textNormalColor_str = i, this.textSelectedColor_str = n, this.totalWidth = 400, this.totalHeight = a, this.id = l, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.isMobile_bl = FWDUVPUtils.isMobile, this.isDisabled_bl = !1, r.init = function() {
            r.setBackfaceVisibility(), r.setButtonMode(!0), r.setupMainContainers(), r.setWidth(r.totalWidth), r.setHeight(r.totalHeight), r.setNormalState()
        }, r.setupMainContainers = function() {
            r.bk_sdo = new FWDUVPDisplayObject("div"), r.bk_sdo.setBkColor(r.backgroundNormalColor_str), r.addChild(r.bk_sdo), r.text_sdo = new FWDUVPDisplayObject("div"), r.text_sdo.getStyle().whiteSpace = "nowrap", r.text_sdo.setBackfaceVisibility(), r.text_sdo.setOverflow("visible"), r.text_sdo.setDisplay("inline-block"), r.text_sdo.getStyle().fontFamily = "Arial", r.text_sdo.getStyle().fontSize = "13px", r.text_sdo.getStyle().padding = "6px", r.text_sdo.getStyle().fontWeight = "100", r.text_sdo.getStyle().color = r.normalColor_str, r.text_sdo.getStyle().fontSmoothing = "antialiased", r.text_sdo.getStyle().webkitFontSmoothing = "antialiased", r.text_sdo.getStyle().textRendering = "optimizeLegibility", FWDUVPUtils.isIEAndLessThen9 ? r.text_sdo.screen.innerText = r.label1_str : r.text_sdo.setInnerHTML(r.label1_str), r.addChild(r.text_sdo), r.dumy_sdo = new FWDUVPDisplayObject("div"), FWDUVPUtils.isIE && (r.dumy_sdo.setBkColor("#FF0000"), r.dumy_sdo.setAlpha(0)), r.addChild(r.dumy_sdo), r.hasPointerEvent_bl ? (r.screen.addEventListener("pointerup", r.onClick), r.screen.addEventListener("pointerover", r.onMouseOver), r.screen.addEventListener("pointerout", r.onMouseOut)) : r.screen.addEventListener && (r.isMobile_bl || (r.screen.addEventListener("mouseover", r.onMouseOver), r.screen.addEventListener("mouseout", r.onMouseOut), r.screen.addEventListener("mouseup", r.onClick)), r.screen.addEventListener("touchend", r.onClick))
        }, r.onMouseOver = function(e) {
            r.isDisabled_bl || e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE || (FWDAnimation.killTweensOf(r.text_sdo), r.setSelectedState(!0), r.dispatchEvent(d.MOUSE_OVER))
        }, r.onMouseOut = function(e) {
            r.isDisabled_bl || e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE || (FWDAnimation.killTweensOf(r.text_sdo), r.setNormalState(!0), r.dispatchEvent(d.MOUSE_OUT))
        }, r.onClick = function(e) {
            r.isDisabled_bl || t.isScrollingOnMove_bl || (e.preventDefault && e.preventDefault(), r.dispatchEvent(d.CLICK))
        }, r.onMouseDown = function(e) {
            r.isDisabled_bl || t.isScrollingOnMove_bl || (e.preventDefault && e.preventDefault(), r.dispatchEvent(d.MOUSE_DOWN, {
                e: e
            }))
        }, this.setSelectedState = function(e) {
            e ? (FWDAnimation.to(r.bk_sdo.screen, .6, {
                css: {
                    backgroundColor: r.backgroundSelectedColor_str
                },
                ease: Quart.easeOut
            }), FWDAnimation.to(r.text_sdo.screen, .6, {
                css: {
                    color: r.textSelectedColor_str
                },
                ease: Quart.easeOut
            })) : (r.bk_sdo.setBkColor(r.backgroundSelectedColor_str), r.text_sdo.getStyle().color = r.textSelectedColor_str)
        }, this.setNormalState = function(e) {
            e ? (FWDAnimation.to(r.bk_sdo.screen, .6, {
                css: {
                    backgroundColor: r.backgroundNormalColor_str
                },
                ease: Quart.easeOut
            }), FWDAnimation.to(r.text_sdo.screen, .6, {
                css: {
                    color: r.textNormalColor_str
                },
                ease: Quart.easeOut
            })) : (r.bk_sdo.setBkColor(r.backgroundNormalColor_str), r.text_sdo.getStyle().color = r.textNormalColor_str)
        }, r.centerText = function() {
            r.dumy_sdo.setWidth(r.totalWidth), r.dumy_sdo.setHeight(r.totalHeight), r.bk_sdo.setWidth(r.totalWidth), r.bk_sdo.setHeight(r.totalHeight), r.text_sdo.setX(4), r.text_sdo.setY(Math.round((r.totalHeight - r.text_sdo.getHeight()) / 2))
        }, r.getMaxTextWidth = function() {
            return r.text_sdo.getWidth()
        }, this.disable = function() {
            r.isDisabled_bl = !0, r.setButtonMode(!1), r.setSelectedState(!0)
        }, this.enable = function() {
            r.isDisabled_bl = !1, r.setNormalState(!0), r.setButtonMode(!0)
        }, r.init()
    };
    d.setPrototype = function() {
        d.prototype = new FWDUVPDisplayObject("div")
    }, d.FIRST_BUTTON_CLICK = "onFirstClick", d.SECOND_BUTTON_CLICK = "secondButtonOnClick", d.MOUSE_OVER = "onMouseOver", d.MOUSE_OUT = "onMouseOut", d.MOUSE_DOWN = "onMouseDown", d.CLICK = "onClick", d.prototype = null, window.FWDUVPComboBoxButton = d
}(window), function() {
    var p = function(e, t, o, s, i, n, l, a, r, d, u, h, c) {
        var _ = this,
            f = p.prototype;
        this.arrow_do = null, this.arrowN_sdo = null, this.arrowS_sdo = null, this.arrowN_str = o, this.arrowS_str = s, this.label1_str = i, this.backgroundNormalColor_str = n, this.backgroundSelectedColor_str = l, this.textNormalColor_str = a, this.textSelectedColor_str = r, _.useHEXColorsForSkin_bl = u, _.normalButtonsColor_str = h, _.selectedButtonsColor_str = c, this.totalWidth = 400, this.totalHeight = d, this.arrowWidth = e, this.arrowHeight = t, this.bk_sdo = null, this.text_sdo = null, this.dumy_sdo = null, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.isMobile_bl = FWDUVPUtils.isMobile, this.isDisabled_bl = !1, _.init = function() {
            _.setBackfaceVisibility(), _.setButtonMode(!0), _.setupMainContainers(), _.setWidth(_.totalWidth), _.setHeight(_.totalHeight)
        }, _.setupMainContainers = function() {
            _.bk_sdo = new FWDUVPDisplayObject("div"), _.bk_sdo.getStyle().backgroundColor = _.backgroundNormalColor_str, _.addChild(_.bk_sdo), _.text_sdo = new FWDUVPDisplayObject("div"), _.text_sdo.getStyle().whiteSpace = "nowrap", _.text_sdo.setBackfaceVisibility(), _.text_sdo.setOverflow("visible"), _.text_sdo.setDisplay("inline-block"), _.text_sdo.getStyle().fontFamily = "Arial", _.text_sdo.getStyle().fontSize = "13px", _.text_sdo.getStyle().fontWeight = "100", _.text_sdo.getStyle().padding = "6px", _.text_sdo.getStyle().color = _.normalColor_str, _.text_sdo.getStyle().fontSmoothing = "antialiased", _.text_sdo.getStyle().webkitFontSmoothing = "antialiased", _.text_sdo.getStyle().textRendering = "optimizeLegibility", FWDUVPUtils.isIEAndLessThen9 ? _.text_sdo.screen.innerText = _.label1_str : _.text_sdo.setInnerHTML(_.label1_str), _.addChild(_.text_sdo), _.arrow_do = new FWDUVPDisplayObject("div"), _.arrow_do.screen.className = "arrow", _.arrow_do.setOverflow("visible"), _.useHEXColorsForSkin_bl ? (_.arrowN_img = new Image, _.arrowN_img.src = _.arrowN_str, _.arrowS_img = new Image, _.arrowS_img.src = _.arrowS_str, _.arrowN_sdo = new FWDUVPDisplayObject("div"), _.arrowS_sdo = new FWDUVPDisplayObject("div"), _.arrowS_img.onload = function() {
                _.arrowN_sdo.setWidth(_.arrowN_img.width), _.arrowN_sdo.setHeight(_.arrowN_img.height), _.scrubberLines_n_canvas = FWDUVPUtils.getCanvasWithModifiedColor(_.arrowN_img, _.normalButtonsColor_str, !0), _.scrubbelinesNImage_img = _.scrubberLines_n_canvas.image, _.arrowN_sdo.getStyle().background = "url('" + _.scrubbelinesNImage_img.src + "') repeat-y", _.arrowS_sdo.setWidth(_.arrowS_img.width), _.arrowS_sdo.setHeight(_.arrowS_img.height), _.scrubberLines_s_canvas = FWDUVPUtils.getCanvasWithModifiedColor(_.arrowS_img, _.selectedButtonsColor_str, !0), _.scrubbelinesSImage_img = _.scrubberLines_s_canvas.image, _.arrowS_sdo.getStyle().background = "url('" + _.scrubbelinesSImage_img.src + "') repeat-y"
            }) : (_.arrowN_sdo = new FWDUVPDisplayObject("div"), _.arrowN_sdo.screen.style.backgroundImage = "url(" + _.arrowN_str + ")", _.arrowS_sdo = new FWDUVPDisplayObject("div"), _.arrowS_sdo.screen.style.backgroundImage = "url(" + _.arrowS_str + ")"), _.arrowS_sdo.setAlpha(0), _.arrow_do.addChild(_.arrowN_sdo), _.arrow_do.addChild(_.arrowS_sdo), _.addChild(_.arrow_do), _.arrowN_sdo.setWidth(_.arrowWidth), _.arrowN_sdo.setHeight(_.arrowHeight), _.arrowS_sdo.setWidth(_.arrowWidth), _.arrowS_sdo.setHeight(_.arrowHeight), _.dumy_sdo = new FWDUVPDisplayObject("div"), FWDUVPUtils.isIE && (_.dumy_sdo.setBkColor("#FF0000"), _.dumy_sdo.setAlpha(0)), _.addChild(_.dumy_sdo), _.hasPointerEvent_bl ? (_.screen.addEventListener("pointerup", _.onClick), _.screen.addEventListener("pointerover", _.onMouseOver), _.screen.addEventListener("pointerout", _.onMouseOut)) : _.screen.addEventListener && (_.screen.addEventListener("mouseover", _.onMouseOver), _.screen.addEventListener("mouseout", _.onMouseOut), _.screen.addEventListener("mouseup", _.onClick), _.screen.addEventListener("touchend", _.onClick))
        }, _.onMouseOver = function(e) {
            _.isDisabled_bl || e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE || (FWDAnimation.killTweensOf(_.text_sdo), _.setSelectedState(!0, 0), _.dispatchEvent(p.MOUSE_OVER))
        }, _.onMouseOut = function(e) {
            _.isDisabled_bl || e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE || (FWDAnimation.killTweensOf(_.text_sdo), _.setNormalState(!0, !0), _.dispatchEvent(p.MOUSE_OUT))
        }, _.onClick = function(e) {
            _.isDeveleper_bl ? window.open("http://www.webdesign-flash.ro", "_blank") : (e.preventDefault && e.preventDefault(), _.dispatchEvent(p.CLICK, {
                e: e
            }))
        }, _.onMouseDown = function(e) {
            e.preventDefault && e.preventDefault(), _.dispatchEvent(p.MOUSE_DOWN, {
                e: e
            })
        }, this.setSelectedState = function(e, t) {
            e ? (FWDAnimation.to(_.bk_sdo, .6, {
                alpha: 1,
                ease: Expo.easeOut
            }), FWDAnimation.to(_.text_sdo.screen, .6, {
                css: {
                    color: _.textSelectedColor_str
                },
                ease: Expo.easeOut
            }), FWDAnimation.to(_.arrowS_sdo, .6, {
                alpha: 1,
                ease: Expo.easeOut
            })) : (_.bk_sdo.setAlpha(1), _.text_sdo.getStyle().color = _.textSelectedColor_str, _.arrowS_sdo.alpha = 1)
        }, this.setNormalState = function(e, t) {
            var o = .6;
            t && (o = 0), o = 0, e ? (FWDAnimation.to(_.bk_sdo, .6, {
                alpha: 0,
                delay: o,
                ease: Expo.easeOut
            }), FWDAnimation.to(_.text_sdo.screen, .6, {
                css: {
                    color: _.textNormalColor_str
                },
                delay: o,
                ease: Expo.easeOut
            }), FWDAnimation.to(_.arrowS_sdo, .6, {
                alpha: 0,
                delay: o,
                ease: Expo.easeOut
            })) : (_.bk_sdo.setAlpha(0), _.text_sdo.getStyle().color = _.textNormalColor_str, _.arrowS_sdo.alpha = 0)
        }, _.centerText = function() {
            _.dumy_sdo.setWidth(_.totalWidth), _.dumy_sdo.setHeight(_.totalHeight), _.bk_sdo.setWidth(_.totalWidth), _.bk_sdo.setHeight(_.totalHeight), _.text_sdo.setX(2), _.text_sdo.setY(Math.round((_.totalHeight - _.text_sdo.getHeight()) / 2)), _.arrow_do.setX(_.totalWidth - _.arrowWidth - 8), _.arrow_do.setY(Math.round((_.totalHeight - _.arrowHeight) / 2))
        }, _.getMaxTextWidth = function() {
            return _.text_sdo.getWidth()
        }, this.disable = function() {
            _.isDisabled_bl = !0, _.setSelectedState(!0), FWDUVPUtils.hasTransform2d && (FWDAnimation.to(_.arrowN_sdo.screen, .8, {
                css: {
                    rotation: 180
                },
                ease: Quart.easeOut
            }), FWDAnimation.to(_.arrowS_sdo.screen, .8, {
                css: {
                    rotation: 180
                },
                ease: Quart.easeOut
            })), _.setButtonMode(!1)
        }, this.enable = function() {
            _.isDisabled_bl = !1, _.setNormalState(!0), FWDUVPUtils.hasTransform2d && (FWDAnimation.to(_.arrowN_sdo.screen, .8, {
                css: {
                    rotation: 0
                },
                ease: Quart.easeOut
            }), FWDAnimation.to(_.arrowS_sdo.screen, .8, {
                css: {
                    rotation: 0
                },
                ease: Quart.easeOut
            })), _.setButtonMode(!0)
        }, this.setText = function(e) {
            FWDUVPUtils.isIEAndLessThen9 ? _.text_sdo.screen.innerText = e : _.text_sdo.setInnerHTML(e)
        }, _.destroy = function() {
            _.isMobile_bl ? _.screen.removeEventListener("touchstart", _.onMouseDown) : _.screen.removeEventListener ? (_.screen.removeEventListener("mouseover", _.onMouseOver), _.screen.removeEventListener("mouseout", _.onMouseOut), _.screen.removeEventListener("mousedown", _.onMouseDown), _.screen.removeEventListener("click", _.onClick)) : _.screen.detachEvent && (_.screen.detachEvent("onmouseover", _.onMouseOver), _.screen.detachEvent("onmouseout", _.onMouseOut), _.screen.detachEvent("onmousedown", _.onMouseDown), _.screen.detachEvent("onclick", _.onClick)), FWDAnimation.killTweensOf(_.text_sdo), FWDAnimation.killTweensOf(_.colorObj), _.text_sdo.destroy(), _.dumy_sdo.destroy(), _.text_sdo = null, _.dumy_sdo = null, _.label1_str = null, _.normalColor_str = null, _.textSelectedColor_str = null, _.disabledColor_str = null, normalColor = i = null, selectedColor = null, disabledColor = null, _.setInnerHTML(""), f.destroy(), f = _ = null, p.prototype = null
        }, _.init()
    };
    p.setPrototype = function() {
        p.prototype = new FWDUVPDisplayObject("div")
    }, p.FIRST_BUTTON_CLICK = "onFirstClick", p.SECOND_BUTTON_CLICK = "secondButtonOnClick", p.MOUSE_OVER = "onMouseOver", p.MOUSE_OUT = "onMouseOut", p.MOUSE_DOWN = "onMouseDown", p.CLICK = "onClick", p.prototype = null, window.FWDUVPComboBoxSelector = p
}(window), function() {
    var _ = function(e, t, o, s, i, n, l, a, r, d, u, h) {
        var c = this;
        _.prototype;
        this.iconCSSString = r, this.icon2CSSString = d, this.normalCalssName = u, this.selectedCalssName = h, this.n1Img = e, this.s1Path_str = t, this.n2Img = o, this.s2Path_str = s, this.firstButton_do, this.n1_do, this.s1_do, this.secondButton_do, this.n2_do, this.s2_do, this.n1Img && (this.buttonWidth = c.n1Img.width, this.buttonHeight = c.n1Img.height), this.useHEXColorsForSkin_bl = n, this.normalButtonsColor_str = l, this.selectedButtonsColor_str = a, this.isSelectedState_bl = !1, this.currentState = 1, this.isDisabled_bl = !1, this.isMaximized_bl = !1, this.disptachMainEvent_bl = i, this.isDisabled_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.allowToCreateSecondButton_bl = !c.isMobile_bl || c.hasPointerEvent_bl, this.useFontAwesome_bl = Boolean(this.iconCSSString), c.init = function() {
            c.hasTransform2d_bl = !1, c.setButtonMode(!0), c.setWidth(c.buttonWidth), c.setHeight(c.buttonHeight), c.setupMainContainers(), c.secondButton_do.setVisible(!1), c.setNormalState()
        }, c.setupMainContainers = function() {
            c.useFontAwesome_bl ? (c.firstButton_do = new FWDUVPDisplayObject("div"), c.n1_do = new FWDUVPDisplayObject("div"), c.n1_do.setBac, c.n1_do.setInnerHTML(c.iconCSSString), c.firstButton_do.addChild(c.n1_do), c.secondButton_do = new FWDUVPDisplayObject("div"), c.n2_do = new FWDUVPDisplayObject("div"), c.n2_do.setInnerHTML(c.icon2CSSString), c.secondButton_do.addChild(c.n2_do), c.setFinalSize()) : (c.firstButton_do = new FWDUVPDisplayObject("div"), c.firstButton_do.setWidth(c.buttonWidth), c.firstButton_do.setHeight(c.buttonHeight), c.useHEXColorsForSkin_bl ? (c.n1_do = new FWDUVPDisplayObject("div"), c.n1_do.setWidth(c.buttonWidth), c.n1_do.setHeight(c.buttonHeight), c.n1_sdo_canvas = FWDUVPUtils.getCanvasWithModifiedColor(c.n1Img, c.normalButtonsColor_str).canvas, c.n1_do.screen.appendChild(c.n1_sdo_canvas)) : (c.n1_do = new FWDUVPDisplayObject("img"), c.n1_do.setScreen(c.n1Img)), c.firstButton_do.addChild(c.n1_do), c.allowToCreateSecondButton_bl && (c.s1_img = new Image, c.s1_img.src = c.s1Path_str, c.useHEXColorsForSkin_bl ? (c.s1_do = new FWDUVPTransformDisplayObject("div"), c.s1_do.setWidth(c.buttonWidth), c.s1_do.setHeight(c.buttonHeight), c.s1_img.onload = function() {
                c.s1_do_canvas = FWDUVPUtils.getCanvasWithModifiedColor(c.s1_img, c.selectedButtonsColor_str).canvas, c.s1_do.screen.appendChild(c.s1_do_canvas)
            }) : (c.s1_do = new FWDUVPDisplayObject("img"), c.s1_do.setScreen(c.s1_img), c.s1_do.setWidth(c.buttonWidth), c.s1_do.setHeight(c.buttonHeight)), c.s1_do.setAlpha(0), c.firstButton_do.addChild(c.s1_do)), c.secondButton_do = new FWDUVPDisplayObject("div"), c.secondButton_do.setWidth(c.buttonWidth), c.secondButton_do.setHeight(c.buttonHeight), c.useHEXColorsForSkin_bl ? (c.n2_do = new FWDUVPDisplayObject("div"), c.n2_do.setWidth(c.buttonWidth), c.n2_do.setHeight(c.buttonHeight), c.n2_sdo_canvas = FWDUVPUtils.getCanvasWithModifiedColor(c.n2Img, c.normalButtonsColor_str).canvas, c.n2_do.screen.appendChild(c.n2_sdo_canvas)) : (c.n2_do = new FWDUVPDisplayObject("img"), c.n2_do.setScreen(c.n2Img)), c.secondButton_do.addChild(c.n2_do), c.allowToCreateSecondButton_bl && (c.s2_img = new Image, c.s2_img.src = c.s2Path_str, c.useHEXColorsForSkin_bl ? (c.s2_do = new FWDUVPTransformDisplayObject("div"), c.s2_do.setWidth(c.buttonWidth), c.s2_do.setHeight(c.buttonHeight), c.s2_img.onload = function() {
                c.s2_do_canvas = FWDUVPUtils.getCanvasWithModifiedColor(c.s2_img, c.selectedButtonsColor_str).canvas, c.s2_do.screen.appendChild(c.s2_do_canvas)
            }) : (c.s2_do = new FWDUVPDisplayObject("img"), c.s2_do.setScreen(c.s2_img), c.s2_do.setWidth(c.buttonWidth), c.s2_do.setHeight(c.buttonHeight)), c.s2_do.setAlpha(0), c.secondButton_do.addChild(c.s2_do))), c.addChild(c.secondButton_do), c.addChild(c.firstButton_do), c.hasPointerEvent_bl ? (c.screen.addEventListener("pointerup", c.onMouseUp), c.screen.addEventListener("pointerover", c.onMouseOver), c.screen.addEventListener("pointerout", c.onMouseOut)) : c.screen.addEventListener && (c.isMobile_bl || (c.screen.addEventListener("mouseover", c.onMouseOver), c.screen.addEventListener("mouseout", c.onMouseOut), c.screen.addEventListener("mouseup", c.onMouseUp)), c.screen.addEventListener("toustart", c.onDown), c.screen.addEventListener("touchend", c.onMouseUp))
        }, c.onMouseOver = function(e, t) {
            c.isDisabled_bl || c.isSelectedState_bl || e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE && "mouse" != e.pointerType || (c.dispatchEvent(_.MOUSE_OVER, {
                e: e
            }), c.dispatchEvent(_.SHOW_TOOLTIP, {
                e: e
            }), c.setSelectedState(!0))
        }, c.onMouseOut = function(e) {
            !c.isDisabled_bl && c.isSelectedState_bl && (e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE && "mouse" != e.pointerType || (c.setNormalState(!0), c.dispatchEvent(_.MOUSE_OUT)))
        }, c.onDown = function(e) {
            e.preventDefault && e.preventDefault()
        }, c.onMouseUp = function(e) {
            c.isDisabled_bl || 2 == e.button || (e.preventDefault && e.preventDefault(), c.isMobile_bl || c.onMouseOver(e, !1), c.disptachMainEvent_bl && c.dispatchEvent(_.MOUSE_UP, {
                e: e
            }))
        }, c.checkCount = 0, this.setFinalSize = function() {
            if (clearInterval(c.checkId_int), c.lastWidth = c.n1_do.screen.firstChild.offsetWidth, !(5 < c.checkCount) && (c.checkCount++, c.checkId_int = setInterval(function() {
                    c.setFinalSize()
                }, 100), c.prevWidth != c.lastWidth && 0 != c.lastWidth)) {
                var e = Math.max(c.n1_do.screen.firstChild.offsetWidth, c.n2_do.screen.firstChild.offsetWidth),
                    t = Math.max(c.n1_do.screen.offsetHeight, c.n2_do.screen.firstChild.offsetHeight);
                c.buttonWidth = e, c.buttonHeight = t, c.setWidth(e), c.setHeight(t), c.firstButton_do.setWidth(c.w), c.firstButton_do.setHeight(c.h), c.secondButton_do.setWidth(c.w), c.secondButton_do.setHeight(c.h), c.n1_do.setX(Math.round((e - c.n1_do.getWidth()) / 2)), c.n1_do.setY(Math.round((t - c.n1_do.getHeight()) / 2)), c.n2_do.setX(Math.round((e - c.n2_do.getWidth()) / 2)), c.n2_do.setY(Math.round((t - c.n2_do.getHeight()) / 2)), c.prevWidth = c.lastWidth
            }
        }, c.toggleButton = function() {
            1 == c.currentState ? (c.firstButton_do.setVisible(!1), c.secondButton_do.setVisible(!0), c.currentState = 0, c.dispatchEvent(_.FIRST_BUTTON_CLICK)) : (c.firstButton_do.setVisible(!0), c.secondButton_do.setVisible(!1), c.currentState = 1, c.dispatchEvent(_.SECOND_BUTTON_CLICK))
        }, c.setButtonState = function(e) {
            1 == e ? (c.firstButton_do.setVisible(!0), c.secondButton_do.setVisible(!1), c.currentState = 1) : (c.firstButton_do.setVisible(!1), c.secondButton_do.setVisible(!0), c.currentState = 0)
        }, this.setNormalState = function(e) {
            c.isMobile_bl && !c.hasPointerEvent_bl && !c.useFontAwesome_bl || (c.isSelectedState_bl = !1, FWDAnimation.killTweensOf(c.s1_do), FWDAnimation.killTweensOf(c.s2_do), c.useFontAwesome_bl ? (FWDAnimation.killTweensOf(c.n1_do.screen), FWDAnimation.killTweensOf(c.n2_do.screen), e ? (FWDAnimation.to(c.n1_do.screen, .8, {
                className: c.normalCalssName,
                ease: Expo.easeOut
            }), FWDAnimation.to(c.n2_do.screen, .8, {
                className: c.normalCalssName,
                ease: Expo.easeOut
            })) : (c.n1_do.screen.className = c.normalCalssName, c.n2_do.screen.className = c.normalCalssName)) : (FWDAnimation.to(c.s1_do, .5, {
                alpha: 0,
                ease: Expo.easeOut
            }), FWDAnimation.to(c.s2_do, .5, {
                alpha: 0,
                ease: Expo.easeOut
            })))
        }, this.setSelectedState = function(e) {
            c.isSelectedState_bl = !0, FWDAnimation.killTweensOf(c.s1_do), FWDAnimation.killTweensOf(c.s2_do), c.useFontAwesome_bl ? (FWDAnimation.killTweensOf(c.n1_do.screen), FWDAnimation.killTweensOf(c.n2_do.screen), e ? (FWDAnimation.to(c.n1_do.screen, .8, {
                className: c.selectedCalssName,
                ease: Expo.easeOut
            }), FWDAnimation.to(c.n2_do.screen, .8, {
                className: c.selectedCalssName,
                ease: Expo.easeOut
            })) : (c.n1_do.screen.className = c.selectedCalssName, c.n2_do.screen.className = c.selectedCalssName)) : (FWDAnimation.to(c.s1_do, .5, {
                alpha: 1,
                delay: .1,
                ease: Expo.easeOut
            }), FWDAnimation.to(c.s2_do, .5, {
                alpha: 1,
                delay: .1,
                ease: Expo.easeOut
            }))
        }, this.disable = function() {
            c.isDisabled_bl || (c.isDisabled_bl = !0, c.setButtonMode(!1), FWDAnimation.killTweensOf(c), FWDAnimation.to(c, .6, {
                alpha: .4
            }), c.setNormalState())
        }, this.enable = function() {
            c.isDisabled_bl && (c.isDisabled_bl = !1, c.setButtonMode(!0), FWDAnimation.killTweensOf(c), FWDAnimation.to(c, .6, {
                alpha: 1
            }))
        }, this.updateHEXColors = function(e, t) {
            FWDUVPUtils.changeCanvasHEXColor(c.n1Img, c.n1_sdo_canvas, e), FWDUVPUtils.changeCanvasHEXColor(c.s1_img, c.s1_do_canvas, t), FWDUVPUtils.changeCanvasHEXColor(c.n2Img, c.n2_sdo_canvas, e), FWDUVPUtils.changeCanvasHEXColor(c.s2_img, c.s2_do_canvas, t)
        }, c.init()
    };
    _.setPrototype = function() {
        _.prototype = new FWDUVPDisplayObject("div")
    }, _.FIRST_BUTTON_CLICK = "onFirstClick", _.SECOND_BUTTON_CLICK = "secondButtonOnClick", _.MOUSE_OVER = "onMouseOver", _.MOUSE_OUT = "onMouseOut", _.MOUSE_UP = "onMouseUp", _.CLICK = "onClick", _.SHOW_TOOLTIP = "showTooltip", _.prototype = null, window.FWDUVPComplexButton = _
}(window), function() {
    var e = function(n, l) {
        var r = this;
        e.prototype;
        r.parent = n, r.buttonsTest_ar = ["copy_url", "copy_url_time", "fullscreen"], r.itemsLabels_ar = ["Copy video URL", "Copy video URL at current time", "Fullscreen/Normalscreen"], r.items_ar = [], r.spacers_ar = [], r.copyURL_do = null, r.copyURLTime_do = null, r.backgroundColor_str = l.contextMenuBackgroundColor_str, r.borderColor_str = l.contextMenuBorderColor_str, r.spacerColor_str = l.contextMenuSpacerColor_str, r.itemNormalColor_str = l.contextMenuItemNormalColor_str, r.itemSelectedColor_str = l.contextMenuItemSelectedColor_str, r.itemDisabledColor_str = l.contextMenuItemDisabledColor_str, r.draggingMode_str = l.startDraggingMode_str, r.link_str = l.link_str, r.borderRadius = 0, r.biggestWidth, r.totalWidth = 400, r.totalHeight = 400, r.sapaceBetweenButtons = 7, r.padding = 6, r.getMaxWidthResizeAndPositionId_to, r.inverseNextAndPrevRotation_bl = l.inverseNextAndPrevRotation_bl, r.showScriptDeveloper_bl = l.showScriptDeveloper_bl, r.show_bl = !1, r.init = function() {
            (r.itemsLabels_ar || r.showScriptDeveloper_bl) && (r.show_bl = !0, r.setWidth(r.totalWidth), r.setHeight(r.totalHeight), r.setBkColor(r.backgroundColor_str), r.getStyle().borderColor = r.borderColor_str, r.getStyle().borderStyle = "solid", r.getStyle().borderRadius = r.borderRadius + "px", r.getStyle().borderWidth = "1px", r.setVisible(!1), r.setY(-2e3), r.parent.main_do.addChild(r), r.setupLabels(), r.setupDeveloperButton(), r.setupSpacers(), r.disable(), r.getMaxWidthResizeAndPositionId_to = setTimeout(r.getMaxWidthResizeAndPosition, 200)), r.addContextEvent()
        }, r.copyText = function(e) {
            var t = document.createElement("textarea");
            t.value = e, document.body.appendChild(t), t.select(), document.execCommand("copy"), document.body.removeChild(t)
        }, r.setupLabels = function() {
            var e, t = r.buttonsTest_ar.length,
                o = "",
                s = "";
            if (r.itemsLabels_ar)
                for (var i = 0; i < t; i++) "copy_url" == (e = r.buttonsTest_ar[i]) ? (o = r.itemsLabels_ar[i], FWDUVPContextMenuButton.setPrototype(), r.copyURL_do = new FWDUVPContextMenuButton(o, void 0, r.itemNormalColor_str, r.itemSelectedColor_str, r.itemDisabledColor_str), r.items_ar.push(r.copyURL_do), r.copyURL_do.addListener(FWDUVPContextMenuButton.MOUSE_DOWN, r.copyURLHandler), r.addChild(r.copyURL_do)) : "copy_url_time" == e ? (o = r.itemsLabels_ar[i], FWDUVPContextMenuButton.setPrototype(), r.copyURLTime_do = new FWDUVPContextMenuButton(o, void 0, r.itemNormalColor_str, r.itemSelectedColor_str, r.itemDisabledColor_str), r.items_ar.push(r.copyURLTime_do), r.copyURLTime_do.addListener(FWDUVPContextMenuButton.MOUSE_DOWN, r.copyURLAtTimeHandler), r.addChild(r.copyURLTime_do)) : "fullscreen" == e && l.showFullScreenButton_bl && (str = r.itemsLabels_ar[i], o = str.substr(0, str.indexOf("/")), s = str.substr(str.indexOf("/") + 1), FWDUVPContextMenuButton.setPrototype(), r.fullScreenButton_do = new FWDUVPContextMenuButton(o, s, r.itemNormalColor_str, r.itemSelectedColor_str, r.itemDisabledColor_str), r.items_ar.push(r.fullScreenButton_do), r.fullScreenButton_do.addListener(FWDUVPContextMenuButton.MOUSE_DOWN, r.fullScreenStartHandler), r.addChild(r.fullScreenButton_do))
        }, r.setupDeveloperButton = function() {
            r.showScriptDeveloper_bl && (r.itemsLabels_ar || (r.itemsLabels_ar = []), r.itemsLabels_ar.push("&#0169; made by FWD"), label1_str = "&#0169; made by FWD", FWDUVPContextMenuButton.setPrototype(), r.developerButton_do = new FWDUVPContextMenuButton(label1_str, void 0, r.itemNormalColor_str, r.itemSelectedColor_str, r.itemDisabledColor_str), r.developerButton_do.isDeveleper_bl = !0, r.items_ar.push(r.developerButton_do), r.addChild(r.developerButton_do))
        }, r.copyURLAtTimeHandler = function(e) {
            var t = n.curTime;
            5 == t.length && (t = "00:" + t);
            for (var o = String(t).split(":"), s = 0; s < o.length; s++) "00" == o[s] && (o[s] = "0");
            FWDUVPUtils.getHashUrlArgs(window.location.hash);
            var i = location.href;
            i = (i = (i = (i = i.replace(/&uvpi=.*/i, "")).replace(/&playlistId=.*/i, "")).replace(/playlistId=.*/i, "")).replace(/&t=.*/i, ""), -1 == (t = -1 == location.href.indexOf("?") ? 1 < FWDUVPlayer.instaces_ar.length ? i + "?uvpi=" + n.instanceName_str + "&playlistId=" + n.catId + "&videoId=" + n.id : i + "?playlistId=" + n.catId + "&videoId=" + n.id : 1 < FWDUVPlayer.instaces_ar.length ? i + "&uvpi=" + n.instanceName_str + "&playlistId=" + n.catId + "&videoId=" + n.id : i + "&playlistId=" + n.catId + "&videoId=" + n.id).indexOf("t=") && (t = t + "&t=" + o[0] + "h" + o[1] + "m" + o[2] + "s"), r.copyText(t), r.removeMenuId_to = setTimeout(r.removeFromDOM, 150)
        }, r.copyURLHandler = function(e) {
            r.copyText(location.href), r.removeMenuId_to = setTimeout(r.removeFromDOM, 150)
        }, r.fullScreenStartHandler = function(e) {
            0 == r.fullScreenButton_do.currentState ? n.goFullScreen() : 1 == r.fullScreenButton_do.currentState && n.goNormalScreen(), r.fullScreenButton_do.onMouseOut()
        }, r.updateFullScreenButton = function(e) {
            r.fullScreenButton_do && (0 == e ? r.fullScreenButton_do.setButtonState(0) : r.fullScreenButton_do.setButtonState(1), r.removeMenuId_to = setTimeout(r.removeFromDOM, 150))
        }, r.setupSpacers = function() {
            for (var e, t = r.items_ar.length - 1, o = 0; o < t; o++) e = new FWDUVPDisplayObject("div"), (r.spacers_ar[o] = e).setHeight(1), e.setBkColor(r.spacerColor_str), r.addChild(e)
        }, r.getMaxWidthResizeAndPosition = function() {
            var e, t, o = r.items_ar.length;
            r.totalWidth = 0;
            for (var s = r.totalHeight = 0; s < o; s++)(e = r.items_ar[s]).getMaxTextWidth() > r.totalWidth && (r.totalWidth = e.getMaxTextWidth());
            for (s = 0; s < o; s++) t = r.spacers_ar[s - 1], (e = r.items_ar[s]).setX(r.padding), e.setY(10 + s * (e.totalHeight + r.sapaceBetweenButtons) - r.padding), t && (t.setWidth(r.totalWidth + 2), t.setX(r.padding), t.setY(parseInt(e.getY() - r.sapaceBetweenButtons / 2) - 1)), e.setWidth(r.totalWidth + 2), e.centerText();
            r.totalHeight = e.getY() + e.totalHeight + 2, r.setWidth(r.totalWidth + 2 * r.padding + 4), r.setHeight(r.totalHeight), r.setVisible(!0), r.removeMenuId_to = setTimeout(r.removeFromDOM, 150)
        }, r.addContextEvent = function() {
            r.parent.main_do.screen.addEventListener ? r.parent.main_do.screen.addEventListener("contextmenu", r.contextMenuHandler) : r.parent.main_do.screen.attachEvent("oncontextmenu", r.contextMenuHandler)
        }, r.contextMenuHandler = function(e) {
            return r.show_bl && l.showContextmenu_bl && (clearTimeout(r.removeMenuId_to), r.parent.main_do.addChild(r), r.positionButtons(e), r.setAlpha(0), FWDAnimation.to(r, .4, {
                alpha: 1,
                ease: Quart.easeOut
            }), window.addEventListener ? (window.addEventListener("mousedown", r.contextMenuWindowOnMouseDownHandler), window.addEventListener("mouseup", r.contextMenuWindowOnMouseDownHandler)) : (document.documentElement.attachEvent("onmousedown", r.contextMenuWindowOnMouseDownHandler), document.documentElement.attachEvent("onmouseup", r.contextMenuWindowOnMouseDownHandler))), !!e.preventDefault && void e.preventDefault()
        }, r.contextMenuWindowOnMouseDownHandler = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e),
                o = t.screenX,
                s = t.screenY;
            FWDUVPUtils.hitTest(r.screen, o, s) || (window.removeEventListener ? (window.removeEventListener("mousedown", r.contextMenuWindowOnMouseDownHandler), window.removeEventListener("mouseup", r.contextMenuWindowOnMouseDownHandler)) : (document.documentElement.detachEvent("onmousedown", r.contextMenuWindowOnMouseDownHandler), document.documentElement.detachEvent("onmouseup", r.contextMenuWindowOnMouseDownHandler)), r.removeMenuId_to = setTimeout(r.removeFromDOM, 150))
        }, r.positionButtons = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e),
                o = r.parent.main_do.getWidth(),
                s = r.parent.main_do.getHeight(),
                i = t.screenX - r.parent.main_do.getGlobalX(),
                n = t.screenY - r.parent.main_do.getGlobalY(),
                l = i - 2,
                a = n - 2;
            r.totalWidth = r.getWidth(), r.totalHeight = r.getHeight(), l + r.totalWidth > o - 2 && (l = i - r.totalWidth), l < 0 && (l = parseInt((o - r.totalWidth) / 2)), l < 0 && (l = 0), a + r.totalHeight > s - 2 && (a = n - r.totalHeight), a < 0 && (a = parseInt((s - r.totalHeight) / 2)), a < 0 && (a = 0), r.setX(l), r.setY(a)
        }, r.disable = function() {
            r.copyURL_do && r.copyURL_do.disable(), r.copyURLTime_do && r.copyURLTime_do.disable()
        }, r.enable = function() {
            r.copyURL_do && r.copyURL_do.enable(), r.copyURLTime_do && r.copyURLTime_do.enable()
        }, r.removeFromDOM = function() {
            r.setX(-5e3)
        }, r.init()
    };
    e.setPrototype = function() {
        e.prototype = new FWDUVPDisplayObject("div")
    }, e.prototype = null, window.FWDUVPContextMenu = e
}(window), function() {
    var a = function(e, t, o, s, i, n) {
        var l = this;
        a.prototype;
        l.label1_str = e, l.label2_str = t, l.normalColor_str = o, l.selectedColor_str = s, l.disabledColor_str = i, l.totalWidth = 400, l.totalHeight = 20, l.padding, l.text1_sdo = null, l.text2_sdo = null, l.dumy_sdo = null, l.isMobile_bl = FWDUVPUtils.isMobile, l.currentState = 1, l.isDisabled_bl = !1, l.isMaximized_bl = !1, l.showSecondButton_bl = null != t, l.isDeveleper_bl = !1, l.init = function() {
            l.setBackfaceVisibility(), l.setButtonMode(!0), l.setupMainContainers(), l.setWidth(l.totalWidth), l.setHeight(l.totalHeight), l.setButtonState(0)
        }, l.setupMainContainers = function() {
            l.text1_sdo = new FWDUVPDisplayObject("div"), l.text1_sdo.setBackfaceVisibility(), l.text1_sdo.setDisplay("inline-block"), l.text1_sdo.getStyle().fontFamily = "Arial", l.text1_sdo.getStyle().fontSize = "12px", l.text1_sdo.getStyle().color = l.normalColor_str, l.text1_sdo.getStyle().fontSmoothing = "antialiased", l.text1_sdo.setInnerHTML(l.label1_str), l.addChild(l.text1_sdo), l.showSecondButton_bl && (l.text2_sdo = new FWDUVPDisplayObject("div"), l.text2_sdo.setBackfaceVisibility(), l.text2_sdo.setDisplay("inline-block"), l.text2_sdo.getStyle().fontFamily = "Arial", l.text2_sdo.getStyle().fontSize = "12px", l.text2_sdo.getStyle().color = l.normalColor_str, l.text2_sdo.getStyle().fontSmoothing = "antialiased", l.text2_sdo.setInnerHTML(l.label2_str), l.addChild(l.text2_sdo)), l.dumy_sdo = new FWDUVPDisplayObject("div"), FWDUVPUtils.isIE && (l.dumy_sdo.setBkColor("#FF0000"), l.dumy_sdo.setAlpha(0)), l.addChild(l.dumy_sdo), l.isMobile_bl ? l.screen.addEventListener("touchstart", l.onMouseDown) : l.screen.addEventListener && (l.screen.addEventListener("mouseover", l.onMouseOver), l.screen.addEventListener("mouseout", l.onMouseOut), l.screen.addEventListener("mousedown", l.onMouseDown), l.screen.addEventListener("click", l.onClick))
        }, l.onMouseOver = function(e) {
            l.isDisabled_bl || (FWDAnimation.killTweensOf(l.text1_sdo), e ? (FWDAnimation.to(l.text1_sdo.screen, .5, {
                css: {
                    color: l.selectedColor_str
                },
                ease: Expo.easeOut
            }), l.showSecondButton_bl && FWDAnimation.to(l.text2_sdo.screen, .5, {
                css: {
                    color: l.selectedColor_str
                },
                ease: Expo.easeOut
            })) : (l.text1_sdo.getStyle().color = l.selectedColor_str, l.showSecondButton_bl && (FWDAnimation.killTweensOf(l.text2_sdo), l.text2_sdo.getStyle().color = l.selectedColor_str)), l.dispatchEvent(a.MOUSE_OVER))
        }, l.onMouseOut = function(e) {
            l.isDisabled_bl || (FWDAnimation.killTweensOf(l.text1_sdo), FWDAnimation.to(l.text1_sdo.screen, .5, {
                css: {
                    color: l.normalColor_str
                },
                ease: Expo.easeOut
            }), l.showSecondButton_bl && (FWDAnimation.killTweensOf(l.text2_sdo), FWDAnimation.to(l.text2_sdo.screen, .5, {
                css: {
                    color: l.normalColor_str
                },
                ease: Expo.easeOut
            })), l.dispatchEvent(a.MOUSE_OUT))
        }, l.onClick = function(e) {
            l.isDeveleper_bl ? window.open("http://www.webdesign-flash.ro", "_blank") : l.isDisabled_bl || (e.preventDefault && e.preventDefault(), l.dispatchEvent(a.CLICK))
        }, l.onMouseDown = function(e) {
            l.isDisabled_bl || (e.preventDefault && e.preventDefault(), l.dispatchEvent(a.MOUSE_DOWN, {
                e: e
            }))
        }, l.toggleButton = function() {
            l.showSecondButton_bl && (1 == l.currentState ? (l.text1_sdo.setVisible(!0), l.text2_sdo.setVisible(!1), l.currentState = 0, l.dispatchEvent(a.FIRST_BUTTON_CLICK)) : (l.text1_sdo.setVisible(!1), l.text2_sdo.setVisible(!0), l.currentState = 1, l.dispatchEvent(a.SECOND_BUTTON_CLICK)))
        }, l.setButtonState = function(e) {
            0 == e ? (l.text1_sdo.setVisible(!0), l.showSecondButton_bl && l.text2_sdo.setVisible(!1), l.currentState = 0) : 1 == e && (l.text1_sdo.setVisible(!1), l.showSecondButton_bl && l.text2_sdo.setVisible(!0), l.currentState = 1)
        }, l.centerText = function() {
            l.dumy_sdo.setWidth(l.totalWidth), l.dumy_sdo.setHeight(l.totalHeight), FWDUVPUtils.isIEAndLessThen9 ? (l.text1_sdo.setY(Math.round((l.totalHeight - l.text1_sdo.getHeight()) / 2) - 1), l.showSecondButton_bl && l.text2_sdo.setY(Math.round((l.totalHeight - l.text2_sdo.getHeight()) / 2) - 1)) : (l.text1_sdo.setY(Math.round((l.totalHeight - l.text1_sdo.getHeight()) / 2)), l.showSecondButton_bl && l.text2_sdo.setY(Math.round((l.totalHeight - l.text2_sdo.getHeight()) / 2))), l.text1_sdo.setHeight(l.totalHeight + 2), l.showSecondButton_bl && l.text2_sdo.setHeight(l.totalHeight + 2)
        }, l.getMaxTextWidth = function() {
            var e = l.text1_sdo.getWidth(),
                t = 0;
            return l.showSecondButton_bl && (t = l.text2_sdo.getWidth()), Math.max(e, t)
        }, l.disable = function() {
            l.isDisabled_bl = !0, FWDAnimation.killTweensOf(l.text1_sdo), FWDAnimation.to(l.text1_sdo.screen, .5, {
                css: {
                    color: l.disabledColor_str
                },
                ease: Expo.easeOut
            }), l.setButtonMode(!1)
        }, l.enable = function() {
            l.isDisabled_bl = !1, FWDAnimation.killTweensOf(l.text1_sdo), FWDAnimation.to(l.text1_sdo.screen, .5, {
                css: {
                    color: l.normalColor_str
                },
                ease: Expo.easeOut
            }), l.setButtonMode(!0)
        }, l.init()
    };
    a.setPrototype = function() {
        a.prototype = new FWDUVPDisplayObject("div")
    }, a.FIRST_BUTTON_CLICK = "onFirstClick", a.SECOND_BUTTON_CLICK = "secondButtonOnClick", a.MOUSE_OVER = "onMouseOver", a.MOUSE_OUT = "onMouseOut", a.MOUSE_DOWN = "onMouseDown", a.CLICK = "onClick", a.prototype = null, window.FWDUVPContextMenuButton = a
}(window), function() {
    var s = function(p, b) {
        var m = this;
        s.prototype;
        this.data = p, this.bkLeft_img = p.bkLeft_img, this.bkRight_img = p.bkRight_img, this.playN_img = p.playN_img, this.pauseN_img = p.pauseN_img, this.mainScrubberBkLeft_img = p.mainScrubberBkLeft_img, this.mainScrubberDragLeft_img = p.mainScrubberDragLeft_img, this.mainScrubberDragLeftSource = p.mainScrubberDragLeft_img.src, this.mainScrubberLine_img = p.mainScrubberLine_img, this.volumeScrubberBkLeft_img = p.volumeScrubberBkLeft_img, this.volumeScrubberDragBottom_img = p.volumeScrubberDragBottom_img, this.volumeScrubberLine_img = p.volumeScrubberLine_img, this.volumeN_img = p.volumeN_img, this.progressLeft_img = p.progressLeft_img, this.categoriesN_img = p.categoriesN_img, this.parent = b, this.playlistN_img = p.playlistN_img, this.ytbQualityN_img = p.ytbQualityN_img, this.infoN_img = p.infoN_img, this.downloadN_img = p.downloadN_img, this.facebookN_img = p.facebookN_img, this.fullScreenN_img = p.fullScreenN_img, this.normalScreenN_img = p.normalScreenN_img, this.hidePlaylistN_img = p.hidePlaylistN_img, this.showPlaylistN_img = p.showPlaylistN_img, this.embedN_img = p.embedN_img, this.buttons_ar = [], this.ytbQuality_ar = null, this.ytbButtons_ar = null, this.showRewindButton_do, this.prevButton_do = null, this.nextButton_do = null, this.pointer_do, this.ytbDisabledButton_do = null, this.disable_do = null, this.mainHolder_do = null, this.ytbButtonsHolder_do = null, this.playPauseButton_do = null, this.mainScrubber_do = null, this.mainScrubberBkLeft_do = null, this.mainScrubberBkMiddle_do = null, this.mainScrubberBkRight_do = null, this.mainScrubberDrag_do = null, this.mainScrubberDragLeft_do = null, this.mainScrubberDragMiddle_do = null, this.mainScrubberBarLine_do = null, this.mainProgress_do = null, this.progressLeft_do = null, this.progressMiddle_do = null, this.time_do = null, this.volumeButton_do = null, this.volumeScrubber_do = null, this.volumeScrubberBkBottom_do = null, this.volumeScrubberBkMiddle_do = null, this.volumeScrubberBkTop_do = null, this.volumeScrubberDrag_do = null, this.volumeScrubberDragBottom_do = null, this.volumeScrubberDragMiddle_do = null, this.volumeScrubberBarLine_do = null, this.ytbQualityButton_do = null, this.shareButton_do = null, this.fullScreenButton_do = null, this.ytbQualityArrow_do = null, this.bk_do = null, this.playlistButton_do = null, this.embedButton_do = null, this.playPauseToolTip_do = null, this.playlistsButtonToolTip_do = null, this.volumeButtonToolTip_do = null, this.playlistsButtonToolTip_do = null, this.playlistButtonToolTip_do = null, this.embedButtonToolTip_do = null, this.infoButtonToolTip_do = null, this.downloadButtonToolTip_do = null, this.facebookButtonToolTip_do = null, this.fullscreenButtonToolTip_do = null, m.useHEXColorsForSkin_bl = p.useHEXColorsForSkin_bl, m.normalButtonsColor_str = p.normalButtonsColor_str, m.selectedButtonsColor_str = p.selectedButtonsColor_str, this.bkMiddlePath_str = p.bkMiddlePath_str, this.mainScrubberBkMiddlePath_str = p.mainScrubberBkMiddlePath_str, this.volumeScrubberBkMiddlePath_str = p.volumeScrubberBkMiddlePath_str, this.mainScrubberDragMiddlePath_str = p.mainScrubberDragMiddlePath_str, this.volumeScrubberDragMiddlePath_str = p.volumeScrubberDragMiddlePath_str, this.timeColor_str = p.timeColor_str, this.progressMiddlePath_str = p.progressMiddlePath_str, this.youtubeQualityButtonNormalColor_str = p.youtubeQualityButtonNormalColor_str, this.youtubeQualityButtonSelectedColor_str = p.youtubeQualityButtonSelectedColor_str, this.youtubeQualityArrowPath_str = p.youtubeQualityArrowPath_str, this.controllerBkPath_str = p.controllerBkPath_str, this.ytbQualityButtonPointerPath_str = p.ytbQualityButtonPointerPath_str, this.buttonsToolTipFontColor_str = p.buttonsToolTipFontColor_str, this.buttonsToolTipHideDelay = p.buttonsToolTipHideDelay, this.totalYtbButtons = 0, this.stageWidth = 0, this.stageHeight = p.controllerHeight, this.scrubbersBkLeftAndRightWidth = this.mainScrubberBkLeft_img.width, this.mainScrubberWidth = 0, this.mainScrubberMinWidth = 100, this.volumeScrubberOfsetHeight = p.volumeScrubberOfsetHeight, this.volumeScrubberHeight = p.volumeScrubberHeight + m.volumeScrubberOfsetHeight, this.volumeScrubberWidth = m.mainScrubberBkLeft_img.height, this.mainScrubberHeight = this.mainScrubberBkLeft_img.height, this.mainScrubberDragLeftWidth = m.mainScrubberDragLeft_img.width, this.scrubbersOffsetWidth = p.scrubbersOffsetWidth, this.volume = p.volume, this.lastVolume = m.volume, this.startSpaceBetweenButtons = p.startSpaceBetweenButtons, this.spaceBetweenButtons = p.spaceBetweenButtons, this.percentPlayed = 0, this.percentLoaded = 0, this.lastTimeLength = 0, this.prevYtbQualityButtonsLength = 0, this.pointerWidth = 8, this.pointerHeight = 5, this.timeOffsetLeftWidth = p.timeOffsetLeftWidth, this.timeOffsetRightWidth = p.timeOffsetRightWidth, this.timeOffsetTop = p.timeOffsetTop, this.mainScrubberOffestTop = p.mainScrubberOffestTop, this.isVolumeScrubberShowed_bl = !0, this.volumeScrubberIsDragging_bl = !1, this.showButtonsToolTip_bl = p.showButtonsToolTip_bl, this.showPlaylistsButtonAndPlaylists_bl = p.showPlaylistsButtonAndPlaylists_bl, this.showPlaylistButtonAndPlaylist_bl = p.showPlaylistButtonAndPlaylist_bl, this.showEmbedButton_bl = p.showEmbedButton_bl, this.showPlaylistByDefault_bl = p.showPlaylistByDefault_bl, this.showShuffleButton_bl = p.showShuffleButton_bl, this.showLoopButton_bl = p.showLoopButton_bl, this.showNP_bl = b.data.showNextAndPrevButtonsInController_bl, this.showNextAndPrevButtonsInController_bl = p.showNextAndPrevButtonsInController_bl, this.showFullScreenButton_bl = p.showFullScreenButton_bl, this.disableVideoScrubber_bl = p.disableVideoScrubber_bl, this.showYoutubeQualityButton_bl = p.showYoutubeQualityButton_bl, this.showShareButton_bl = p.showShareButton_bl, this.showInfoButton_bl = p.showInfoButton_bl, this.showDownloadVideoButton_bl = p.showDownloadVideoButton_bl, this.showVolumeScrubber_bl = p.showVolumeScrubber_bl, this.allowToChangeVolume_bl = p.allowToChangeVolume_bl, this.showTime_bl = p.showTime_bl, this.showVolumeButton_bl = p.showVolumeButton_bl, this.showControllerWhenVideoIsStopped_bl = p.showControllerWhenVideoIsStopped_bl, this.showRewindButton_bl = p.showRewindButton_bl, this.isMainScrubberScrubbing_bl = !1, this.isMainScrubberDisabled_bl = !1, this.isVolumeScrubberDisabled_bl = !1, this.isMainScrubberLineVisible_bl = !1, this.isVolumeScrubberLineVisible_bl = !1, this.showSubtitleButton_bl = p.showSubtitleButton_bl, this.hasYtbButton_bl = !1, this.isMute_bl = !1, this.isShowed_bl = !0, this.forceToShowMainScrubberOverCotroller_bl = !1, this.isMainScrubberOnTop_bl = !1, this.showNextAndPrevButtons_bl = p.showNextAndPrevButtons_bl, this.isPlaylistShowed_bl = p.isPlaylistShowed_bl, this.areYtbQualityButtonsShowed_bl = !0, this.repeatBackground_bl = p.repeatBackground_bl, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.useVectorIcons_bl = p.useVectorIcons_bl, m.init = function() {
            if (m.setOverflow("visible"), m.mainHolder_do = new FWDUVPDisplayObject("div"), p.useAToB && m.setupATB(), m.repeatBackground_bl) m.bk_do = new FWDUVPDisplayObject("div"), m.bk_do.getStyle().background = "url('" + m.controllerBkPath_str + "')";
            else {
                m.bk_do = new FWDUVPDisplayObject("img");
                var e = new Image;
                e.src = m.controllerBkPath_str, m.bk_do.setScreen(e)
            }
            m.mainHolder_do.addChild(m.bk_do), m.mainHolder_do.setOverflow("visible"), m.mainHolder_do.getStyle().zIndex = 1, m.addChild(m.mainHolder_do), m.showYoutubeQualityButton_bl && (m.ytbQuality_ar = ["hd2160", "hd1440", "highres", "hd1080", "hd720", "large", "medium", "small", "tiny"], m.ytbButtons_ar = [], m.totalYtbButtons = m.ytbQuality_ar.length, m.setupYtbButtons()), m.showNextAndPrevButtonsInController_bl && m.setupPrevButton(), m.setupPlayPauseButton(), m.showRewindButton_bl && m.setupRewindButton(), m.showNextAndPrevButtonsInController_bl && m.setupNextButton(), m.setupMainScrubber(), m.showTime_bl && m.setupTime(), m.showVolumeButton_bl && m.setupVolumeButton(), m.showPlaylistsButtonAndPlaylists_bl && m.setupCategoriesButton(), m.showPlaylistButtonAndPlaylist_bl && m.setupPlaylistButton(), m.showYoutubeQualityButton_bl && m.setupYoutubeQualityButton(), m.showShareButton_bl && m.setupShareButton(), m.showEmbedButton_bl && m.setupEmbedButton(), p.useAToB && m.setupAtbButton(), m.showInfoButton_bl && m.setupInfoButton(), p.showPlaybackRateButton_bl && m.setupPlaybackRateButton(), m.showDownloadVideoButton_bl && m.setupDownloadButton(), m.showSubtitleButton_bl && m.setupSubtitleButton(), p.showChromecastButton_bl && m.setupChromecastButton(), m.showFullScreenButton_bl && m.setupFullscreenButton(), m.showButtonsToolTip_bl && m.setupToolTips(), m.showVolumeScrubber_bl && (m.setupVolumeScrubber(), m.hideVolumeScrubber()), m.hide(!1)
        }, m.resizeAndPosition = function() {
            m.stageWidth = b.tempVidStageWidth, m.positionButtons(), m.setY(b.tempVidStageHeight - m.stageHeight), m.hideQualityButtons(!1), m.ytbButtonsHolder_do && (FWDAnimation.killTweensOf(m.ytbButtonsHolder_do), m.ytbButtonsHolder_do.setY(b.tempStageHeight)), m.subtitlesButtonsHolder_do && (FWDAnimation.killTweensOf(m.subtitlesButtonsHolder_do), m.subtitlesButtonsHolder_do.setY(b.stageHeight)), m.playbackRatesButtonsHolder_do && (FWDAnimation.killTweensOf(m.playbackRatesButtonsHolder_do), m.playbackRatesButtonsHolder_do.setY(b.stageHeight)), m.positionAdsLines()
        }, this.getButtonIndex = function(e) {
            return FWDUVPUtils.indexOfArray(m.buttons_ar, e)
        }, m.positionButtons = function() {
            if (m.stageWidth) {
                var e, t, o, s = 0,
                    i = 0,
                    n = 0,
                    l = 0,
                    a = m.showTime_bl;
                if (p.playlist_ar[b.id]) {
                    var r;
                    if (m.showDownloadVideoButton_bl)
                        if (p.playlist_ar[b.id].downloadable) - 1 == m.getButtonIndex(m.downloadButton_do) && (m.ccBtn_do && -1 != m.getButtonIndex(m.ccBtn_do) ? (o = m.getButtonIndex(m.ccBtn_do), m.buttons_ar.splice(o, 0, m.downloadButton_do)) : m.fullScreenButton_do ? (o = m.getButtonIndex(m.fullScreenButton_do), m.buttons_ar.splice(o, 0, m.downloadButton_do)) : m.buttons_ar.splice(m.buttons_ar.length, 0, m.downloadButton_do), m.downloadButton_do.setVisible(!0));
                        else -1 != (r = m.getButtonIndex(m.downloadButton_do)) && (m.buttons_ar.splice(r, 1), m.downloadButton_do.setVisible(!1));
                    if (m.showInfoButton_bl)
                        if (p.playlist_ar[b.id].desc) - 1 == m.getButtonIndex(m.infoButton_do) && (m.downloadButton_do && -1 != m.getButtonIndex(m.downloadButton_do) ? (o = m.getButtonIndex(m.downloadButton_do), m.buttons_ar.splice(o, 0, m.infoButton_do)) : m.ccBtn_do && -1 != m.getButtonIndex(m.ccBtn_do) ? (o = m.getButtonIndex(m.ccBtn_do), m.buttons_ar.splice(o, 0, m.infoButton_do)) : m.fullScreenButton_do ? (o = m.getButtonIndex(m.fullScreenButton_do), m.buttons_ar.splice(o, 0, m.infoButton_do)) : m.buttons_ar.splice(m.buttons_ar.length, 0, m.infoButton_do), m.infoButton_do.setVisible(!0));
                        else -1 != (r = m.getButtonIndex(m.infoButton_do)) && (m.buttons_ar.splice(r, 1), m.infoButton_do.setVisible(!1));
                    if (p.useAToB)
                        if (p.playlist_ar[b.id].atb) - 1 == FWDUVPUtils.indexOfArray(m.buttons_ar, m.atbButton_do) && (m.infoButton_do && -1 != m.getButtonIndex(m.infoButton_do) ? (o = m.getButtonIndex(m.infoButton_do), m.buttons_ar.splice(o, 0, m.atbButton_do)) : m.downloadButton_do && -1 != m.getButtonIndex(m.downloadButton_do) ? (o = m.getButtonIndex(m.downloadButton_do), m.buttons_ar.splice(o, 0, m.atbButton_do)) : m.ccBtn_do && -1 != m.getButtonIndex(m.ccBtn_do) ? (o = m.getButtonIndex(m.ccBtn_do), m.buttons_ar.splice(o, 0, m.atbButton_do)) : m.fullScreenButton_do ? (o = m.getButtonIndex(m.fullScreenButton_do), m.buttons_ar.splice(o, 0, m.atbButton_do)) : m.buttons_ar.splice(m.buttons_ar.length, 0, m.atbButton_do), m.atbButton_do.setVisible(!0));
                        else {
                            var d = FWDUVPUtils.indexOfArray(m.buttons_ar, m.atbButton_do); - 1 != d && (m.buttons_ar.splice(d, 1), m.atbButton_do.setVisible(!1), m.atb.hide(!0))
                        }
                    if (m.showSubtitleButton_bl)
                        if (p.playlist_ar[b.id].subtitleSource) - 1 == FWDUVPUtils.indexOfArray(m.buttons_ar, m.subtitleButton_do) && (m.playbackRateButton_do && -1 != m.getButtonIndex(m.playbackRateButton_do) ? (o = m.getButtonIndex(m.playbackRateButton_do), m.buttons_ar.splice(o, 0, m.subtitleButton_do)) : m.atbButton_do && -1 != m.getButtonIndex(m.atbButton_do) ? (o = m.getButtonIndex(m.atbButton_do), m.buttons_ar.splice(o, 0, m.subtitleButton_do)) : m.infoButton_do && -1 != m.getButtonIndex(m.infoButton_do) ? (o = m.getButtonIndex(m.infoButton_do), m.buttons_ar.splice(o, 0, m.subtitleButton_do)) : m.downloadButton_do && -1 != m.getButtonIndex(m.downloadButton_do) ? (o = m.getButtonIndex(m.downloadButton_do), m.buttons_ar.splice(o, 0, m.subtitleButton_do)) : m.ccBtn_do && -1 != m.getButtonIndex(m.ccBtn_do) ? (o = m.getButtonIndex(m.ccBtn_do), m.buttons_ar.splice(o, 0, m.subtitleButton_do)) : m.fullScreenButton_do ? (o = m.getButtonIndex(m.fullScreenButton_do), m.buttons_ar.splice(o, 0, m.subtitleButton_do)) : m.buttons_ar.splice(m.buttons_ar.length, 0, m.subtitleButton_do), m.subtitleButton_do.setVisible(!0));
                        else {
                            var u = FWDUVPUtils.indexOfArray(m.buttons_ar, m.subtitleButton_do); - 1 != u && (m.buttons_ar.splice(u, 1), m.subtitleButton_do.setVisible(!1), m.subtitleButton_do.setX(-5e3))
                        }
                    if (b.videoType_str != FWDUVPlayer.VIMEO || p.showDefaultControllerForVimeo_bl) - 1 == FWDUVPUtils.indexOfArray(m.buttons_ar, m.playPauseButton_do) && m.playPauseButton_do && (o = 0, m.buttons_ar.splice(o, 0, m.playPauseButton_do), m.playPauseButton_do.setVisible(!0)), -1 == FWDUVPUtils.indexOfArray(m.buttons_ar, m.rewindButton_do) && m.rewindButton_do && (o = FWDUVPUtils.indexOfArray(m.buttons_ar, m.playPauseButton_do), m.buttons_ar.splice(o, 0, m.rewindButton_do), m.rewindButton_do.setVisible(!0)), m.showVolumeButton_bl && (m.showTime_bl ? -1 == FWDUVPUtils.indexOfArray(m.buttons_ar, m.volumeButton_do) && (o = FWDUVPUtils.indexOfArray(m.buttons_ar, m.time_do) + 1, m.buttons_ar.splice(o, 0, m.volumeButton_do), m.volumeButton_do.setVisible(!0)) : -1 == FWDUVPUtils.indexOfArray(m.buttons_ar, m.volumeButton_do) && (o = FWDUVPUtils.indexOfArray(m.buttons_ar, m.mainScrubber_do) + 1, m.buttons_ar.splice(o, 0, m.volumeButton_do), m.volumeButton_do.setVisible(!0))), m.mainScrubber_do.setVisible(!0);
                    else {
                        var h = FWDUVPUtils.indexOfArray(m.buttons_ar, m.playPauseButton_do); - 1 != h && (m.buttons_ar.splice(h, 1), m.playPauseButton_do.setVisible(!1), m.playPauseButton_do.setX(-500)), m.mainScrubber_do.setVisible(!1)
                    }
                    for (var c = [], _ = 0; _ < m.buttons_ar.length; _++) c[_] = m.buttons_ar[_];
                    "right" == b.tempPlaylistPosition_str && m.showNextAndPrevButtonsInController_bl && !m.showNP_bl && -1 != FWDUVPUtils.indexOfArray(c, m.nextButton_do) && (c.splice(FWDUVPUtils.indexOfArray(c, m.nextButton_do), 1), c.splice(FWDUVPUtils.indexOfArray(c, m.prevButton_do), 1), m.nextButton_do.setX(-1e3), m.prevButton_do.setX(-1e3)), m.mainScrubberWidth = m.stageWidth - 2 * m.startSpaceBetweenButtons;
                    for (_ = 0; _ < c.length; _++)(e = c[_]) != m.mainScrubber_do && (m.mainScrubberWidth -= e.w + m.spaceBetweenButtons);
                    if (b.videoType_str == FWDUVPlayer.VIMEO && 120 <= m.mainScrubberWidth && !p.showDefaultControllerForVimeo_bl) {
                        m.mainScrubber_do && -1 != FWDUVPUtils.indexOfArray(c, m.mainScrubber_do) && (c.splice(FWDUVPUtils.indexOfArray(c, m.mainScrubber_do), 1), m.positionScrollBarOnTopOfTheController()), m.time_do && -1 != FWDUVPUtils.indexOfArray(c, m.time_do) && (c.splice(FWDUVPUtils.indexOfArray(c, m.time_do), 1), m.time_do.setX(-1e3)), s = c.length;
                        for (_ = 0; _ < s; _++) i += c[_].w;
                        n = m.spaceBetweenButtons, l = m.stageWidth - c[s - 1].w - m.startSpaceBetweenButtons - 2;
                        for (_ = s - 1; 0 <= _; _--) e = c[_], _ == s - 1 ? e.setX(l) : (t = c[_ + 1], e.setX(t.x - e.w - n))
                    } else if (m.mainScrubberWidth <= 120 || b.videoType_str == FWDUVPlayer.VIMEO && !p.showDefaultControllerForVimeo_bl) {
                        m.mainScrubber_do && -1 != FWDUVPUtils.indexOfArray(c, m.mainScrubber_do) && (c.splice(FWDUVPUtils.indexOfArray(c, m.mainScrubber_do), 1), m.positionScrollBarOnTopOfTheController()), m.time_do && -1 != FWDUVPUtils.indexOfArray(c, m.time_do) && (c.splice(FWDUVPUtils.indexOfArray(c, m.time_do), 1), m.time_do.setX(-1e3)), s = c.length;
                        for (_ = 0; _ < s; _++) i += c[_].w;
                        n = parseInt((m.stageWidth - i - 2 * m.startSpaceBetweenButtons) / (s - 1)), l = parseInt((m.stageWidth - i - (s - 1) * n) / 2);
                        for (_ = 0; _ < s; _++) e = c[_], 0 == _ ? e.setX(l) : (t = c[_ - 1], e.setX(t.x + t.w + n))
                    } else {
                        for (; m.mainScrubberWidth < m.mainScrubberMinWidth;) {
                            m.mainScrubberWidth = m.stageWidth - 2 * m.startSpaceBetweenButtons, m.time_do && -1 != FWDUVPUtils.indexOfArray(c, m.time_do) ? (c.splice(FWDUVPUtils.indexOfArray(c, m.time_do), 1), m.time_do.setX(-1e3), a = !1) : m.shareButton_do && -1 != FWDUVPUtils.indexOfArray(c, m.shareButton_do) ? (c.splice(FWDUVPUtils.indexOfArray(c, m.shareButton_do), 1), m.shareButton_do.setX(-1e3)) : m.downloadButton_do && -1 != FWDUVPUtils.indexOfArray(c, m.downloadButton_do) ? (c.splice(FWDUVPUtils.indexOfArray(c, m.downloadButton_do), 1), m.downloadButton_do.setX(-1e3)) : m.embedButton_do && -1 != FWDUVPUtils.indexOfArray(c, m.embedButton_do) ? (c.splice(FWDUVPUtils.indexOfArray(c, m.embedButton_do), 1), m.embedButton_do.setX(-1e3)) : m.volumeButton_do && -1 != FWDUVPUtils.indexOfArray(c, m.volumeButton_do) ? (c.splice(FWDUVPUtils.indexOfArray(c, m.volumeButton_do), 1), m.volumeButton_do.setX(-1e3)) : m.playbackRateButton_do && -1 != FWDUVPUtils.indexOfArray(c, m.playbackRateButton_do) ? (c.splice(FWDUVPUtils.indexOfArray(c, m.playbackRateButton_do), 1), m.playbackRateButton_do.setX(-1e3)) : m.ytbQualityButton_do && -1 != FWDUVPUtils.indexOfArray(c, m.ytbQualityButton_do) ? (c.splice(FWDUVPUtils.indexOfArray(c, m.ytbQualityButton_do), 1), m.ytbQualityButton_do.setX(-1e3)) : m.playlistButton_do && -1 != FWDUVPUtils.indexOfArray(c, m.playlistButton_do) ? (c.splice(FWDUVPUtils.indexOfArray(c, m.playlistButton_do), 1), m.playlistButton_do.setX(-1e3)) : m.infoButton_do && -1 != FWDUVPUtils.indexOfArray(c, m.infoButton_do) ? (c.splice(FWDUVPUtils.indexOfArray(c, m.infoButton_do), 1), m.infoButton_do.setX(-1e3)) : m.categoriesButton_do && -1 != FWDUVPUtils.indexOfArray(c, m.categoriesButton_do) && (c.splice(FWDUVPUtils.indexOfArray(c, m.categoriesButton_do), 1), m.categoriesButton_do.setX(-1e3)), s = c.length;
                            for (_ = 0; _ < s; _++)(e = c[_]) != m.mainScrubber_do && (m.mainScrubberWidth -= e.w + m.spaceBetweenButtons)
                        }
                        m.showNextAndPrevButtonsInController_bl && m.mainScrubberWidth, a && (m.mainScrubberWidth -= 2 * m.timeOffsetLeftWidth), s = c.length;
                        for (_ = 0; _ < s; _++)
                            if (e = c[_], 0 == _) e.setX(m.startSpaceBetweenButtons);
                            else if (e == m.mainScrubber_do) t = c[_ - 1], FWDAnimation.killTweensOf(m.mainScrubber_do), m.mainScrubber_do.setX(t.x + t.w + m.spaceBetweenButtons), m.mainScrubber_do.setY(parseInt((m.stageHeight - m.mainScrubberHeight) / 2)), m.mainScrubber_do.setWidth(m.mainScrubberWidth), m.mainScrubberBkMiddle_do.setWidth(m.mainScrubberWidth - 2 * m.scrubbersBkLeftAndRightWidth), m.mainScrubberBkRight_do.setX(m.mainScrubberWidth - m.scrubbersBkLeftAndRightWidth), m.mainScrubberDragMiddle_do.setWidth(m.mainScrubberWidth - m.scrubbersBkLeftAndRightWidth - m.scrubbersOffsetWidth);
                        else if (e == m.time_do) {
                            t = c[_ - 1], e.setX(t.x + t.w + m.spaceBetweenButtons + m.timeOffsetLeftWidth);
                            var f = 0;
                            m.isLive && (f = 1), e.setY(parseInt((m.stageHeight - e.h) / 2) + f)
                        } else e == m.volumeButton_do && a ? (t = c[_ - 1], e.setX(t.x + t.w + m.spaceBetweenButtons + m.timeOffsetRightWidth)) : (t = c[_ - 1], e.setX(t.x + t.w + m.spaceBetweenButtons));
                        m.isShowed_bl ? m.isMainScrubberOnTop_bl = !1 : (m.isMainScrubberOnTop_bl = !0, m.positionScrollBarOnTopOfTheController())
                    }
                    m.bk_do && (m.bk_do.setWidth(m.stageWidth), m.bk_do.setHeight(m.stageHeight)), m.progressMiddle_do && m.progressMiddle_do.setWidth(Math.max(m.mainScrubberWidth - m.scrubbersBkLeftAndRightWidth - m.scrubbersOffsetWidth, 0)), m.updateMainScrubber(m.percentPlayed), m.updatePreloaderBar(m.percentLoaded), m.mainHolder_do.setWidth(m.stageWidth), m.mainHolder_do.setHeight(m.stageHeight), m.setWidth(m.stageWidth), m.setHeight(m.stageHeight), m.atb && m.atb.resize()
                }
            }
        }, this.positionScrollBarOnTopOfTheController = function() {
            m.mainScrubberWidth = m.stageWidth, m.updatePreloaderBar(m.percentLoaded), m.mainScrubber_do.setWidth(m.mainScrubberWidth), m.mainScrubberBkMiddle_do.setWidth(m.mainScrubberWidth - 2 * m.scrubbersBkLeftAndRightWidth), m.mainScrubberBkRight_do.setX(m.mainScrubberWidth - m.scrubbersBkLeftAndRightWidth), m.mainScrubberDragMiddle_do.setWidth(m.mainScrubberWidth - m.scrubbersBkLeftAndRightWidth - m.scrubbersOffsetWidth);
            var e = 0;
            m.atb && m.atb.isShowed_bl && (e = m.stageHeight), FWDAnimation.killTweensOf(m.mainScrubber_do), m.mainScrubber_do.setX(0), m.mainScrubber_do.setAlpha(1), m.isMainScrubberOnTop_bl || m.isShowed_bl ? (m.atb && m.atb.isShowed_bl && !m.isShowed_bl ? e += m.mainScrubberOffestTop : e = 0, FWDAnimation.killTweensOf(m.mainScrubber_do), m.isShowed_bl ? m.mainScrubber_do.setY(-m.mainScrubberOffestTop - e) : FWDAnimation.to(m.mainScrubber_do, .8, {
                y: -m.mainScrubberOffestTop - e,
                ease: Expo.easeOut
            })) : m.isLive || FWDAnimation.to(m.mainScrubber_do, .8, {
                y: -m.mainScrubberOffestTop - e,
                ease: Expo.easeOut
            }), m.isMainScrubberOnTop_bl = !0
        }, this.setupToolTips = function() {
            FWDUVPToolTip.setPrototype(), m.playPauseToolTip_do = new FWDUVPToolTip(m.playPauseButton_do, p.toopTipBk_str, p.toopTipPointer_str, "play / pause", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.playPauseToolTip_do.screen), m.showControllerWhenVideoIsStopped_bl && (FWDUVPToolTip.setPrototype(), m.prevButtonToolTip_do = new FWDUVPToolTip(m.prevButton_do, p.toopTipBk_str, p.toopTipPointer_str, "previous video", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.prevButtonToolTip_do.screen), FWDUVPToolTip.setPrototype(), m.nextButtonToolTip_do = new FWDUVPToolTip(m.nextButton_do, p.toopTipBk_str, p.toopTipPointer_str, "next video", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.nextButtonToolTip_do.screen)), m.showPlaylistsButtonAndPlaylists_bl && (FWDUVPToolTip.setPrototype(), m.playlistsButtonToolTip_do = new FWDUVPToolTip(m.categoriesButton_do, p.toopTipBk_str, p.toopTipPointer_str, "show playlists", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.playlistsButtonToolTip_do.screen)), m.showPlaylistButtonAndPlaylist_bl && (FWDUVPToolTip.setPrototype(), m.playlistButtonToolTip_do = new FWDUVPToolTip(m.playlistButton_do, p.toopTipBk_str, p.toopTipPointer_str, "show / hide playlist", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.playlistButtonToolTip_do.screen)), m.showEmbedButton_bl && (FWDUVPToolTip.setPrototype(), m.embedButtonToolTip_do = new FWDUVPToolTip(m.embedButton_do, p.toopTipBk_str, p.toopTipPointer_str, "show embed window", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.embedButtonToolTip_do.screen)), m.showShareButton_bl && (FWDUVPToolTip.setPrototype(), m.facebookButtonToolTip_do = new FWDUVPToolTip(m.shareButton_do, p.toopTipBk_str, p.toopTipPointer_str, "share", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.facebookButtonToolTip_do.screen)), p.showChromecastButton_bl && (FWDUVPToolTip.setPrototype(), m.castButtonToolTip_do = new FWDUVPToolTip(m.ccBtn_do, p.toopTipBk_str, p.toopTipPointer_str, "chromecast", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.castButtonToolTip_do.screen)), FWDUVPToolTip.setPrototype(), m.atbButtonToolTip_do = new FWDUVPToolTip(m.atbButton_do, p.toopTipBk_str, p.toopTipPointer_str, "a to b loop", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.atbButtonToolTip_do.screen), m.showSubtitleButton_bl && (FWDUVPToolTip.setPrototype(), m.subtitleButtonToolTip_do = new FWDUVPToolTip(m.subtitleButton_do, p.toopTipBk_str, p.toopTipPointer_str, "show / hide subtitle", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.subtitleButtonToolTip_do.screen)), m.showInfoButton_bl && (FWDUVPToolTip.setPrototype(), m.infoButtonToolTip_do = new FWDUVPToolTip(m.infoButton_do, p.toopTipBk_str, p.toopTipPointer_str, "more info", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.infoButtonToolTip_do.screen)), m.showDownloadVideoButton_bl && (FWDUVPToolTip.setPrototype(), m.downloadButtonToolTip_do = new FWDUVPToolTip(m.downloadButton_do, p.toopTipBk_str, p.toopTipPointer_str, "download video", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.downloadButtonToolTip_do.screen)), m.fullScreenButton_do && (FWDUVPToolTip.setPrototype(), m.fullscreenButtonToolTip_do = new FWDUVPToolTip(m.fullScreenButton_do, p.toopTipBk_str, p.toopTipPointer_str, "fullscreen / normalscreen", m.buttonsToolTipFontColor_str, m.buttonsToolTipHideDelay), document.documentElement.appendChild(m.fullscreenButtonToolTip_do.screen))
        }, this.showToolTip = function(e, t, o) {
            if (m.showButtonsToolTip_bl) {
                var s, i, n = FWDUVPUtils.getViewportSize();
                FWDUVPUtils.getViewportMouseCoordinates(o);
                i = e.screen.offsetWidth < 3 ? (s = parseInt(100 * e.getGlobalX() + e.w / 2 - t.w / 2), parseInt(100 * e.getGlobalY() - t.h - 8)) : (s = parseInt(e.getGlobalX() + e.w / 2 - t.w / 2), parseInt(e.getGlobalY() - t.h - 8));
                var l = 0;
                s < 0 ? (l = s, s = 0) : s + t.w > n.w && (s += -1 * (l = -1 * (n.w - (s + t.w)))), t.positionPointer(l, !1), t.setX(s), t.setY(i), t.show()
            }
        }, this.setupAdsLines = function(e, t, o) {
            if (m.curLinesId != t || m.curLinesCat != o) {
                if (m.line_ar) {
                    for (var s = 0; s < m.line_ar.length; s++) FWDAnimation.killTweensOf(m.line_ar[s]), m.linesHolder_do.removeChild(m.line_ar[s]);
                    m.line_ar = null
                }
                if (m.curLinesId = t, m.curLinesCat = o, e) {
                    if (this.linesHolder_do || (this.linesHolder_do = new FWDUVPDisplayObject("div"), this.linesHolder_do.setOverflow("visible"), this.mainScrubber_do.addChild(this.linesHolder_do)), this.lines_ar = e, this.lines_ar) {
                        var i;
                        this.line_ar = [];
                        for (s = 0; s < this.lines_ar.length; s++)(i = new FWDUVPDisplayObject("div")).getStyle().background = "url('" + p.adLinePat_str + "') repeat-x", i.timeStart = e[s].timeStart, i.setWidth(2), i.setHeight(m.mainScrubberDragLeft_img.height), i.isUsed_bl = !1, i.isShowed_bl = !1, this.lines_ar[s].played_bl && i.setVisible(!1), i.setAlpha(0), this.line_ar[s] = i, this.linesHolder_do.addChild(i)
                    }
                    m.totalDuration = 0
                }
            }
        }, this.hideAdsLines = function() {
            if (m.linesHolder_do && m.linesHolder_do.setX(-5e3), this.line_ar)
                for (var e = 0; e < this.line_ar.length; e++) this.line_ar[e].setAlpha(0), this.line_ar[e].isShowed_bl = !1
        }, this.positionAdsLines = function(e) {
            if (m.linesHolder_do && (e && (m.totalDuration = e), b.isAdd_bl ? this.linesHolder_do.setX(-5e3) : this.linesHolder_do.setX(0), this.line_ar))
                for (var t, o = 0; o < this.line_ar.length; o++)(t = this.line_ar[o]).setX(Math.round(t.timeStart / m.totalDuration * m.mainScrubberWidth) - 1), t.x < 0 && t.setX(0), t.isUsed_bl || 0 == m.totalDuration || t.isShowed_bl || (FWDAnimation.to(t, 1, {
                    alpha: 1,
                    delay: 1.5,
                    ease: Expo.easeOut
                }), t.isShowed_bl = !0)
        }, this.playbackRatesSource_ar = p.defaultPlaybackRate_ar, this.playbackRateButtons_ar = [], this.totalPlaybackRateButtons = 6, this.arePlaybackRateButtonsShowed_bl = !0, this.showPlaybackRateButton_bl || (this.arePlaybackRateButtonsShowed_bl = !1), this.setupPlaybackRateButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.playbackRateButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-watch-later'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), m.playbackRateButton_do = new FWDUVPSimpleButton(p.playbackRateNPath_img, p.playbackRateSPath_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.playbackRateButton_do.setY(parseInt((m.stageHeight - m.playbackRateButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.playbackRateButton_do.buttonHeight && (clearInterval(e), m.playbackRateButton_do.setY(parseInt((m.stageHeight - m.playbackRateButton_do.buttonHeight) / 2)))
            }, 50);
            m.playbackRateButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.playbackRateButtonMouseUpHandler), m.mainHolder_do.addChild(m.playbackRateButton_do), m.playbackRateButton_do.setX(-500), m.disablePlaybackRateButton(), m.setupPlaybackRateButtons()
        }, this.playbackRateButtonMouseUpHandler = function() {
            m.arePlaybackRateButtonsShowed_bl ? m.hidePlaybackRateButtons(!0) : (m.showPlaybackRateButtons(!0), m.hideMainScrubberTop())
        }, this.disablePlaybackRateButton = function() {
            m.playbackRateButton_do && m.playbackRateButton_do.disable()
        }, this.enablePlaybackRateButton = function() {
            m.playbackRateButton_do && m.playbackRateButton_do.enable()
        }, this.removePlaybackRateButton = function() {
            m.playbackRateButton_do && -1 != FWDUVPUtils.indexOfArray(m.buttons_ar, m.playbackRateButton_do) && (m.buttons_ar.splice(FWDUVPUtils.indexOfArray(m.buttons_ar, m.playbackRateButton_do), 1), m.playbackRateButton_do.setX(-300), m.positionButtons())
        }, this.addPlaybackRateButton = function(e) {
            m.playbackRateButton_do && -1 == FWDUVPUtils.indexOfArray(m.buttons_ar, m.playbackRateButton_do) && (m.atbButton_do && -1 != m.getButtonIndex(m.atbButton_do) ? (indexToAdd = m.getButtonIndex(m.atbButton_do), m.buttons_ar.splice(indexToAdd, 0, m.playbackRateButton_do)) : m.infoButton_do && -1 != m.getButtonIndex(m.infoButton_do) ? (indexToAdd = m.getButtonIndex(m.infoButton_do), m.buttons_ar.splice(indexToAdd, 0, m.playbackRateButton_do)) : m.downloadButton_do && -1 != m.getButtonIndex(m.downloadButton_do) ? (indexToAdd = m.getButtonIndex(m.downloadButton_do), m.buttons_ar.splice(indexToAdd, 0, m.playbackRateButton_do)) : m.ccBtn_do && -1 != m.getButtonIndex(m.ccBtn_do) ? (indexToAdd = m.getButtonIndex(m.ccBtn_do), m.buttons_ar.splice(indexToAdd, 0, m.playbackRateButton_do)) : m.fullScreenButton_do ? (indexToAdd = m.getButtonIndex(m.fullScreenButton_do), m.buttons_ar.splice(indexToAdd, 0, m.playbackRateButton_do)) : m.buttons_ar.splice(m.buttons_ar.length, 0, m.playbackRateButton_do), m.updatePlaybackRateButtons(e))
        }, this.updatePlaybackRateButtons = function(e) {
            m.playbackRateButton_do && (setTimeout(function() {
                m.disablePlaybackRateButtons(e)
            }, 65), m.prevplaybackRateIndex = e)
        }, this.setupPlaybackRateButtons = function() {
            var e, t;
            (m.playbackRatesButtonsHolder_do = new FWDUVPDisplayObject("div"), m.playbackRatesButtonsHolder_do.setOverflow("visible"), m.repeatBackground_bl) ? m.playbackRatesButtonsHolder_do.getStyle().background = "url('" + m.controllerBkPath_str + "')": (m.playbackRatesButtonsBackground_do = new FWDUVPDisplayObject("img"), (e = new Image).src = m.controllerBkPath_str, m.playbackRatesButtonsBackground_do.setScreen(e), m.playbackRatesButtonsHolder_do.addChild(m.playbackRatesButtonsBackground_do));
            m.playbackRatesButtonsHolder_do.setX(300), m.playbackRatesButtonsHolder_do.setY(-300), b.videoHolder_do.addChild(m.playbackRatesButtonsHolder_do), (e = new Image).src = m.ytbQualityButtonPointerPath_str, m.playbackRatesPonter_do = new FWDUVPDisplayObject("img"), m.playbackRatesPonter_do.setScreen(e), m.playbackRatesPonter_do.setWidth(m.pointerWidth), m.playbackRatesPonter_do.setHeight(m.pointerHeight), m.playbackRatesButtonsHolder_do.addChild(m.playbackRatesPonter_do), (e = new Image).src = m.youtubeQualityArrowPath_str, m.playbackRateQualityArrow_do = new FWDUVPDisplayObject("img"), m.playbackRateQualityArrow_do.setScreen(e), m.playbackRateQualityArrow_do.setX(7), m.playbackRateQualityArrow_do.setWidth(5), m.playbackRateQualityArrow_do.setHeight(7), m.playbackRatesButtonsHolder_do.addChild(m.playbackRateQualityArrow_do);
            for (var o = 0; o < m.totalPlaybackRateButtons; o++) FWDUVPYTBQButton.setPrototype(), (t = new FWDUVPYTBQButton("no source", m.youtubeQualityButtonNormalColor_str, m.youtubeQualityButtonSelectedColor_str, void 0, o)).addListener(FWDUVPYTBQButton.MOUSE_OVER, m.plbkQualityOver), t.addListener(FWDUVPYTBQButton.MOUSE_OUT, m.plbkQualityOut), t.addListener(FWDUVPYTBQButton.CLICK, m.plbkQualityClick), m.playbackRateButtons_ar[o] = t, m.playbackRatesButtonsHolder_do.addChild(t);
            m.positionAndResizePlaybackRateButtons(m.playbackRatesSource_ar), m.hidePlaybackRateButtons(!1)
        }, this.plbkQualityOver = function(e) {
            m.setPlaybackRateArrowPosition(e.target)
        }, this.plbkQualityOut = function(e) {
            m.setPlaybackRateArrowPosition(void 0)
        }, this.plbkQualityClick = function(e) {
            m.startAtPlaybackRate = e.id, m.disablePlaybackRateButtons(m.startAtPlaybackRate), m.hidePlaybackRateButtons(!0), m.dispatchEvent(s.CHANGE_PLAYBACK_RATES, {
                rate: m.playbackRatesSource_ar[e.id]
            })
        }, this.positionAndResizePlaybackRateButtons = function(e) {
            if (e) {
                var t = e.length;
                if (m.prevplaybackRatesQualityButtonsLength != t) {
                    var o;
                    this.prevplaybackRatesQualityButtonsLength = t;
                    for (var s = 5, i = 0, n = 0, l = 0; l < t; l++) o = m.playbackRateButtons_ar[l], 1 == e[l] ? o.updateText("normal") : o.updateText(e[l]), o.setFinalSize();
                    setTimeout(function() {
                        for (var e = 0; e < t; e++) o = m.playbackRateButtons_ar[e], e < t ? (0 != o.x && o.setX(0), o.w > i && (i = o.w), o.setY(s), s += o.h) : -3e3 != o.x && o.setX(-3e3);
                        for (e = 0; e < t; e++)(o = m.playbackRateButtons_ar[e]).dumy_do.w < i && (o.setWidth(i), o.dumy_do.setWidth(i));
                        n = s + 5, m.playbackRatesPonter_do.setX(parseInt((i - m.playbackRatesPonter_do.w) / 2)), m.playbackRatesPonter_do.setY(n), m.playbackRatesButtonsBackground_do && (m.playbackRatesButtonsBackground_do.setWidth(i), m.playbackRatesButtonsBackground_do.setHeight(n)), m.playbackRatesButtonsHolder_do.setWidth(i), m.playbackRatesButtonsHolder_do.setHeight(n)
                    }, 60)
                }
            }
        }, this.disablePlaybackRateButtons = function(e) {
            if (null != e)
                for (var t = 0; t < m.totalPlaybackRateButtons; t++) btn = m.playbackRateButtons_ar[t], t == e ? (FWDAnimation.killTweensOf(m.playbackRateQualityArrow_do), m.playbackRateQualityArrow_do.setY(btn.y + parseInt((btn.h - m.playbackRateQualityArrow_do.h) / 2) - 1), btn.disable(), m.playbackRateDisabledButton_do = btn) : btn.enable()
        }, this.setPlaybackRateArrowPosition = function(e) {
            var t = 0;
            t = e ? e.y + parseInt((e.h - m.playbackRateQualityArrow_do.h) / 2 - 1) : m.playbackRateDisabledButton_do.y + parseInt((m.playbackRateDisabledButton_do.h - m.playbackRateQualityArrow_do.h) / 2 - 1), FWDAnimation.killTweensOf(m.playbackRateQualityArrow_do), FWDAnimation.to(m.playbackRateQualityArrow_do, .6, {
                y: t,
                delay: .1,
                ease: Expo.easeInOut
            })
        }, this.showPlaybackRateButtons = function(e) {
            if (!m.arePlaybackRateButtonsShowed_bl) {
                m.hideQualityButtons(), m.arePlaybackRateButtonsShowed_bl = !0;
                var t = parseInt(m.playbackRateButton_do.x + parseInt(m.playbackRateButton_do.w - m.playbackRatesButtonsHolder_do.w) / 2),
                    o = parseInt(b.tempVidStageHeight - m.stageHeight - m.playbackRatesButtonsHolder_do.h - 6);
                m.hasPointerEvent_bl ? window.addEventListener("pointerdown", m.hideplaybackRatesButtonsHandler) : (m.isMobile_bl || window.addEventListener("mousedown", m.hideplaybackRatesButtonsHandler), window.addEventListener("touchstart", m.hideplaybackRatesButtonsHandler)), m.playbackRatesButtonsHolder_do.setX(t), e ? FWDAnimation.to(m.playbackRatesButtonsHolder_do, .6, {
                    y: o,
                    ease: Expo.easeInOut
                }) : (FWDAnimation.killTweensOf(m.playbackRatesButtonsHolder_do), m.playbackRatesButtonsHolder_do.setY(o))
            }
        }, this.hidePlaybackRateButtons = function(e) {
            m.arePlaybackRateButtonsShowed_bl && m.playbackRatesButtonsHolder_do && (m.arePlaybackRateButtonsShowed_bl = !1, m.showMainScrubberOnTop(), e ? FWDAnimation.to(m.playbackRatesButtonsHolder_do, .6, {
                y: b.stageHeight,
                ease: Expo.easeInOut
            }) : (FWDAnimation.killTweensOf(m.playbackRatesButtonsHolder_do), m.playbackRatesButtonsHolder_do.setY(b.stageHeight)), m.hasPointerEvent_bl ? window.removeEventListener("pointerdown", m.hideplaybackRatesButtonsHandler) : (m.isMobile_bl || window.removeEventListener("mousedown", m.hideplaybackRatesButtonsHandler), window.removeEventListener("touchstart", m.hideplaybackRatesButtonsHandler)))
        }, this.hideplaybackRatesButtonsHandler = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            FWDUVPUtils.hitTest(m.playbackRateButton_do.screen, t.screenX, t.screenY) || FWDUVPUtils.hitTest(m.playbackRatesButtonsHolder_do.screen, t.screenX, t.screenY) || m.hidePlaybackRateButtons(!0)
        }, m.setIsLive = function(e) {
            (m.isLive = e) ? m.mainScrubber_do.contains(m.live_do) || (m.mainScrubber_do.setAlpha(.2), m.mainHolder_do.addChild(m.live_do), setTimeout(function() {
                m.live_do.setX(4), m.live_do.setY(-m.live_do.getHeight() - 4)
            }, 100), m.disableMainScrubber()): m.mainHolder_do.contains(m.live_do) && (m.mainHolder_do.removeChild(m.live_do), m.mainScrubber_do.setAlpha(1), m.enableMainScrubber())
        }, this.setupMainScrubber = function() {
            m.mainScrubber_do = new FWDUVPDisplayObject("div"), m.mainScrubber_do.setY(parseInt((m.stageHeight - m.mainScrubberHeight) / 2)), m.mainScrubber_do.setHeight(m.mainScrubberHeight), m.mainScrubberBkLeft_do = new FWDUVPDisplayObject("img"), m.mainScrubberBkLeft_do.setScreen(m.mainScrubberBkLeft_img);
            var e = new Image;
            e.src = p.mainScrubberBkRightPath_str, m.mainScrubberBkRight_do = new FWDUVPDisplayObject("img"), m.mainScrubberBkRight_do.setScreen(e), m.mainScrubberBkRight_do.setWidth(m.mainScrubberBkLeft_do.w), m.mainScrubberBkRight_do.setHeight(m.mainScrubberBkLeft_do.h);
            var t = new Image;
            t.src = m.mainScrubberBkMiddlePath_str, m.isMobile_bl ? (m.mainScrubberBkMiddle_do = new FWDUVPDisplayObject("div"), m.mainScrubberBkMiddle_do.getStyle().background = "url('" + m.mainScrubberBkMiddlePath_str + "') repeat-x") : (m.mainScrubberBkMiddle_do = new FWDUVPDisplayObject("img"), m.mainScrubberBkMiddle_do.setScreen(t)), m.mainScrubberBkMiddle_do.setHeight(m.mainScrubberHeight), m.mainScrubberBkMiddle_do.setX(m.scrubbersBkLeftAndRightWidth), m.mainProgress_do = new FWDUVPDisplayObject("div"), m.mainProgress_do.setHeight(m.mainScrubberHeight), m.progressLeft_do = new FWDUVPDisplayObject("img"), m.progressLeft_do.setScreen(m.progress), (t = new Image).src = m.progressMiddlePath_str, m.progressMiddle_do = new FWDUVPDisplayObject("div"), m.progressMiddle_do.getStyle().background = "url('" + m.progressMiddlePath_str + "') repeat-x", m.progressMiddle_do.setHeight(m.mainScrubberHeight), m.progressMiddle_do.setX(m.mainScrubberDragLeftWidth), m.mainScrubberDrag_do = new FWDUVPDisplayObject("div"), m.mainScrubberDrag_do.setHeight(m.mainScrubberHeight), m.useHEXColorsForSkin_bl ? (m.mainScrubberDragLeft_do = new FWDUVPDisplayObject("div"), m.mainScrubberDragLeft_do.setWidth(m.mainScrubberDragLeft_img.width), m.mainScrubberDragLeft_do.setHeight(m.mainScrubberDragLeft_img.height), m.mainScrubberDragLeft_canvas = FWDUVPUtils.getCanvasWithModifiedColor(m.mainScrubberDragLeft_img, m.normalButtonsColor_str).canvas, m.mainScrubberDragLeft_do.screen.appendChild(m.mainScrubberDragLeft_canvas)) : (m.mainScrubberDragLeft_do = new FWDUVPDisplayObject("img"), m.mainScrubberDragLeft_do.setScreen(m.mainScrubberDragLeft_img)), m.mainScrubberMiddleImage = new Image, m.mainScrubberMiddleImage.src = m.mainScrubberDragMiddlePath_str, m.volumeScrubberDragMiddle_do = new FWDUVPDisplayObject("div"), m.useHEXColorsForSkin_bl ? (m.mainScrubberDragMiddle_do = new FWDUVPDisplayObject("div"), m.mainScrubberMiddleImage.onload = function() {
                var e = FWDUVPUtils.getCanvasWithModifiedColor(m.mainScrubberMiddleImage, m.normalButtonsColor_str, !0);
                m.mainSCrubberMiddleCanvas = e.canvas, m.mainSCrubberDragMiddleImageBackground = e.image, m.mainScrubberDragMiddle_do.getStyle().background = "url('" + m.mainSCrubberDragMiddleImageBackground.src + "') repeat-x"
            }) : (m.mainScrubberDragMiddle_do = new FWDUVPDisplayObject("div"), m.mainScrubberDragMiddle_do.getStyle().background = "url('" + m.mainScrubberDragMiddlePath_str + "') repeat-x"), m.mainScrubberDragMiddle_do.setHeight(m.mainScrubberHeight), m.mainScrubberDragMiddle_do.setX(m.mainScrubberDragLeftWidth), m.mainScrubberBarLine_do = new FWDUVPDisplayObject("img"), m.mainScrubberBarLine_do.setScreen(m.mainScrubberLine_img), m.mainScrubberBarLine_do.setAlpha(0), m.mainScrubberBarLine_do.hasTransform3d_bl = !1, m.mainScrubberBarLine_do.hasTransform2d_bl = !1, m.buttons_ar.push(m.mainScrubber_do), m.live_do = new FWDUVPDisplayObject("div"), m.live_do.hasTransform3d_bl = !1, m.live_do.hasTransform2d_bl = !1, m.live_do.setBackfaceVisibility(), m.live_do.getStyle().fontFamily = "Arial", m.live_do.getStyle().fontSize = "12px", m.live_do.getStyle().whiteSpace = "nowrap", m.live_do.getStyle().textAlign = "center", m.live_do.getStyle().padding = "4px", m.live_do.getStyle().paddingLeft = "6px", m.live_do.getStyle().paddingRIght = "6px", m.live_do.getStyle().color = "#FFFFFF", m.live_do.getStyle().fontSmoothing = "antialiased", m.live_do.getStyle().webkitFontSmoothing = "antialiased", m.live_do.getStyle().textRendering = "optimizeLegibility", m.live_do.getStyle().backgroundColor = "rgba(255,0,0,0.8)", m.live_do.setInnerHTML("&#x25C9; LIVE"), m.mainScrubber_do.addChild(m.mainScrubberBkLeft_do), m.mainScrubber_do.addChild(m.mainScrubberBkMiddle_do), m.mainScrubber_do.addChild(m.mainScrubberBkRight_do), m.mainScrubber_do.addChild(m.mainScrubberBarLine_do), m.mainScrubberDrag_do.addChild(m.mainScrubberDragLeft_do), m.mainScrubberDrag_do.addChild(m.mainScrubberDragMiddle_do), m.mainProgress_do.addChild(m.progressLeft_do), m.mainProgress_do.addChild(m.progressMiddle_do), m.mainScrubber_do.addChild(m.mainProgress_do), m.mainScrubber_do.addChild(m.mainScrubberDrag_do), m.mainScrubber_do.addChild(m.mainScrubberBarLine_do), m.mainHolder_do.addChild(m.mainScrubber_do), m.disableVideoScrubber_bl || (m.hasPointerEvent_bl ? (m.mainScrubber_do.screen.addEventListener("pointerover", m.mainScrubberOnOverHandler), m.mainScrubber_do.screen.addEventListener("pointerout", m.mainScrubberOnOutHandler), m.mainScrubber_do.screen.addEventListener("pointerdown", m.mainScrubberOnDownHandler)) : m.screen.addEventListener && (m.isMobile_bl || (m.mainScrubber_do.screen.addEventListener("mouseover", m.mainScrubberOnOverHandler), m.mainScrubber_do.screen.addEventListener("mousemove", m.updateTooltipOnMove), m.mainScrubber_do.screen.addEventListener("mouseout", m.mainScrubberOnOutHandler), m.mainScrubber_do.screen.addEventListener("mousedown", m.mainScrubberOnDownHandler)), m.mainScrubber_do.screen.addEventListener("touchstart", m.mainScrubberOnDownHandler))), m.disableMainScrubber(), m.updateMainScrubber(0), FWDUVPScrubberToolip.setPrototype(), m.ttm = new FWDUVPScrubberToolip(m.mainScrubber_do, p.scrubbersToolTipLabelBackgroundColor, p.scrubbersToolTipLabelFontColor, test), m.addChild(m.ttm)
        }, this.updateToolTip = function(e, t) {
            p.showMainScrubberToolTipLabel_bl && (b.isCasting ? m.ttm.setLabel(FWDUVPUtils.formatTime(Math.round(b.cc.getDuration() * t))) : m.ttm.setLabel(FWDUVPUtils.formatTime(Math.round(b.totalDuration * t))), m.ttm.setX(Math.round(m.mainScrubber_do.x + e - m.ttm.getWidth() / 2) + 1), m.ttm.setY(m.mainScrubber_do.y - m.ttm.h - 2))
        }, this.updateThumbnailsPreview = function(e, t) {
            if (m.thumbnailsPreview_do && b.hasThumbnailsPreview) {
                var o = Math.round(m.mainScrubber_do.x + e - m.thumbnailsPreview_do.getWidth() / 2) + 1;
                o < 1 ? o = 1 : o > m.stageWidth - m.thumbnailsPreview_do.w && (o = m.stageWidth - m.thumbnailsPreview_do.w), m.thumbnailsPreview_do.setLabel(FWDUVPUtils.formatTime(Math.round(b.totalDuration * t)), Math.round(b.totalDuration * t)), m.thumbnailsPreview_do.setX(o), m.thumbnailsPreview_do.setY(m.mainScrubber_do.y - m.thumbnailsPreview_do.h - 2)
            }
        }, this.updateTooltipOnMove = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e).screenX - m.mainScrubber_do.getGlobalX();
            t < 0 ? t = 0 : t > m.mainScrubberWidth - m.scrubbersOffsetWidth && (t = m.mainScrubberWidth - m.scrubbersOffsetWidth);
            var o = t / m.mainScrubberWidth;
            m.updateToolTip(t, o), m.updateThumbnailsPreview(t, o)
        }, m.mainScrubberWMouseMove = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            m.vcX = t.screenX, m.vcY = t.screenY, FWDUVPUtils.hitTest(m.mainScrubber_do.screen, m.vcX, m.vcY) || m.isMainScrubberScrubbing_bl || (window.removeEventListener("mousemove", m.mainScrubberWMouseMove), m.ttm.hide());
            var o = FWDUVPUtils.getViewportMouseCoordinates(e).screenX - m.mainScrubber_do.getGlobalX();
            o < 0 ? o = 0 : o > m.mainScrubberWidth - m.scrubbersOffsetWidth && (o = m.mainScrubberWidth - m.scrubbersOffsetWidth);
            var s = o / m.mainScrubberWidth;
            m.updateThumbnailsPreview(o, s)
        }, this.mainScrubberOnOverHandler = function(e) {
            if (!m.isMainScrubberDisabled_bl) {
                p.showMainScrubberToolTipLabel_bl && !b.hasThumbnailsPreview && m.ttm.show(), m.thumbnailsPreview_do && b.hasThumbnailsPreview && m.thumbnailsPreview_do.show(), m.isMobile_bl || !m.ttm && !m.thumbnailsPreview_do || (window.removeEventListener("mousemove", m.mainScrubberWMouseMove), window.addEventListener("mousemove", m.mainScrubberWMouseMove));
                var t = FWDUVPUtils.getViewportMouseCoordinates(e).screenX - m.mainScrubber_do.getGlobalX();
                t < 0 ? t = 0 : t > m.mainScrubberWidth - m.scrubbersOffsetWidth && (t = m.mainScrubberWidth - m.scrubbersOffsetWidth);
                var o = t / m.mainScrubberWidth;
                m.updateToolTip(t, o), m.updateThumbnailsPreview(t, o)
            }
        }, this.mainScrubberOnOutHandler = function(e) {
            m.isMainScrubberDisabled_bl || m.isMainScrubberScrubbing_bl || (m.ttm && m.ttm.hide(), m.thumbnailsPreview_do && b.hasThumbnailsPreview && m.thumbnailsPreview_do.hide())
        }, this.mainScrubberOnDownHandler = function(e) {
            if (!m.isMainScrubberDisabled_bl && 2 != e.button) {
                b.showDisable(), e.preventDefault && e.preventDefault(), m.isMainScrubberScrubbing_bl = !0;
                var t = FWDUVPUtils.getViewportMouseCoordinates(e).screenX - m.mainScrubber_do.getGlobalX();
                t < 0 ? t = 0 : t > m.mainScrubberWidth - m.scrubbersOffsetWidth && (t = m.mainScrubberWidth - m.scrubbersOffsetWidth);
                var o = t / m.mainScrubberWidth;
                p.showMainScrubberToolTipLabel_bl && !b.hasThumbnailsPreview && m.ttm.show(), m.thumbnailsPreview_do && b.hasThumbnailsPreview && m.thumbnailsPreview_do.show(), m.updateMainScrubber(o), m.updateThumbnailsPreview(t, o), m.dispatchEvent(s.START_TO_SCRUB), m.dispatchEvent(s.SCRUB, {
                    percent: o
                }), m.hasPointerEvent_bl ? (window.addEventListener("pointermove", m.mainScrubberMoveHandler), window.addEventListener("pointerup", m.mainScrubberEndHandler)) : (window.addEventListener("mousemove", m.mainScrubberMoveHandler), window.addEventListener("mouseup", m.mainScrubberEndHandler), window.addEventListener("touchmove", m.mainScrubberMoveHandler), window.addEventListener("touchend", m.mainScrubberEndHandler))
            }
        }, this.mainScrubberMoveHandler = function(e) {
            e.preventDefault && e.preventDefault();
            var t = FWDUVPUtils.getViewportMouseCoordinates(e).screenX - m.mainScrubber_do.getGlobalX();
            t < 0 ? t = 0 : t > m.mainScrubberWidth - m.scrubbersOffsetWidth && (t = m.mainScrubberWidth - m.scrubbersOffsetWidth);
            var o = t / m.mainScrubberWidth;
            m.updateToolTip(t, o), m.updateMainScrubber(o), m.updateThumbnailsPreview(t, o), m.dispatchEvent(s.SCRUB, {
                percent: o
            })
        }, this.mainScrubberEndHandler = function(e) {
            if (b.hideDisable(), e) {
                var t = FWDUVPUtils.getViewportMouseCoordinates(e);
                FWDUVPUtils.hitTest(m.mainScrubber_do.screen, t.screenX, t.screenY) || (m.ttm && m.ttm.hide(), m.thumbnailsPreview_do && b.hasThumbnailsPreview && m.thumbnailsPreview_do.hide())
            }
            m.isMainScrubberScrubbing_bl = !1, m.dispatchEvent(s.STOP_TO_SCRUB), m.hasPointerEvent_bl ? (window.removeEventListener("pointermove", m.mainScrubberMoveHandler), window.removeEventListener("pointerup", m.mainScrubberEndHandler)) : (window.removeEventListener("mousemove", m.mainScrubberMoveHandler), window.removeEventListener("mouseup", m.mainScrubberEndHandler), window.removeEventListener("touchmove", m.mainScrubberMoveHandler), window.removeEventListener("touchend", m.mainScrubberEndHandler))
        }, this.disableMainScrubber = function() {
            m.mainScrubber_do && (m.isMainScrubberDisabled_bl = !0, m.mainScrubber_do.setButtonMode(!1), m.mainScrubberEndHandler(), m.updateMainScrubber(0), m.updatePreloaderBar(0))
        }, this.enableMainScrubber = function() {
            m.mainScrubber_do && !m.isLive && (m.isMainScrubberDisabled_bl = !1, m.disableVideoScrubber_bl || m.mainScrubber_do.setButtonMode(!0))
        }, this.updateMainScrubber = function(e) {
            if (m.mainScrubber_do) {
                m.isLive && (e = 0);
                var t = parseInt(e * m.mainScrubberWidth);
                isNaN(t) || null == t || (t < 0 && (t = 0), m.percentPlayed = e, !FWDUVPlayer.hasHTML5Video && t >= m.mainProgress_do.w && (t = m.mainProgress_do.w), t < 1 && m.isMainScrubberLineVisible_bl ? (m.isMainScrubberLineVisible_bl = !1, FWDAnimation.to(m.mainScrubberBarLine_do, .5, {
                    alpha: 0
                })) : 1 < t && !m.isMainScrubberLineVisible_bl && (m.isMainScrubberLineVisible_bl = !0, FWDAnimation.to(m.mainScrubberBarLine_do, .5, {
                    alpha: 1
                })), m.mainScrubberDrag_do.setWidth(t), t > m.mainScrubberWidth - m.scrubbersOffsetWidth && (t = m.mainScrubberWidth - m.scrubbersOffsetWidth), t < 0 && (t = 0), FWDAnimation.to(m.mainScrubberBarLine_do, .8, {
                    x: t + 1,
                    ease: Expo.easeOut
                }))
            }
        }, this.updatePreloaderBar = function(e) {
            if (m.mainProgress_do) {
                m.isLive && (e = 0), m.percentLoaded = e;
                var t = parseInt(m.percentLoaded * m.mainScrubberWidth);
                isNaN(t) || null == t || (t < 0 && (t = 0), .98 <= m.percentLoaded ? (m.percentLoaded = 1, m.mainProgress_do.setY(-30)) : 0 != m.mainProgress_do.y && 1 != m.percentLoaded && m.mainProgress_do.setY(0), t > m.mainScrubberWidth - m.scrubbersOffsetWidth && (t = m.mainScrubberWidth - m.scrubbersOffsetWidth), t < 0 && (t = 0), m.mainProgress_do.setWidth(t))
            }
        }, this.setupPrevButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.prevButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-FF-left'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), m.prevButton_do = new FWDUVPSimpleButton(p.prev2N_img, p.prevSPath_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.prevButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, m.prevButtonShowTooltipHandler), m.prevButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.prevButtonOnMouseUpHandler), m.prevButton_do.setY(parseInt((m.stageHeight - m.prevButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.prevButton_do.buttonHeight && (clearInterval(e), m.prevButton_do.setY(parseInt((m.stageHeight - m.prevButton_do.buttonHeight) / 2)))
            }, 50);
            m.buttons_ar.push(m.prevButton_do), m.mainHolder_do.addChild(m.prevButton_do)
        }, this.prevButtonShowTooltipHandler = function(e) {
            m.showToolTip(m.prevButton_do, m.prevButtonToolTip_do, e.e)
        }, this.prevButtonOnMouseUpHandler = function() {
            m.dispatchEvent(FWDUVPPlaylist.PLAY_PREV_VIDEO)
        }, this.setupNextButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.nextButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-FF-right'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), m.nextButton_do = new FWDUVPSimpleButton(p.next2N_img, p.nextSPath_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.nextButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, m.nextButtonShowTooltipHandler), m.nextButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.nextButtonOnMouseUpHandler), m.nextButton_do.setY(parseInt((m.stageHeight - m.nextButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.nextButton_do.buttonHeight && (clearInterval(e), m.nextButton_do.setY(parseInt((m.stageHeight - m.nextButton_do.buttonHeight) / 2)))
            }, 50);
            m.buttons_ar.push(m.nextButton_do), m.mainHolder_do.addChild(m.nextButton_do)
        }, this.nextButtonShowTooltipHandler = function(e) {
            m.showToolTip(m.nextButton_do, m.nextButtonToolTip_do, e.e)
        }, this.nextButtonOnMouseUpHandler = function() {
            m.dispatchEvent(FWDUVPPlaylist.PLAY_NEXT_VIDEO)
        }, this.setupPlayPauseButton = function() {
            m.useVectorIcons_bl ? (FWDUVPComplexButton.setPrototype(), m.playPauseButton_do = new FWDUVPComplexButton(void 0, void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-play'></span>", "<span class='uvpicon icon-pause'></span>", "UVPMainButtonsNormalState play", "UVPMainButtonsSelectedState play")) : (FWDUVPComplexButton.setPrototype(), m.playPauseButton_do = new FWDUVPComplexButton(m.playN_img, p.playSPath_str, m.pauseN_img, p.pauseSPath_str, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.buttons_ar.push(m.playPauseButton_do), m.playPauseButton_do.setY(parseInt((m.stageHeight - m.playPauseButton_do.buttonHeight) / 2));
            var e = setInterval(function() {
                0 < m.playPauseButton_do.buttonHeight && (clearInterval(e), m.playPauseButton_do.setY(parseInt((m.stageHeight - m.playPauseButton_do.buttonHeight) / 2)))
            }, 50);
            m.playPauseButton_do.addListener(FWDUVPComplexButton.SHOW_TOOLTIP, m.playButtonShowTooltipHandler), m.playPauseButton_do.addListener(FWDUVPComplexButton.MOUSE_UP, m.playButtonMouseUpHandler), m.mainHolder_do.addChild(m.playPauseButton_do)
        }, this.playButtonShowTooltipHandler = function(e) {
            m.showToolTip(m.playPauseButton_do, m.playPauseToolTip_do, e.e)
        }, this.showPlayButton = function() {
            m.playPauseButton_do && m.playPauseButton_do.setButtonState(1)
        }, this.showPauseButton = function() {
            m.playPauseButton_do && m.playPauseButton_do.setButtonState(0)
        }, this.playButtonMouseUpHandler = function() {
            0 == m.playPauseButton_do.currentState ? m.dispatchEvent(s.PAUSE) : m.dispatchEvent(s.PLAY)
        }, this.disablePlayButton = function() {
            m.playPauseButton_do.disable(), m.playPauseButton_do.setNormalState(), m.showPlayButton()
        }, this.enablePlayButton = function() {
            m.playPauseButton_do.enable()
        }, this.setupCategoriesButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.categoriesButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-playlist'></span>", void 0, "UVPMainButtonsNormalState cats", "UVPMainButtonsSelectedState cats")) : (FWDUVPSimpleButton.setPrototype(), m.categoriesButton_do = new FWDUVPSimpleButton(m.categoriesN_img, p.categoriesSPath_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.categoriesButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, m.categoriesButtonShowTooltipHandler), m.categoriesButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.categoriesButtonOnMouseUpHandler), m.categoriesButton_do.setY(parseInt((m.stageHeight - m.categoriesButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.categoriesButton_do.buttonHeight && (clearInterval(e), m.categoriesButton_do.setY(parseInt((m.stageHeight - m.categoriesButton_do.buttonHeight) / 2)))
            }, 50);
            m.buttons_ar.push(m.categoriesButton_do), m.mainHolder_do.addChild(m.categoriesButton_do)
        }, this.categoriesButtonShowTooltipHandler = function(e) {
            m.showToolTip(m.categoriesButton_do, m.playlistsButtonToolTip_do, e.e)
        }, this.categoriesButtonOnMouseUpHandler = function() {
            m.dispatchEvent(s.SHOW_CATEGORIES)
        }, this.setCategoriesButtonState = function(e) {
            m.categoriesButton_do && ("selected" == e ? m.categoriesButton_do.setSelected() : "unselected" == e && m.categoriesButton_do.setUnselected())
        }, this.setupPlaylistButton = function() {
            m.useVectorIcons_bl ? (FWDUVPComplexButton.setPrototype(), m.playlistButton_do = new FWDUVPComplexButton(void 0, void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-playlist-sidebar'></span>", "<span class='uvpicon icon-playlist-close-sidebar'></span>", "UVPMainButtonsNormalState playlist", "UVPMainButtonsSelectedState playlist")) : (FWDUVPComplexButton.setPrototype(), m.playlistButton_do = new FWDUVPComplexButton(m.hidePlaylistN_img, p.hidePlaylistSPath_str, m.showPlaylistN_img, p.showPlaylistSPath_str, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.buttons_ar.push(m.playlistButton_do), m.playlistButton_do.setY(parseInt((m.stageHeight - m.playlistButton_do.buttonHeight) / 2));
            var e = setInterval(function() {
                0 < m.playlistButton_do.buttonHeight && (clearInterval(e), m.playlistButton_do.setY(parseInt((m.stageHeight - m.playlistButton_do.buttonHeight) / 2)))
            }, 50);
            m.playlistButton_do.addListener(FWDUVPComplexButton.SHOW_TOOLTIP, m.playlistButtonShowToolTipHandler), m.playlistButton_do.addListener(FWDUVPComplexButton.MOUSE_UP, m.playlistButtonMouseUpHandler), m.showPlaylistByDefault_bl || m.playlistButton_do.setButtonState(0), m.mainHolder_do.addChild(m.playlistButton_do)
        }, this.playlistButtonShowToolTipHandler = function(e) {
            m.showToolTip(m.playlistButton_do, m.playlistButtonToolTip_do, e.e)
        }, this.showShowPlaylistButton = function() {
            m.playlistButton_do && m.playlistButton_do.setButtonState(1)
        }, this.showHidePlaylistButton = function() {
            m.playlistButton_do && m.playlistButton_do.setButtonState(0)
        }, this.playlistButtonMouseUpHandler = function() {
            1 == m.playlistButton_do.currentState ? m.dispatchEvent(s.SHOW_PLAYLIST) : m.dispatchEvent(s.HIDE_PLAYLIST), m.playlistButton_do.setNormalState(!0), m.playlistButtonToolTip_do && m.playlistButtonToolTip_do.hide()
        }, this.disablePlaylistButton = function() {
            m.playlistButton_do && (m.playlistButton_do.disable(), m.playlistButton_do.setAlpha(.4))
        }, this.enablePlaylistButton = function() {
            m.playlistButton_do && (m.playlistButton_do.enable(), m.playlistButton_do.setAlpha(1))
        }, this.setupEmbedButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.embedButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-embed'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), m.embedButton_do = new FWDUVPSimpleButton(m.embedN_img, p.embedPathS_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.embedButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, m.embedButtonShowToolTipHandler), m.embedButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.embedButtonOnMouseUpHandler), m.embedButton_do.setY(parseInt((m.stageHeight - m.embedButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.embedButton_do.buttonHeight && (clearInterval(e), m.embedButton_do.setY(parseInt((m.stageHeight - m.embedButton_do.buttonHeight) / 2)))
            }, 50);
            m.buttons_ar.push(m.embedButton_do), m.mainHolder_do.addChild(m.embedButton_do)
        }, this.embedButtonShowToolTipHandler = function(e) {
            m.showToolTip(m.embedButton_do, m.embedButtonToolTip_do, e.e)
        }, this.embedButtonOnMouseUpHandler = function() {
            m.dispatchEvent(s.SHOW_EMBED_WINDOW), m.embedButtonToolTip_do && m.embedButtonToolTip_do.hide()
        }, this.setupYtbButtons = function() {
            var e, t;
            (m.ytbButtonsHolder_do = new FWDUVPDisplayObject("div"), m.ytbButtonsHolder_do.setOverflow("visible"), m.repeatBackground_bl) ? m.ytbButtonsHolder_do.getStyle().background = "url('" + m.controllerBkPath_str + "')": (m.ytbButtonBackground_do = new FWDUVPDisplayObject("img"), (e = new Image).src = m.controllerBkPath_str, m.ytbButtonBackground_do.setScreen(e), m.ytbButtonsHolder_do.addChild(m.ytbButtonBackground_do));
            m.ytbButtonsHolder_do.setX(300), m.ytbButtonsHolder_do.setY(-300), b.videoHolder_do.addChild(m.ytbButtonsHolder_do, 0), (e = new Image).src = m.ytbQualityButtonPointerPath_str, m.pointer_do = new FWDUVPDisplayObject("img"), m.pointer_do.setScreen(e), m.pointer_do.setWidth(m.pointerWidth), m.pointer_do.setHeight(m.pointerHeight), m.ytbButtonsHolder_do.addChild(m.pointer_do), (e = new Image).src = m.youtubeQualityArrowPath_str, m.ytbQualityArrow_do = new FWDUVPDisplayObject("img"), m.ytbQualityArrow_do.setScreen(e), m.ytbQualityArrow_do.setX(7), m.ytbQualityArrow_do.setWidth(5), m.ytbQualityArrow_do.setHeight(7), m.ytbButtonsHolder_do.addChild(m.ytbQualityArrow_do);
            for (var o = 0; o < m.totalYtbButtons; o++) FWDUVPYTBQButton.setPrototype(), (t = new FWDUVPYTBQButton(m.ytbQuality_ar[o], m.youtubeQualityButtonNormalColor_str, m.youtubeQualityButtonSelectedColor_str, p.hdPath_str, o)).addListener(FWDUVPYTBQButton.MOUSE_OVER, m.ytbQualityOver), t.addListener(FWDUVPYTBQButton.MOUSE_OUT, m.ytbQualityOut), t.addListener(FWDUVPYTBQButton.CLICK, m.ytbQualityClick), m.ytbButtons_ar[o] = t, m.ytbButtonsHolder_do.addChild(t);
            m.hideQualityButtons(!1)
        }, this.ytbQualityOver = function(e) {
            m.setYtbQualityArrowPosition(e.target)
        }, this.ytbQualityOut = function(e) {
            m.setYtbQualityArrowPosition(void 0)
        }, this.ytbQualityClick = function(e) {
            m.hideQualityButtons(!0), m.dispatchEvent(s.CHANGE_YOUTUBE_QUALITY, {
                quality: e.target.label_str,
                id: e.id
            })
        }, this.positionAndResizeYtbQualityButtons = function(e) {
            if (e) {
                var t = e.length;
                if (m.prevYtbQualityButtonsLength != t) {
                    var o;
                    this.prevYtbQualityButtonsLength = t;
                    for (var s = 5, i = 0, n = 0, l = 0; l < t; l++)(o = m.ytbButtons_ar[l]) && (o.updateText(e[l]), o.setFinalSize());
                    setTimeout(function() {
                        for (var e = 0; e < m.totalYtbButtons; e++) o = m.ytbButtons_ar[e], e < t ? (0 != o.x && o.setX(0), o.w > i && (i = o.w), o.setY(s), s += o.h) : -3e3 != o.x && o.setX(-3e3);
                        for (e = 0; e < m.totalYtbButtons; e++)(o = m.ytbButtons_ar[e]).dumy_do.w < i && (o.setWidth(i), o.dumy_do.setWidth(i));
                        n = s + 5, m.pointer_do.setX(parseInt((i - m.pointer_do.w) / 2)), m.pointer_do.setY(n), m.ytbButtonBackground_do && (m.ytbButtonBackground_do.setWidth(i), m.ytbButtonBackground_do.setHeight(n)), m.ytbButtonsHolder_do.setWidth(i), m.ytbButtonsHolder_do.setHeight(n)
                    }, 70)
                }
            }
        }, this.disableQualityButtons = function(e) {
            "highres" == e || "hd1080" == e || "hd720" == e || "hd1440" == e || "hd2160" == e ? m.ytbQualityButton_do.showDisabledState() : m.ytbQualityButton_do.hideDisabledState();
            for (var t = 0; t < m.totalYtbButtons; t++) btn = m.ytbButtons_ar[t], btn.label_str == e ? (FWDAnimation.killTweensOf(m.ytbQualityArrow_do), 0 != btn.y && (m.ytbQualityArrow_do.setY(btn.y + Math.round((btn.h - m.ytbQualityArrow_do.h) / 2)), m.ytbDisabledButton_do = btn), btn.disable()) : btn.enable()
        }, this.setYtbQualityArrowPosition = function(e) {
            var t = 0;
            t = e ? e.y + parseInt((e.h - m.ytbQualityArrow_do.h) / 2) : m.ytbDisabledButton_do.y + parseInt((m.ytbDisabledButton_do.h - m.ytbQualityArrow_do.h) / 2), FWDAnimation.killTweensOf(m.ytbQualityArrow_do), FWDAnimation.to(m.ytbQualityArrow_do, .6, {
                y: t,
                delay: .1,
                ease: Expo.easeInOut
            })
        }, this.showQualityButtons = function(e) {
            if (!m.areYtbQualityButtonsShowed_bl && m.showYoutubeQualityButton_bl) {
                m.hideSubtitleButtons(), m.hideMainScrubberTop(), m.areYtbQualityButtonsShowed_bl = !0;
                var t = parseInt(m.ytbQualityButton_do.x + parseInt(m.ytbQualityButton_do.w - m.ytbButtonsHolder_do.w) / 2),
                    o = parseInt(b.tempVidStageHeight - m.stageHeight - m.ytbButtonsHolder_do.h - 6);
                window.hasPointerEvent_bl ? window.addEventListener("pointerdown", m.hideQualityButtonsHandler) : (m.isMobile_bl || window.addEventListener("mousedown", m.hideQualityButtonsHandler), window.addEventListener("touchstart", m.hideQualityButtonsHandler)), m.ytbButtonsHolder_do.setX(t), e ? FWDAnimation.to(m.ytbButtonsHolder_do, .6, {
                    y: o,
                    ease: Expo.easeInOut
                }) : (FWDAnimation.killTweensOf(m.ytbButtonsHolder_do), m.ytbButtonsHolder_do.setY(o))
            }
        }, this.hideQualityButtons = function(e) {
            m.areYtbQualityButtonsShowed_bl && m.showYoutubeQualityButton_bl && (m.hideSubtitleButtons(), m.areYtbQualityButtonsShowed_bl = !1, e ? FWDAnimation.to(m.ytbButtonsHolder_do, .6, {
                y: b.stageHeight,
                ease: Expo.easeInOut
            }) : (FWDAnimation.killTweensOf(m.ytbButtonsHolder_do), m.ytbButtonsHolder_do.setY(b.stageHeight)), window.hasPointerEvent_bl ? window.removeEventListener("pointerdown", m.hideQualityButtonsHandler) : (m.isMobile_bl || window.removeEventListener("mousedown", m.hideQualityButtonsHandler), window.removeEventListener("touchstart", m.hideQualityButtonsHandler)))
        }, this.showSubtitleButton_bl, this.subtitlesSource_ar = p.subtitles_ar, this.subtitleButtons_ar = [], this.totalSubttleButtons = 10, this.setupSubtitleButton = function() {
            m.useVectorIcons_bl ? (FWDUVPComplexButton.setPrototype(), m.subtitleButton_do = new FWDUVPComplexButton(void 0, void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-CC'></span>", "<span class='uvpicon icon-CC-off'></span>", "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPComplexButton.setPrototype(), m.subtitleButton_do = new FWDUVPComplexButton(p.showSubtitleNPath_img, p.showSubtitleSPath_str, p.hideSubtitleNPath_img, p.hideSubtitleSPath_str, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str));
            var e = setInterval(function() {
                0 < m.subtitleButton_do.buttonHeight && (clearInterval(e), m.subtitleButton_do.setY(parseInt((m.stageHeight - m.subtitleButton_do.buttonHeight) / 2)))
            }, 50);
            m.buttons_ar.push(m.subtitleButton_do), m.subtitleButton_do.setY(parseInt((m.stageHeight - m.subtitleButton_do.h) / 2)), m.subtitleButton_do.addListener(FWDUVPComplexButton.MOUSE_UP, m.subtitleButtonMouseUpHandler), m.mainHolder_do.addChild(m.subtitleButton_do), m.setupSubtitleButtons(), -1 != location.protocol.indexOf("file:") && m.disableSubtitleButton(), b.subtitle_do.showSubtitileByDefault_bl && m.subtitleButton_do.setButtonState(0)
        }, this.subtitleButtonMouseUpHandler = function() {
            m.areSubtitleButtonsShowed_bl ? m.hideSubtitleButtons(!0) : m.showSubtitleButtons(!0)
        }, this.disableSubtitleButton = function() {
            m.subtitleButton_do && m.subtitleButton_do.disable()
        }, this.enableSubtitleButton = function() {
            m.subtitleButton_do && m.subtitleButton_do.enable()
        }, this.updateSubtitleButtons = function(e, t) {
            m.subtitleButton_do && (m.subtitlesSource_ar = e, m.positionAndResizeSubtitleButtons(e), setTimeout(function() {
                t = m.subtitlesSource_ar.length - 1 - t, m.disableSubtitleButtons(t)
            }, 65), m.prevSubtitleIndex = t)
        }, this.setupSubtitleButtons = function() {
            var e, t;
            (m.subtitlesButtonsHolder_do = new FWDUVPDisplayObject("div"), m.subtitlesButtonsHolder_do.setOverflow("visible"), m.repeatBackground_bl) ? m.subtitlesButtonsHolder_do.getStyle().background = "url('" + m.controllerBkPath_str + "')": (m.subtitlesButtonsBackground_do = new FWDUVPDisplayObject("img"), (e = new Image).src = m.controllerBkPath_str, m.subtitlesButtonsBackground_do.setScreen(e), m.subtitlesButtonsHolder_do.addChild(m.subtitlesButtonsBackground_do));
            m.subtitlesButtonsHolder_do.setX(300), m.subtitlesButtonsHolder_do.setY(-300), b.videoHolder_do.addChild(m.subtitlesButtonsHolder_do, 0), (e = new Image).src = m.ytbQualityButtonPointerPath_str, m.subtitlesPonter_do = new FWDUVPDisplayObject("img"), m.subtitlesPonter_do.setScreen(e), m.subtitlesPonter_do.setWidth(m.pointerWidth), m.subtitlesPonter_do.setHeight(m.pointerHeight), m.subtitlesButtonsHolder_do.addChild(m.subtitlesPonter_do), (e = new Image).src = m.youtubeQualityArrowPath_str, m.subtitleQualityArrow_do = new FWDUVPDisplayObject("img"), m.subtitleQualityArrow_do.setScreen(e), m.subtitleQualityArrow_do.setX(7), m.subtitleQualityArrow_do.setWidth(5), m.subtitleQualityArrow_do.setHeight(7), m.subtitlesButtonsHolder_do.addChild(m.subtitleQualityArrow_do);
            for (var o = 0; o < m.totalSubttleButtons; o++) FWDUVPYTBQButton.setPrototype(), (t = new FWDUVPYTBQButton("no source", m.youtubeQualityButtonNormalColor_str, m.youtubeQualityButtonSelectedColor_str, p.hdPath_str, o)).addListener(FWDUVPYTBQButton.MOUSE_OVER, m.sbtQualityOver), t.addListener(FWDUVPYTBQButton.MOUSE_OUT, m.sbtQualityOut), t.addListener(FWDUVPYTBQButton.CLICK, m.sbtQualityClick), m.subtitleButtons_ar[o] = t, m.subtitlesButtonsHolder_do.addChild(t);
            m.hideSubtitleButtons(!1)
        }, this.sbtQualityOver = function(e) {
            m.setSubtitleArrowPosition(e.target)
        }, this.sbtQualityOut = function(e) {
            m.setSubtitleArrowPosition(void 0)
        }, this.sbtQualityClick = function(e) {
            m.startAtSubtitle = e.id, m.disableSubtitleButtons(m.startAtSubtitle), m.hideSubtitleButtons(!0), m.dispatchEvent(s.CHANGE_SUBTITLE, {
                id: m.subtitlesSource_ar.length - 1 - e.id
            })
        }, this.positionAndResizeSubtitleButtons = function(e) {
            if (e) {
                var t = e.length;
                if (m.prevSubtitlesQualityButtonsLength != t) {
                    var o;
                    this.prevSubtitlesQualityButtonsLength = t;
                    for (var s = 5, i = 0, n = 0, l = 0; l < t; l++)(o = m.subtitleButtons_ar[l]).updateText(e[l].label), o.setFinalSize();
                    setTimeout(function() {
                        for (var e = 0; e < m.totalSubttleButtons; e++) o = m.subtitleButtons_ar[e], e < t ? (0 != o.x && o.setX(0), o.w > i && (i = o.w), o.setY(s), s += o.h) : -3e3 != o.x && o.setX(-3e3);
                        for (e = 0; e < m.totalSubttleButtons; e++)(o = m.subtitleButtons_ar[e]).dumy_do.w < i && (o.setWidth(i), o.dumy_do.setWidth(i));
                        n = s + 5, m.subtitlesPonter_do.setX(parseInt((i - m.subtitlesPonter_do.w) / 2)), m.subtitlesPonter_do.setY(n), m.subtitlesButtonsBackground_do && (m.subtitlesButtonsBackground_do.setWidth(i), m.subtitlesButtonsBackground_do.setHeight(n)), m.subtitlesButtonsHolder_do.setWidth(i), m.subtitlesButtonsHolder_do.setHeight(n)
                    }, 60)
                }
            }
        }, this.disableSubtitleButtons = function(e) {
            for (var t = 0; t < m.totalSubttleButtons; t++) btn = m.subtitleButtons_ar[t], t == e ? (FWDAnimation.killTweensOf(m.subtitleQualityArrow_do), m.subtitleQualityArrow_do.setY(btn.y + parseInt((btn.h - m.subtitleQualityArrow_do.h) / 2) + 1), btn.disable(), m.subtitleDisabledButton_do = btn) : btn.enable();
            m.subtitlesSource_ar.length - 1 - e == 0 ? m.subtitleButton_do.setButtonState(0) : m.subtitleButton_do.setButtonState(1)
        }, this.setSubtitleArrowPosition = function(e) {
            var t = 0;
            t = e ? e.y + parseInt((e.h - m.subtitleQualityArrow_do.h) / 2) : m.subtitleDisabledButton_do.y + parseInt((m.subtitleDisabledButton_do.h - m.subtitleQualityArrow_do.h) / 2), FWDAnimation.killTweensOf(m.subtitleQualityArrow_do), FWDAnimation.to(m.subtitleQualityArrow_do, .6, {
                y: t,
                delay: .1,
                ease: Expo.easeInOut
            })
        }, this.showSubtitleButtons = function(e) {
            if (!m.areSubtitleButtonsShowed_bl) {
                m.hideQualityButtons(), m.hideMainScrubberTop(), m.areSubtitleButtonsShowed_bl = !0;
                var t = parseInt(m.subtitleButton_do.x + parseInt(m.subtitleButton_do.w - m.subtitlesButtonsHolder_do.w) / 2),
                    o = parseInt(b.tempVidStageHeight - m.stageHeight - m.subtitlesButtonsHolder_do.h - 6);
                m.hasPointerEvent_bl ? window.addEventListener("pointerdown", m.hideSubtitlesButtonsHandler) : (m.isMobile_bl || window.addEventListener("mousedown", m.hideSubtitlesButtonsHandler), window.addEventListener("touchstart", m.hideSubtitlesButtonsHandler)), m.subtitlesButtonsHolder_do.setX(t), e ? FWDAnimation.to(m.subtitlesButtonsHolder_do, .6, {
                    y: o,
                    ease: Expo.easeInOut
                }) : (FWDAnimation.killTweensOf(m.subtitlesButtonsHolder_do), m.subtitlesButtonsHolder_do.setY(o))
            }
        }, this.hideSubtitleButtons = function(e) {
            m.areSubtitleButtonsShowed_bl && m.subtitlesButtonsHolder_do && (m.areSubtitleButtonsShowed_bl = !1, e ? FWDAnimation.to(m.subtitlesButtonsHolder_do, .6, {
                y: b.stageHeight,
                ease: Expo.easeInOut
            }) : (FWDAnimation.killTweensOf(m.subtitlesButtonsHolder_do), m.subtitlesButtonsHolder_do.setY(b.stageHeight)), m.hasPointerEvent_bl ? window.removeEventListener("pointerdown", m.hideSubtitlesButtonsHandler) : (m.isMobile_bl || window.removeEventListener("mousedown", m.hideSubtitlesButtonsHandler), window.removeEventListener("touchstart", m.hideSubtitlesButtonsHandler)), m.showMainScrubberOnTop())
        }, this.hideSubtitlesButtonsHandler = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            FWDUVPUtils.hitTest(m.subtitleButton_do.screen, t.screenX, t.screenY) || FWDUVPUtils.hitTest(m.subtitlesButtonsHolder_do.screen, t.screenX, t.screenY) || m.hideSubtitleButtons(!0)
        }, this.setupYoutubeQualityButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.ytbQualityButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-settings'></span>", !0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), m.ytbQualityButton_do = new FWDUVPSimpleButton(m.ytbQualityN_img, p.ytbQualitySPath_str, p.ytbQualityDPath_str, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.ytbQualityButton_do.setX(-300), m.ytbQualityButton_do.setY(parseInt((m.stageHeight - m.ytbQualityButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.ytbQualityButton_do.buttonHeight && (clearInterval(e), m.ytbQualityButton_do.setY(parseInt((m.stageHeight - m.ytbQualityButton_do.buttonHeight) / 2)))
            }, 50);
            m.ytbQualityButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.ytbQualityMouseUpHandler), m.mainHolder_do.addChild(m.ytbQualityButton_do)
        }, this.ytbQualityMouseUpHandler = function() {
            m.areYtbQualityButtonsShowed_bl ? (m.hideQualityButtons(!0), m.isMainScrubberOnTop_bl && (m.mainScrubber_do.setX(0), FWDAnimation.to(m.mainScrubber_do, .6, {
                alpha: 1
            }))) : m.showQualityButtons(!0)
        }, this.hideQualityButtonsHandler = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            FWDUVPUtils.hitTest(m.ytbQualityButton_do.screen, t.screenX, t.screenY) || FWDUVPUtils.hitTest(m.ytbButtonsHolder_do.screen, t.screenX, t.screenY) || (m.hideQualityButtons(!0), m.showMainScrubberOnTop())
        }, this.addYtbQualityButton = function() {
            !m.hasYtbButton_bl && m.showYoutubeQualityButton_bl && (m.hasYtbButton_bl = !0, m.subtitleButton_do && -1 != m.getButtonIndex(m.subtitleButton_do) ? (indexToAdd = m.getButtonIndex(m.subtitleButton_do), m.buttons_ar.splice(indexToAdd, 0, m.ytbQualityButton_do)) : m.playbackRateButton_do && -1 != m.getButtonIndex(m.playbackRateButton_do) ? (indexToAdd = m.getButtonIndex(m.playbackRateButton_do), m.buttons_ar.splice(indexToAdd, 0, m.ytbQualityButton_do)) : m.atbButton_do && -1 != m.getButtonIndex(m.atbButton_do) ? (indexToAdd = m.getButtonIndex(m.atbButton_do), m.buttons_ar.splice(indexToAdd, 0, m.ytbQualityButton_do)) : m.infoButton_do && -1 != m.getButtonIndex(m.infoButton_do) ? (indexToAdd = m.getButtonIndex(m.infoButton_do), m.buttons_ar.splice(indexToAdd, 0, m.ytbQualityButton_do)) : m.downloadButton_do && -1 != m.getButtonIndex(m.downloadButton_do) ? (indexToAdd = m.getButtonIndex(m.ytbQualityButton_do), m.buttons_ar.splice(indexToAdd, 0, m.ytbQualityButton_do)) : m.ccBtn_do && -1 != m.getButtonIndex(m.ccBtn_do) ? (indexToAdd = m.getButtonIndex(m.ccBtn_do), m.buttons_ar.splice(indexToAdd, 0, m.ytbQualityButton_do)) : m.fullScreenButton_do ? (indexToAdd = m.getButtonIndex(m.fullScreenButton_do), m.buttons_ar.splice(indexToAdd, 0, m.ytbQualityButton_do)) : m.buttons_ar.splice(m.buttons_ar.length, 0, m.ytbQualityButton_do), m.ytbQualityButton_do.disable(), m.ytbQualityButton_do.rotation = 0, m.ytbQualityButton_do.setRotation(m.ytbQualityButton_do.rotation), m.ytbQualityButton_do.hideDisabledState(), m.hideQualityButtons(!1), m.positionButtons())
        }, this.removeYtbQualityButton = function() {
            m.hasYtbButton_bl && m.showYoutubeQualityButton_bl && (m.hasYtbButton_bl = !1, m.buttons_ar.splice(FWDUVPUtils.indexOfArray(m.buttons_ar, m.ytbQualityButton_do), 1), m.ytbQualityButton_do.setX(-300), m.ytbQualityButton_do.hideDisabledState(), m.hideQualityButtons(!1), m.positionButtons())
        }, this.updateQuality = function(e, t) {
            m.hasYtbButton_bl && m.showYoutubeQualityButton_bl && (m.positionAndResizeYtbQualityButtons(e), setTimeout(function() {
                m.disableQualityButtons(t)
            }, 300))
        }, this.setupInfoButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.infoButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-info'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), m.infoButton_do = new FWDUVPSimpleButton(m.infoN_img, p.infoSPath_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str));
            var e = setInterval(function() {
                0 < m.infoButton_do.buttonHeight && (clearInterval(e), m.infoButton_do.setY(parseInt((m.stageHeight - m.infoButton_do.buttonHeight) / 2)))
            }, 50);
            m.infoButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, m.infoButtonShowToolTipHandler), m.infoButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.infoButtonOnMouseUpHandler), m.infoButton_do.setX(-300), m.infoButton_do.setY(parseInt((m.stageHeight - m.infoButton_do.h) / 2)), m.mainHolder_do.addChild(m.infoButton_do)
        }, this.infoButtonShowToolTipHandler = function(e) {
            m.showToolTip(m.infoButton_do, m.infoButtonToolTip_do, e.e)
        }, this.infoButtonOnMouseUpHandler = function() {
            m.dispatchEvent(s.SHOW_INFO_WINDOW)
        }, this.setupDownloadButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.downloadButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-download'></span>", void 0, "UVPMainButtonsNormalState dw", "UVPMainButtonsSelectedState dw")) : (FWDUVPSimpleButton.setPrototype(), m.downloadButton_do = new FWDUVPSimpleButton(m.downloadN_img, p.downloadSPath_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.downloadButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, m.downloadButtonShowToolTipHandler), m.downloadButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.downloadButtonOnMouseUpHandler), m.downloadButton_do.setX(-300), m.downloadButton_do.setY(parseInt((m.stageHeight - m.downloadButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.downloadButton_do.buttonHeight && (clearInterval(e), m.downloadButton_do.setY(parseInt((m.stageHeight - m.downloadButton_do.buttonHeight) / 2)))
            }, 50);
            m.mainHolder_do.addChild(m.downloadButton_do)
        }, this.downloadButtonShowToolTipHandler = function(e) {
            m.showToolTip(m.downloadButton_do, m.downloadButtonToolTip_do, e.e)
        }, this.downloadButtonOnMouseUpHandler = function() {
            m.dispatchEvent(s.DOWNLOAD_VIDEO)
        }, this.setupThumbnailsPreview = function() {
            !m.thumbnailsPreview_do && window.FWDUVPThumbnailsPreview && (FWDUVPThumbnailsPreview.setPrototype(), m.thumbnailsPreview_do = new FWDUVPThumbnailsPreview(m), m.thumbnailsPreview_do.addListener(FWDUVPData.LOAD_ERROR, function(e) {
                m.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: e.text
                })
            }))
        }, this.setupATB = function() {
            FWDUVPATB.setPrototype(), m.atb = new FWDUVPATB(m), m.mainHolder_do.addChild(m.atb), m.atb.addListener(FWDUVPATB.START_TO_SCRUB, m.atbStartToScrub), m.atb.addListener(FWDUVPATB.STOP_TO_SCRUB, m.atbStopToScrub)
        }, m.atbStartToScrub = function() {
            b.showDisable()
        }, m.atbStopToScrub = function() {
            b.hideDisable()
        }, this.setupAtbButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.atbButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-AB'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), m.atbButton_do = new FWDUVPSimpleButton(p.atbNPath_img, p.atbSPath_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.atbButton_do.setX(-5e3), m.atbButton_do.setY(parseInt((m.stageHeight - m.atbButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.atbButton_do.buttonHeight && (clearInterval(e), m.atbButton_do.setY(parseInt((m.stageHeight - m.atbButton_do.buttonHeight) / 2)))
            }, 50);
            m.atbButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, m.atbButtonShowTooltipHandler), m.atbButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.atbButtonMouseUpHandler), m.mainHolder_do.addChild(m.atbButton_do)
        }, this.atbButtonShowTooltipHandler = function(e) {
            m.showToolTip(m.atbButton_do, m.atbButtonToolTip_do, e.e)
        }, this.atbButtonMouseUpHandler = function() {
            m.atbButton_do.isSelected ? (m.atbButton_do.doNotallowToSetNormal = !1, m.atbButton_do.isSelected = !1, m.atb.hide(!0)) : (m.atbButton_do.isSelected = !0, m.atbButton_do.doNotallowToSetNormal = !0, m.atbButton_do.setSelectedState(), m.atb.show(!0))
        }, this.disableAtbButton = function() {
            m.atbButton_do && m.atbButton_do.disable()
        }, this.enableAtbButton = function() {
            m.atbButton_do && m.atbButton_do.enable()
        }, this.setupShareButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.shareButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-share'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), m.shareButton_do = new FWDUVPSimpleButton(p.shareN_img, p.shareSPath_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.buttons_ar.push(m.shareButton_do), m.shareButton_do.setY(parseInt((m.stageHeight - m.shareButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.shareButton_do.buttonHeight && (clearInterval(e), m.shareButton_do.setY(parseInt((m.stageHeight - m.shareButton_do.buttonHeight) / 2)))
            }, 50);
            m.shareButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, m.facebookButtonShowTooltipHandler), m.shareButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.facebookButtonMouseUpHandler), m.mainHolder_do.addChild(m.shareButton_do)
        }, this.facebookButtonShowTooltipHandler = function(e) {
            m.showToolTip(m.shareButton_do, m.facebookButtonToolTip_do, e.e)
        }, this.facebookButtonMouseUpHandler = function() {
            m.dispatchEvent(s.SHOW_SHARE_WINDOW)
        }, this.setupChromecastButton = function() {
            m.useVectorIcons_bl ? (FWDUVPComplexButton.setPrototype(), m.ccBtn_do = new FWDUVPComplexButton(void 0, void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-cast'></span>", "<span class='uvpicon icon-uncast'></span>", "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPComplexButton.setPrototype(), m.ccBtn_do = new FWDUVPComplexButton(p.castN_img, p.castSPath_str, p.uncastN_img, p.uncastSPath_str, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str));
            var e = setInterval(function() {
                0 < m.ccBtn_do.buttonHeight && (clearInterval(e), m.ccBtn_do.setY(parseInt((m.stageHeight - m.ccBtn_do.buttonHeight) / 2)))
            }, 50);
            m.ccBtn_do.setY(parseInt((m.stageHeight - m.ccBtn_do.buttonHeight) / 2)), m.ccBtn_do.addListener(FWDUVPComplexButton.MOUSE_UP, m.chormecastMouseUpHandler), m.ccBtn_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, m.castTooltipHandler), m.ccBtn_do.setX(-500), m.mainHolder_do.addChild(m.ccBtn_do)
        }, this.castTooltipHandler = function(e) {
            m.showToolTip(m.ccBtn_do, m.castButtonToolTip_do, e.e)
        }, this.chormecastMouseUpHandler = function() {
            0 == m.ccBtn_do.currentState ? m.dispatchEvent(s.UNCAST) : m.dispatchEvent(s.CAST)
        }, this.removeCCButton = function() {
            m.ccBtn_do && -1 != FWDUVPUtils.indexOfArray(m.buttons_ar, m.ccBtn_do) && (m.buttons_ar.splice(FWDUVPUtils.indexOfArray(m.buttons_ar, m.ccBtn_do), 1), m.ccBtn_do.setX(-300), m.positionButtons())
        }, this.addCCButton = function() {
            m.ccBtn_do && -1 == FWDUVPUtils.indexOfArray(m.buttons_ar, m.ccBtn_do) && (m.fullScreenButton_do && -1 != FWDUVPUtils.indexOfArray(m.buttons_ar, m.fullScreenButton_do) ? m.buttons_ar.splice(FWDUVPUtils.indexOfArray(m.buttons_ar, m.fullScreenButton_do), 0, m.ccBtn_do) : m.buttons_ar.splice(m.buttons_ar.length, 0, m.ccBtn_do), m.positionButtons())
        }, this.setupFullscreenButton = function() {
            m.useVectorIcons_bl ? (FWDUVPComplexButton.setPrototype(), m.fullScreenButton_do = new FWDUVPComplexButton(void 0, void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-fullscreen'></span>", "<span class='uvpicon icon-normalscreen'></span>", "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPComplexButton.setPrototype(), m.fullScreenButton_do = new FWDUVPComplexButton(m.fullScreenN_img, p.fullScreenSPath_str, m.normalScreenN_img, p.normalScreenSPath_str, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.buttons_ar.push(m.fullScreenButton_do), m.fullScreenButton_do.setY(parseInt((m.stageHeight - m.fullScreenButton_do.buttonHeight) / 2));
            var e = setInterval(function() {
                0 < m.fullScreenButton_do.buttonHeight && (clearInterval(e), m.fullScreenButton_do.setY(parseInt((m.stageHeight - m.fullScreenButton_do.buttonHeight) / 2)))
            }, 50);
            m.fullScreenButton_do.addListener(FWDUVPComplexButton.SHOW_TOOLTIP, m.fullscreenButtonShowToolTipHandler), m.fullScreenButton_do.addListener(FWDUVPComplexButton.MOUSE_UP, m.fullScreenButtonMouseUpHandler), m.mainHolder_do.addChild(m.fullScreenButton_do)
        }, this.fullscreenButtonShowToolTipHandler = function(e) {
            m.showToolTip(m.fullScreenButton_do, m.fullscreenButtonToolTip_do, e.e)
        }, this.showFullScreenButton = function() {
            m.fullScreenButton_do && m.fullScreenButton_do.setButtonState(1)
        }, this.showNormalScreenButton = function() {
            m.fullScreenButton_do && m.fullScreenButton_do.setButtonState(0)
        }, this.setNormalStateToFullScreenButton = function() {
            m.fullScreenButton_do && (m.fullScreenButton_do.setNormalState(!0), m.hideQualityButtons(!1))
        }, this.fullScreenButtonMouseUpHandler = function() {
            m.fullscreenButtonToolTip_do && m.fullscreenButtonToolTip_do.hide(), 1 == m.fullScreenButton_do.currentState ? m.dispatchEvent(s.FULL_SCREEN) : m.dispatchEvent(s.NORMAL_SCREEN)
        }, this.setupTime = function() {
            m.time_do = new FWDUVPDisplayObject("div"), m.time_do.hasTransform3d_bl = !1, m.time_do.hasTransform2d_bl = !1, m.time_do.setBackfaceVisibility(), m.time_do.getStyle().fontFamily = "Arial", m.time_do.getStyle().fontSize = "12px", m.time_do.getStyle().whiteSpace = "nowrap", m.time_do.getStyle().textAlign = "center", m.time_do.getStyle().color = m.timeColor_str, m.time_do.getStyle().fontSmoothing = "antialiased", m.time_do.getStyle().webkitFontSmoothing = "antialiased", m.time_do.getStyle().textRendering = "optimizeLegibility", m.mainHolder_do.addChild(m.time_do), m.updateTime("00:00/00:00"), m.buttons_ar.push(m.time_do)
        }, this.updateTime = function(e) {
            m.time_do && (m.isLive && (e = e.substr(0, e.indexOf("/"))), m.time_do.setInnerHTML(e), m.lastTimeLength != e.length && (m.time_do.w = m.time_do.getWidth(), m.positionButtons(), setTimeout(function() {
                m.time_do.w = m.time_do.getWidth(), m.time_do.h = m.time_do.getHeight(), m.time_do.setY(parseInt((m.stageHeight - m.time_do.h) / 2) + 1 + m.timeOffsetTop), m.positionButtons()
            }, 50), m.lastTimeLength = e.length))
        }, this.setupRewindButton = function() {
            m.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), m.rewindButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-10'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), m.rewindButton_do = new FWDUVPSimpleButton(p.rewindN_img, p.rewindSPath_str, void 0, !0, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.buttons_ar.push(m.rewindButton_do), m.rewindButton_do.setY(parseInt((m.stageHeight - m.rewindButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.rewindButton_do.buttonHeight && (clearInterval(e), m.rewindButton_do.setY(parseInt((m.stageHeight - m.rewindButton_do.buttonHeight) / 2)))
            }, 50);
            m.rewindButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, m.rewindButtonMouseUpHandler), m.mainHolder_do.addChild(m.rewindButton_do)
        }, this.rewindButtonMouseUpHandler = function() {
            m.dispatchEvent(s.REWIND)
        }, this.setupVolumeButton = function() {
            m.useVectorIcons_bl ? (FWDUVPVolumeButton.setPrototype(), m.volumeButton_do = new FWDUVPVolumeButton(void 0, void 0, void 0, void 0, void 0, void 0, "<span class='uvpicon icon-sound'></span>", "<span class='uvpicon icon-sound-off'></span>", "UVPMainButtonsNormalState volume", "UVPMainButtonsSelectedState volume")) : (FWDUVPVolumeButton.setPrototype(), m.volumeButton_do = new FWDUVPVolumeButton(m.volumeN_img, p.volumeSPath_str, p.volumeDPath_str, m.useHEXColorsForSkin_bl, m.normalButtonsColor_str, m.selectedButtonsColor_str)), m.volumeButton_do.addListener(FWDUVPVolumeButton.SHOW_TOOLTIP, m.volumeButtonShowTooltipHandler), m.volumeButton_do.addListener(FWDUVPVolumeButton.MOUSE_OVER, m.volumeOnMouseOverHandler), m.volumeButton_do.addListener(FWDUVPVolumeButton.MOUSE_UP, m.volumeOnMouseUpHandler), m.volumeButton_do.setY(parseInt((m.stageHeight - m.volumeButton_do.h) / 2));
            var e = setInterval(function() {
                0 < m.volumeButton_do.buttonHeight && (clearInterval(e), m.volumeButton_do.setY(parseInt((m.stageHeight - m.volumeButton_do.buttonHeight) / 2)))
            }, 50);
            m.buttons_ar.push(m.volumeButton_do), m.mainHolder_do.addChild(m.volumeButton_do)
        }, this.volumeButtonShowTooltipHandler = function(e) {}, this.hideMainScrubberTop = function() {
            m.isMainScrubberOnTop_bl && FWDAnimation.to(m.mainScrubber_do, .4, {
                alpha: 0,
                onComplete: function() {
                    m.mainScrubber_do.setX(-5e3)
                }
            })
        }, this.showMainScrubberOnTop = function() {
            m.isMainScrubberOnTop_bl && (m.mainScrubber_do.setX(0), FWDAnimation.to(m.mainScrubber_do, .6, {
                alpha: 1
            }))
        }, this.volumeOnMouseOverHandler = function() {
            m.showVolumeScrubber(!0), m.hideQualityButtons(!0), m.hideSubtitleButtons(!0), m.hidePlaybackRateButtons(!0), m.hideMainScrubberTop()
        }, this.volumeOnMouseUpHandler = function() {
            var e = m.lastVolume;
            m.isMobile_bl ? m.isVolumeScrubberShowed_bl || m.volumeOnMouseOverHandler() : (m.isMute_bl ? (e = m.lastVolume, m.isMute_bl = !1) : (e = 1e-6, m.isMute_bl = !0), m.updateVolume(e))
        }, this.setupVolumeScrubber = function() {
            if (m.volumeScrubberHolder_do = new FWDUVPDisplayObject("div"), m.repeatBackground_bl) m.volumeBk_do = new FWDUVPDisplayObject("div"), m.volumeBk_do.getStyle().background = "url('" + m.controllerBkPath_str + "')";
            else {
                m.volumeBk_do = new FWDUVPDisplayObject("img");
                var e = new Image;
                e.src = m.controllerBkPath_str, m.volumeBk_do.setScreen(e)
            }
            m.volumeScrubberHolder_do.addChild(m.volumeBk_do), m.volumeScrubber_do = new FWDUVPDisplayObject("div"), m.volumeScrubber_do.setHeight(m.mainScrubberHeight), m.volumeScrubber_do.setY(parseInt(m.volumeScrubberOfsetHeight / 2));
            var t = new Image;
            t.src = p.volumeScrubberBkBottomPath_str, m.volumeScrubberBkBottom_do = new FWDUVPDisplayObject("img"), m.volumeScrubberBkBottom_do.setScreen(t), m.volumeScrubberBkBottom_do.setWidth(m.mainScrubberBkLeft_img.height), m.volumeScrubberBkBottom_do.setHeight(m.mainScrubberBkLeft_img.width), m.volumeScrubberBkBottom_do.setY(m.volumeScrubberHeight - m.volumeScrubberOfsetHeight - m.volumeScrubberBkBottom_do.h);
            var o = new Image;
            o.src = p.volumeScrubberBkTopPath_str, m.volumeScrubberBkTop_do = new FWDUVPDisplayObject("img"), m.volumeScrubberBkTop_do.setScreen(o), m.volumeScrubberBkTop_do.setWidth(m.volumeScrubberBkBottom_do.w), m.volumeScrubberBkTop_do.setHeight(m.volumeScrubberBkBottom_do.h);
            var s = new Image;
            s.src = p.volumeScrubberBkMiddlePath_str, m.isMobile_bl ? (m.volumeScrubberBkMiddle_do = new FWDUVPDisplayObject("div"), m.volumeScrubberBkMiddle_do.getStyle().background = "url('" + m.volumeScrubberBkMiddlePath_str + "') repeat-y") : (m.volumeScrubberBkMiddle_do = new FWDUVPDisplayObject("img"), m.volumeScrubberBkMiddle_do.setScreen(s)), m.volumeScrubberBkMiddle_do.setWidth(m.volumeScrubberBkBottom_do.w), m.volumeScrubberBkMiddle_do.setHeight(m.volumeScrubberHeight - m.volumeScrubberOfsetHeight - 2 * m.volumeScrubberBkTop_do.h), m.volumeScrubberBkMiddle_do.setY(m.volumeScrubberBkTop_do.h), m.volumeScrubberDrag_do = new FWDUVPDisplayObject("div"), m.volumeScrubberDrag_do.setWidth(m.volumeScrubberBkBottom_do.w), m.useHEXColorsForSkin_bl ? (m.volumeScrubberDragBottom_do = new FWDUVPDisplayObject("div"), m.volumeScrubberDragBottom_do.setWidth(m.volumeScrubberDragBottom_img.width), m.volumeScrubberDragBottom_do.setHeight(m.volumeScrubberDragBottom_img.height), m.volumeScrubberDragBottom_canvas = FWDUVPUtils.getCanvasWithModifiedColor(m.volumeScrubberDragBottom_img, m.normalButtonsColor_str).canvas, m.volumeScrubberDragBottom_do.screen.appendChild(m.volumeScrubberDragBottom_canvas)) : (m.volumeScrubberDragBottom_do = new FWDUVPDisplayObject("img"), m.volumeScrubberDragBottom_do.setScreen(m.volumeScrubberDragBottom_img)), m.volumeScrubberDragBottom_do.setWidth(m.mainScrubberDragLeft_img.height), m.volumeScrubberDragBottom_do.setHeight(m.mainScrubberDragLeft_img.width), m.volumeScrubberDragBottom_do.setY(m.volumeScrubberHeight - m.volumeScrubberOfsetHeight - m.volumeScrubberDragBottom_do.h), m.middleImage = new Image, m.middleImage.src = m.volumeScrubberDragMiddlePath_str, m.useHEXColorsForSkin_bl ? (m.volumeScrubberDragMiddle_do = new FWDUVPDisplayObject("div"), m.middleImage.onload = function() {
                m.volumeScrubberDragMiddle_canvas = FWDUVPUtils.getCanvasWithModifiedColor(m.middleImage, m.normalButtonsColor_str, !0), m.volumeScrubberDragImage_img = m.volumeScrubberDragMiddle_canvas.image, m.volumeScrubberDragMiddle_do.getStyle().background = "url('" + m.volumeScrubberDragImage_img.src + "') repeat-y"
            }) : (m.volumeScrubberDragMiddle_do = new FWDUVPDisplayObject("img"), m.volumeScrubberDragMiddle_do.setScreen(m.middleImage)), m.volumeScrubberDragMiddle_do.setWidth(m.volumeScrubberDragBottom_do.w), m.volumeScrubberDragMiddle_do.setHeight(m.volumeScrubberHeight);
            var i = new Image;
            i.src = p.volumeScrubberLinePath_str, m.volumeScrubberBarLine_do = new FWDUVPDisplayObject("img"), m.volumeScrubberBarLine_do.setScreen(i), m.volumeScrubberBarLine_do.setWidth(m.mainScrubberLine_img.height), m.volumeScrubberBarLine_do.setHeight(m.mainScrubberLine_img.width), m.volumeScrubberBarLine_do.setAlpha(0), m.volumeScrubberBarLine_do.hasTransform3d_bl = !1, m.volumeScrubberBarLine_do.hasTransform2d_bl = !1, m.volumeScrubberHolder_do.setWidth(m.volumeScrubberWidth), m.volumeScrubberHolder_do.setHeight(m.volumeScrubberHeight + m.stageHeight), m.volumeBk_do.setWidth(m.volumeScrubberWidth), m.volumeBk_do.setHeight(m.volumeScrubberHeight + m.stageHeight), m.volumeScrubber_do.setWidth(m.volumeScrubberWidth), m.volumeScrubber_do.setHeight(m.volumeScrubberHeight - m.volumeScrubberOfsetHeight), m.volumeScrubber_do.addChild(m.volumeScrubberBkBottom_do), m.volumeScrubber_do.addChild(m.volumeScrubberBkMiddle_do), m.volumeScrubber_do.addChild(m.volumeScrubberBkTop_do), m.volumeScrubber_do.addChild(m.volumeScrubberBarLine_do), m.volumeScrubber_do.addChild(m.volumeScrubberDragBottom_do), m.volumeScrubberDrag_do.addChild(m.volumeScrubberDragMiddle_do), m.volumeScrubber_do.addChild(m.volumeScrubberDrag_do), m.volumeScrubber_do.addChild(m.volumeScrubberBarLine_do), m.volumeScrubberHolder_do.addChild(m.volumeScrubber_do), m.addChild(m.volumeScrubberHolder_do), m.isMobile_bl ? m.hasPointerEvent_bl ? (m.volumeScrubber_do.screen.addEventListener("pointerover", m.volumeScrubberOnOverHandler), m.volumeScrubber_do.screen.addEventListener("pointerout", m.volumeScrubberOnOutHandler), m.volumeScrubber_do.screen.addEventListener("pointerdown", m.volumeScrubberOnDownHandler)) : m.volumeScrubber_do.screen.addEventListener("touchstart", m.volumeScrubberOnDownHandler) : m.screen.addEventListener && (m.volumeScrubber_do.screen.addEventListener("mouseover", m.volumeScrubberOnOverHandler), m.volumeScrubber_do.screen.addEventListener("mouseout", m.volumeScrubberOnOutHandler), m.volumeScrubber_do.screen.addEventListener("mousedown", m.volumeScrubberOnDownHandler)), m.enableVolumeScrubber(), m.updateVolumeScrubber(m.volume)
        }, this.volumeScrubberOnOverHandler = function(e) {
            m.isVolumeScrubberDisabled_bl
        }, this.volumeScrubberOnOutHandler = function(e) {
            m.isVolumeScrubberDisabled_bl
        }, this.volumeScrubberOnDownHandler = function(e) {
            if (!m.isVolumeScrubberDisabled_bl && 2 != e.button) {
                e.preventDefault && e.preventDefault(), m.volumeScrubberIsDragging_bl = !0;
                var t = FWDUVPUtils.getViewportMouseCoordinates(e).screenY - m.volumeScrubber_do.getGlobalY();
                b.showDisable(), t < 0 ? t = 0 : t > m.volumeScrubber_do.h - m.scrubbersOffsetWidth && (t = m.volumeScrubber_do.h - m.scrubbersOffsetWidth);
                var o = 1 - t / m.volumeScrubber_do.h;
                m.lastVolume = o, m.updateVolume(o), m.isMobile_bl ? m.hasPointerEvent_bl ? (window.addEventListener("MSPointerMove", m.volumeScrubberMoveHandler), window.addEventListener("pointerup", m.volumeScrubberEndHandler)) : (window.addEventListener("touchmove", m.volumeScrubberMoveHandler), window.addEventListener("touchend", m.volumeScrubberEndHandler)) : window.addEventListener ? (window.addEventListener("mousemove", m.volumeScrubberMoveHandler), window.addEventListener("mouseup", m.volumeScrubberEndHandler)) : document.attachEvent && (document.attachEvent("onmousemove", m.volumeScrubberMoveHandler), document.attachEvent("onmouseup", m.volumeScrubberEndHandler))
            }
        }, this.volumeScrubberMoveHandler = function(e) {
            if (!m.isVolumeScrubberDisabled_bl) {
                e.preventDefault && e.preventDefault();
                var t = FWDUVPUtils.getViewportMouseCoordinates(e).screenY - m.volumeScrubber_do.getGlobalY();
                t < m.scrubbersOffsetWidth ? t = m.scrubbersOffsetWidth : t > m.volumeScrubber_do.h && (t = m.volumeScrubber_do.h);
                var o = 1 - t / m.volumeScrubber_do.h;
                m.lastVolume = o, m.updateVolume(o)
            }
        }, this.volumeScrubberEndHandler = function() {
            b.hideDisable(), m.volumeScrubberIsDragging_bl = !1, m.isMobile_bl ? m.hasPointerEvent_bl ? (window.removeEventListener("MSPointerMove", m.volumeScrubberMoveHandler), window.removeEventListener("pointerup", m.volumeScrubberEndHandler)) : (window.removeEventListener("touchmove", m.volumeScrubberMoveHandler), window.removeEventListener("touchend", m.volumeScrubberEndHandler)) : window.removeEventListener ? (window.removeEventListener("mousemove", m.volumeScrubberMoveHandler), window.removeEventListener("mouseup", m.volumeScrubberEndHandler)) : document.detachEvent && (document.detachEvent("onmousemove", m.volumeScrubberMoveHandler), document.detachEvent("onmouseup", m.volumeScrubberEndHandler))
        }, this.disableVolumeScrubber = function() {
            m.isVolumeScrubberDisabled_bl = !0, m.volumeScrubber_do.setButtonMode(!1), m.volumeScrubberEndHandler()
        }, this.enableVolumeScrubber = function() {
            m.isVolumeScrubberDisabled_bl = !1, m.volumeScrubber_do.setButtonMode(!0)
        }, this.updateVolumeScrubber = function(e) {
            var t = m.volumeScrubberHeight - m.volumeScrubberOfsetHeight,
                o = Math.round(e * t);
            m.volumeScrubberDrag_do.setHeight(Math.max(0, o - m.volumeScrubberDragBottom_do.h)), m.volumeScrubberDrag_do.setY(t - o), o < 1 && m.isVolumeScrubberLineVisible_bl ? (m.isVolumeScrubberLineVisible_bl = !1, FWDAnimation.to(m.volumeScrubberBarLine_do, .5, {
                alpha: 0
            }), FWDAnimation.to(m.volumeScrubberDragBottom_do, .5, {
                alpha: 0
            })) : 1 < o && !m.isVolumeScrubberLineVisible_bl && (m.isVolumeScrubberLineVisible_bl = !0, FWDAnimation.to(m.volumeScrubberBarLine_do, .5, {
                alpha: 1
            }), FWDAnimation.to(m.volumeScrubberDragBottom_do, .5, {
                alpha: 1
            })), t < o && (o = t), FWDAnimation.to(m.volumeScrubberBarLine_do, .8, {
                y: t - o - 2,
                ease: Expo.easeOut
            })
        }, this.updateVolume = function(e, t) {
            m.showVolumeScrubber_bl && (m.volume = e, m.volume <= 1e-6 ? (m.muted = !0, m.volume = 0) : 1 <= m.voume ? (m.muted = !1, m.volume = 1) : m.muted = !1, 0 == m.volume ? m.volumeButton_do && m.volumeButton_do.setDisabledState() : m.volumeButton_do && m.volumeButton_do.setEnabledState(), m.volumeScrubberBarLine_do && m.updateVolumeScrubber(m.volume), t || m.dispatchEvent(s.CHANGE_VOLUME, {
                percent: m.volume
            }))
        }, this.showVolumeScrubber = function(e) {
            if (!m.isVolumeScrubberShowed_bl) {
                m.isVolumeScrubberShowed_bl = !0;
                var t = -m.volumeScrubberHolder_do.h + m.h;
                m.volumeScrubberHolder_do.setVisible(!0), m.isMobile_bl ? setTimeout(function() {
                    window.addEventListener("touchstart", m.hideVolumeSchubberOnMoveHandler)
                }, 50) : window.addEventListener("mousemove", m.hideVolumeSchubberOnMoveHandler), m.volumeScrubberHolder_do.setX(parseInt(m.volumeButton_do.x + (m.volumeButton_do.w - m.volumeScrubberHolder_do.w) / 2)), e ? FWDAnimation.to(m.volumeScrubberHolder_do, .6, {
                    y: t,
                    ease: Expo.easeInOut
                }) : (FWDAnimation.killTweensOf(m.volumeScrubberHolder_do), m.volumeScrubberHolder_do.setY(t))
            }
        }, this.hideVolumeSchubberOnMoveHandler = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            (FWDUVPUtils.hitTest(m.volumeScrubberHolder_do.screen, t.screenX, t.screenY) || FWDUVPUtils.hitTest(m.volumeButton_do.screen, t.screenX, t.screenY)) && !m.isMobile_bl || FWDUVPUtils.hitTest(m.volumeScrubber_do.screen, t.screenX, t.screenY) && m.isMobile_bl || m.volumeScrubberIsDragging_bl || (m.hideVolumeScrubber(!0), m.isMainScrubberOnTop_bl && (m.mainScrubber_do.setX(0), FWDAnimation.to(m.mainScrubber_do, .6, {
                alpha: 1
            })))
        }, this.hideVolumeScrubber = function(e) {
            m.isVolumeScrubberShowed_bl && (m.isVolumeScrubberShowed_bl = !1, m.volumeButton_do.setNormalState(!0), e ? FWDAnimation.to(m.volumeScrubberHolder_do, .6, {
                y: b.stageHeight,
                ease: Expo.easeInOut,
                onComplete: function() {
                    m.volumeScrubberHolder_do.setVisible(!1)
                }
            }) : (FWDAnimation.killTweensOf(m.ytbButtonsHolder_do), m.volumeScrubberHolder_do.setY(b.stageHeight), m.volumeScrubberHolder_do.setVisible(!1)), m.isMobile_bl ? window.removeEventListener("touchstart", m.hideVolumeSchubberOnMoveHandler) : window.removeEventListener("mousemove", m.hideVolumeSchubberOnMoveHandler))
        }, this.show = function(e) {
            m.isShowed_bl || (m.isShowed_bl = !0, m.setX(0), e ? FWDAnimation.to(m.mainHolder_do, .8, {
                y: 0,
                ease: Expo.easeInOut
            }) : (FWDAnimation.killTweensOf(m.mainHolder_do), m.mainHolder_do.setY(0)), setTimeout(m.positionButtons, 200))
        }, this.hide = function(e, t) {
            m.isShowed_bl && (t || (t = 0), m.atb && m.atb.isShowed_bl && (t += m.h + 1), m.isMainScrubberOnTop_bl && m.atb && m.atb.isShowed_bl && (t += m.mainScrubberOffestTop), p.showScrubberWhenControllerIsHidden_bl || (t += m.mainScrubber_do.h - 14), m.isShowed_bl = !1, e ? FWDAnimation.to(m.mainHolder_do, .8, {
                y: m.stageHeight + t,
                ease: Expo.easeInOut,
                onComplete: function() {}
            }) : (FWDAnimation.killTweensOf(m.mainHolder_do), m.mainHolder_do.setY(m.stageHeight + t)), m.hideQualityButtons(!0), m.hideSubtitleButtons(!0), m.hidePlaybackRateButtons(!0))
        }, this.mainScrubberDragMiddleAddPath_str = p.mainScrubberDragMiddleAddPath_str, this.updateHexColorForScrubber = function(e) {
            e ? (m.mainScrubberDragMiddle_do.getStyle().background = "url('" + m.mainScrubberDragMiddleAddPath_str + "') repeat-x", m.mainScrubberDragLeft_do.screen.src = p.mainScrubberDragLeftAddPath_str) : (m.mainScrubberDragMiddle_do.getStyle().background = "url('" + m.mainScrubberDragMiddlePath_str + "') repeat-x", m.mainScrubberDragLeft_do.screen.src = m.mainScrubberDragLeftSource)
        }, m.updateHEXColors = function(e, t) {
            m.normalColor_str = e, m.selectedColor_str = t, FWDUVPUtils.changeCanvasHEXColor(m.mainScrubberDragLeft_img, m.mainScrubberDragLeft_canvas, e);
            try {
                FWDUVPUtils.changeCanvasHEXColor(m.volumeScrubberDragBottom_img, m.volumeScrubberDragBottom_canvas, e)
            } catch (e) {}
            var o = FWDUVPUtils.changeCanvasHEXColor(m.mainScrubberMiddleImage, m.mainSCrubberMiddleCanvas, e, !0);
            m.mainScrubberDragMiddle_do.getStyle().background = "url('" + o.src + "') repeat-x";
            try {
                m.volumeScrubberDragMiddle_do && (m.volumeScrubberDragMiddle_do.getStyle().background = "url('" + m.volumeScrubberDragImage_img.src + "') repeat-y");
                var s = FWDUVPUtils.changeCanvasHEXColor(m.middleImage, m.volumeScrubberDragMiddle_canvas.canvas, e, !0);
                m.volumeScrubberDragMiddle_do.getStyle().background = "url('" + s.src + "') repeat-y"
            } catch (e) {}
            if (m.playPauseButton_do.updateHEXColors(e, t), m.rewindButton_do && m.rewindButton_do.updateHEXColors(e, t), m.subtitleButton_do && m.subtitleButton_do.updateHEXColors(e, t), m.playbackRateButton_do && m.playbackRateButton_do.updateHEXColors(e, t), m.volumeButton_do && m.volumeButton_do.updateHEXColors(e, t), m.playlistButton_do && m.playlistButton_do.updateHEXColors(e, t), m.downloadButton_do && m.downloadButton_do.updateHEXColors(e, t), m.infoButton_do && m.infoButton_do.updateHEXColors(e, t), m.categoriesButton_do && m.categoriesButton_do.updateHEXColors(e, t), m.ytbQualityButton_do && m.ytbQualityButton_do.updateHEXColors(e, t), m.shareButton_do && m.shareButton_do.updateHEXColors(e, t), m.embedButton_do && m.embedButton_do.updateHEXColors(e, t), m.fullScreenButton_do && m.fullScreenButton_do.updateHEXColors(e, t), m.time_do && (m.time_do.getStyle().color = e), m.ytbButtons_ar)
                for (var i = 0; i < m.totalYtbButtons; i++) {
                    (n = m.ytbButtons_ar[i]).normalColor_str = e, n.selectedColor_str = t, n.isSelected_bl ? n.isSelected_bl || n.setSelectedState() : n.setNormalState()
                }
            if (m.playbackRateButtons_ar)
                for (i = 0; i < m.playbackRateButtons_ar.length; i++) {
                    (n = m.playbackRateButtons_ar[i]).normalColor_str = e, n.selectedColor_str = t, n.isSelected_bl ? n.isSelected_bl || n.setSelectedState() : n.setNormalState()
                }
            if (m.subtitleButtons_ar)
                for (i = 0; i < m.totalSubttleButtons; i++) {
                    var n;
                    (n = m.subtitleButtons_ar[i]) && (n.normalColor_str = e, n.selectedColor_str = t, n.isSelected_bl ? n.setSelectedState() : n.setNormalState())
                }
        }, this.init()
    };
    s.setPrototype = function() {
        s.prototype = new FWDUVPDisplayObject("div")
    }, s.UNCAST = "uncast", s.CAST = "cast", s.SHOW_SHARE_WINDOW = "showShareWindow", s.SHOW_SUBTITLE = "showSubtitle", s.HIDE_SUBTITLE = "hideSubtitle", s.SHOW_PLAYLIST = "showPlaylist", s.HIDE_PLAYLIST = "hidePlaylist", s.SHOW_CATEGORIES = "showCategories", s.DOWNLOAD_VIDEO = "downloadVideo", s.UNCAST = "uncast", s.REWIND = "rewind", s.FULL_SCREEN = "fullScreen", s.NORMAL_SCREEN = "normalScreen", s.PLAY = "play", s.PAUSE = "pause", s.START_TO_SCRUB = "startToScrub", s.SCRUB = "scrub", s.STOP_TO_SCRUB = "stopToScrub", s.CHANGE_VOLUME = "changeVolume", s.CHANGE_YOUTUBE_QUALITY = "changeYoutubeQuality", s.SHOW_EMBED_WINDOW = "showEmbedWindow", s.SHOW_INFO_WINDOW = "showInfoWindow", s.CHANGE_SUBTITLE = "changeSubtitle", s.CHANGE_PLAYBACK_RATES = "changePlaybackRate", s.prototype = null, window.FWDUVPController = s
}(), function(window) {
    var FWDUVPData = function(props, playListElement, parent) {
        var self = this,
            prototype = FWDUVPData.prototype;
        this.props_obj = props, this.skinPaths_ar = [], this.images_ar = [], this.cats_ar = [], this.catsRef_ar = [], this.controllerHeight = 0, this.countLoadedSkinImages = 0, this.volume = 1, this.controllerHideDelay = 0, this.startSpaceBetweenButtons = 0, this.spaceBetweenButtons = 0, this.scrubbersOffsetWidth = 0, this.volumeScrubberOffsetTopWidth = 0, this.timeOffsetLeftWidth = 0, this.timeOffsetTop = 0, this.logoMargins = 0, this.startAtPlaylist = 0, this.startAtVideo = 0, this.playlistBottomHeight = 0, this.maxPlaylistItems = 0, this.totalPlaylists = 0, this.thumbnailMaxWidth = 0, this.buttonsMargins = 0, this.nextAndPrevSetButtonsMargins = 0, this.thumbnailMaxHeight = 0, this.horizontalSpaceBetweenThumbnails = 0, this.verticalSpaceBetweenThumbnails = 0, this.buttonsToolTipHideDelay = 0, this.thumbnailWidth = 0, this.thumbnailHeight = 0, this.timeOffsetTop = 0, this.embedWindowCloseButtonMargins = 0, this.loadImageId_to, this.dispatchLoadSkinCompleteWithDelayId_to, this.dispatchPlaylistLoadCompleteWidthDelayId_to, this.JSONPRequestTimeoutId_to, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, self.init = function() {
            self.parseProperties()
        }, self.parseProperties = function() {
            if (self.useHEXColorsForSkin_bl = self.props_obj.useHEXColorsForSkin, self.useHEXColorsForSkin_bl = "yes" == self.useHEXColorsForSkin_bl, -1 != location.protocol.indexOf("file:") && (self.useHEXColorsForSkin_bl = !1), self.categoriesId_str = self.props_obj.playlistsId, self.categoriesId_str)
                if (self.mainFolderPath_str = self.props_obj.mainFolderPath, self.mainFolderPath_str)
                    if (self.mainFolderPath_str.lastIndexOf("/") + 1 != self.mainFolderPath_str.length && (self.mainFolderPath_str += "/"), self.skinPath_str = self.props_obj.skinPath, self.skinPath_str)
                        if (self.skinPath_str.lastIndexOf("/") + 1 != self.skinPath_str.length && (self.skinPath_str += "/"), self.skinPath_str = self.mainFolderPath_str + self.skinPath_str, self.flashPath_str = self.mainFolderPath_str + "flashlsChromeless.swf", self.flashCopyToCBPath_str = self.mainFolderPath_str + "cb.swf", self.proxyPath_str = self.mainFolderPath_str + "proxy.php", self.proxyFolderPath_str = self.mainFolderPath_str + "proxyFolder.php", self.mailPath_str = self.mainFolderPath_str + "sendMail.php", self.sendToAFriendPath_str = self.mainFolderPath_str + "sendMailToAFriend.php", self.videoDownloaderPath_str = self.mainFolderPath_str + "downloader.php", self.handPath_str = self.skinPath_str + "hand.cur", self.grabPath_str = self.skinPath_str + "grab.cur", self.categories_el = document.getElementById(self.categoriesId_str), self.categories_el) {
                            var e = FWDUVPUtils.getChildren(self.categories_el);
                            if (self.totalCats = e.length, 0 != self.totalCats) {
                                for (var t = 0; t < self.totalCats; t++) {
                                    var o = {},
                                        s = null;
                                    if (child = e[t], !FWDUVPUtils.hasAttribute(child, "data-source")) return void setTimeout(function() {
                                        null != self && self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                                            text: "Attribute <font color='#ff0000'>data-source</font> is required in the plalists html element at position <font color='#ff0000'>" + (t + 1)
                                        })
                                    }, 50);
                                    if (!FWDUVPUtils.hasAttribute(child, "data-thumbnail-path")) return void setTimeout(function() {
                                        null != self && self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                                            text: "Attribute <font color='#ff0000'>data-thumbnail-path</font> is required in the playlists html element at position <font color='#ff0000'>" + (t + 1)
                                        })
                                    }, 50);
                                    o.source = FWDUVPUtils.getAttributeValue(child, "data-source"), s = -1 == o.source.indexOf("=") && -1 == o.source.indexOf(".xml") && -1 == o.source.indexOf("vimeo.com") && -1 == o.source.indexOf("youtube.") ? document.getElementById(o.source) : o.source, self.catsRef_ar.push(s), o.thumbnailPath = FWDUVPUtils.getAttributeValue(child, "data-thumbnail-path"), o.htmlContent = child.innerHTML, o.htmlText_str = child.innerText, o.vimeoUserId = FWDUVPUtils.getAttributeValue(child, "data-user-id"), o.clientId = FWDUVPUtils.getAttributeValue(child, "data-client-id"), o.vimeoSecret = FWDUVPUtils.getAttributeValue(child, "data-vimeo-secret"), o.vimeoToken = FWDUVPUtils.getAttributeValue(child, "data-vimeo-token"), FWDUVPUtils.hasAttribute(child, "data-playlist-name") ? o.playlistName = FWDUVPUtils.getAttributeValue(child, "data-playlist-name") : o.playlistName = "not defined!", self.cats_ar[t] = o
                                }
                                for (t = 0; t < self.totalCats; t++) {
                                    o = {}, s = null;
                                    child = e[t], s = document.getElementById(FWDUVPUtils.getAttributeValue(child, "data-source"))
                                }
                                self.startAtPlaylist = self.props_obj.startAtPlaylist || 0, isNaN(self.startAtPlaylist) && (self.startAtPlaylist = 0), self.startAtPlaylist < 0 ? self.startAtPlaylist = 0 : self.startAtPlaylist > self.totalCats - 1 && (self.startAtPlaylist = self.totalCats - 1), self.playlistBottomHeight = self.props_obj.playlistBottomHeight || 0, self.playlistBottomHeight = Math.min(800, self.playlistBottomHeight), self.subtitlesOffLabel_str = self.props_obj.subtitlesOffLabel || "Subtitle off", self.videoSourcePath_str = self.props_obj.videoSourcePath || void 0, self.timeColor_str = self.props_obj.timeColor || "#FF0000", self.youtubeQualityButtonNormalColor_str = self.props_obj.youtubeQualityButtonNormalColor || "#FF0000", self.youtubeQualityButtonSelectedColor_str = self.props_obj.youtubeQualityButtonSelectedColor || "#FF0000", self.posterBackgroundColor_str = self.props_obj.posterBackgroundColor || "transparent", self.showPlaylistButtonAndPlaylist_bl = self.props_obj.showPlaylistButtonAndPlaylist, self.showPlaylistButtonAndPlaylist_bl = "no" != self.showPlaylistButtonAndPlaylist_bl, self.useResumeOnPlay_bl = self.props_obj.useResumeOnPlay, self.useResumeOnPlay_bl = "yes" == self.useResumeOnPlay_bl, self.useResumeOnPlay_bl = self.props_obj.useResumeOnPlay, self.useResumeOnPlay_bl = "yes" == self.useResumeOnPlay_bl, self.showPlaylistOnFullScreen = self.props_obj.showPlaylistOnFullScreen, self.showPlaylistOnFullScreen = "yes" == self.showPlaylistOnFullScreen, self.stopAfterLastVideoHasPlayed_bl = self.props_obj.stopAfterLastVideoHasPlayed, self.stopAfterLastVideoHasPlayed_bl = "yes" == self.stopAfterLastVideoHasPlayed_bl, self.usePlaylistsSelectBox_bl = self.props_obj.usePlaylistsSelectBox, self.usePlaylistsSelectBox_bl = "yes" == self.usePlaylistsSelectBox_bl, self.executeCuepointsOnlyOnce_bl = self.props_obj.executeCuepointsOnlyOnce, self.executeCuepointsOnlyOnce_bl = "yes" == self.executeCuepointsOnlyOnce_bl, self.showPlaylistByDefault_bl = self.props_obj.showPlaylistByDefault, self.showPlaylistByDefault_bl = "no" != self.showPlaylistByDefault_bl, self.showThumbnail_bl = self.props_obj.showThumbnail, self.showThumbnail_bl = "no" != self.showThumbnail_bl, self.playAfterVideoStop_bl = self.props_obj.playAfterVideoStop, self.playAfterVideoStop_bl = "no" != self.playAfterVideoStop_bl, self.openerAlignment_str = self.props_obj.openerAlignment, self.openerEqulizerOffsetTop = self.props_obj.openerEqulizerOffsetTop || 0, self.openerEqulizerOffsetLeft = self.props_obj.openerEqulizerOffsetLeft || 0, self.showOpener_bl = self.props_obj.showOpener, self.showOpener_bl = "yes" == self.showOpener_bl, self.stickyOnScrollShowOpener_bl = self.props_obj.stickyOnScrollShowOpener, self.stickyOnScrollShowOpener_bl = "yes" == self.stickyOnScrollShowOpener_bl, self.showOpenerPlayPauseButton_bl = self.props_obj.showOpenerPlayPauseButton, self.showOpenerPlayPauseButton_bl = "yes" == self.showOpenerPlayPauseButton_bl, self.animate_bl = self.props_obj.animatePlayer, self.animate_bl = "yes" == self.animate_bl, self.showChromecastButton_bl = self.props_obj.showChromecastButton, self.showChromecastButton_bl = "yes" == self.showChromecastButton_bl, FWDUVPUtils.isChrome && !FWDUVPUtils.isLocal && -1 != location.href.indexOf("https:") || (self.showChromecastButton_bl = !1), self.showAnnotationsPositionTool_bl = self.props_obj.showAnnotationsPositionTool, self.showAnnotationsPositionTool_bl = "yes" == self.showAnnotationsPositionTool_bl, self.showAnnotationsPositionTool_bl && (self.showPlaylistByDefault_bl = !1), self.showPlaylistName_bl = self.props_obj.showPlaylistName, self.showPlaylistName_bl = "no" != self.showPlaylistName_bl, self.showSearchInput_bl = self.props_obj.showSearchInput, self.showSearchInput_bl = "no" != self.showSearchInput_bl, self.showSubtitleByDefault_bl = self.props_obj.showSubtitleByDefault, self.showSubtitleByDefault_bl = "no" != self.showSubtitleByDefault_bl, self.showSubtitleButton_bl = self.props_obj.showSubtitleButton, self.showSubtitleButton_bl = "no" != self.showSubtitleButton_bl, self.forceDisableDownloadButtonForFolder_bl = self.props_obj.forceDisableDownloadButtonForFolder, self.forceDisableDownloadButtonForFolder_bl = "yes" == self.forceDisableDownloadButtonForFolder_bl, self.normalButtonsColor_str = self.props_obj.normalHEXButtonsColor || "#FFFFFF", self.selectedButtonsColor_str = self.props_obj.selectedHEXButtonsColor || "#999999", self.playlistPosition_str = self.props_obj.playlistPosition || "bottom", test = "bottom" == self.playlistPosition_str || "right" == self.playlistPosition_str, test || (self.playlistPosition_str = "right"), self.folderVideoLabel_str = self.props_obj.folderVideoLabel || "Video ", self.logoPosition_str = self.props_obj.logoPosition || "topleft", self.logoPosition_str = String(self.logoPosition_str).toLowerCase(), test = "topleft" == self.logoPosition_str || "topright" == self.logoPosition_str || "bottomleft" == self.logoPosition_str || "bottomright" == self.logoPosition_str, test || (self.logoPosition_str = "topleft"), self.thumbnailSelectedType_str = self.props_obj.thumbnailSelectedType || "opacity", "blackAndWhite" != self.thumbnailSelectedType_str && "threshold" != self.thumbnailSelectedType_str && "opacity" != self.thumbnailSelectedType_str && (self.thumbnailSelectedType_str = "opacity"), (self.isMobile_bl || FWDUVPUtils.isIEAndLessThen9) && (self.thumbnailSelectedType_str = "opacity"), "file:" == document.location.protocol && (self.thumbnailSelectedType_str = "opacity"), self.adsButtonsPosition_str = self.props_obj.adsButtonsPosition || "left", self.adsButtonsPosition_str = String(self.adsButtonsPosition_str).toLowerCase(), test = "left" == self.adsButtonsPosition_str || "right" == self.adsButtonsPosition_str, test || (self.adsButtonsPosition_str = "left"), self.skipToVideoButtonText_str = self.props_obj.skipToVideoButtonText || "not defined", self.skipToVideoText_str = self.props_obj.skipToVideoText, self.adsTextNormalColor = self.props_obj.adsTextNormalColor || "#FF0000", self.adsTextSelectedColor = self.props_obj.adsTextSelectedColor || "#FF0000", self.adsBorderNormalColor_str = self.props_obj.adsBorderNormalColor || "#FF0000", self.adsBorderSelectedColor_str = self.props_obj.adsBorderSelectedColor || "#FF0000", self.volume = self.props_obj.volume, null == self.volume && (self.volume = 1), isNaN(self.volume) && (volume = 1), 1 < self.volume ? self.volume = 1 : self.volume <= 0 && (self.volume = 0), self.buttonsToolTipFontColor_str = self.props_obj.buttonsToolTipFontColor || "#FF0000", self.toolTipsButtonFontColor_str = self.props_obj.toolTipsButtonFontColor || "#FF0000", self.shareAndEmbedTextColor_str = self.props_obj.shareAndEmbedTextColor || "#FF0000", self.inputBackgroundColor_str = self.props_obj.inputBackgroundColor || "#FF0000", self.inputColor_str = self.props_obj.inputColor || "#FF0000", self.searchInputBackgroundColor_str = self.props_obj.searchInputBackgroundColor || "#FF0000", self.borderColor_str = self.props_obj.borderColor || "#FF0000", self.searchInputColor_str = self.props_obj.searchInputColor || "#FF0000", self.youtubeAndFolderVideoTitleColor_str = self.props_obj.youtubeAndFolderVideoTitleColor || "#FF0000", self.folderAudioSecondTitleColor_str = self.props_obj.folderAudioSecondTitleColor || "#666666", self.youtubeDescriptionColor_str = self.props_obj.youtubeDescriptionColor || "#FF0000", self.youtubeOwnerColor_str = self.props_obj.youtubeOwnerColor || "#FF0000", self.secondaryLabelsColor_str = self.props_obj.secondaryLabelsColor || "#FF0000", self.mainLabelsColor_str = self.props_obj.mainLabelsColor || "#FF0000", self.playlistBackgroundColor_str = self.props_obj.playlistBackgroundColor || "#FF0000", self.thumbnailNormalBackgroundColor_str = self.props_obj.thumbnailNormalBackgroundColor || "#FF0000", self.playlistNameColor_str = self.props_obj.playlistNameColor || "#FF0000", self.thumbnailHoverBackgroundColor_str = self.props_obj.thumbnailHoverBackgroundColor || "#FF0000", self.thumbnailDisabledBackgroundColor_str = self.props_obj.thumbnailDisabledBackgroundColor || "#FF0000", self.mainSelectorBackgroundSelectedColor = self.props_obj.mainSelectorBackgroundSelectedColor || "#FFFFFF", self.mainSelectorTextNormalColor = self.props_obj.mainSelectorTextNormalColor || "#FFFFFF", self.mainSelectorTextSelectedColor = self.props_obj.mainSelectorTextSelectedColor || "#000000", self.mainButtonBackgroundNormalColor = self.props_obj.mainButtonBackgroundNormalColor || "#212021", self.mainButtonBackgroundSelectedColor = self.props_obj.mainButtonBackgroundSelectedColor || "#FFFFFF", self.mainButtonTextNormalColor = self.props_obj.mainButtonTextNormalColor || "#FFFFFF", self.mainButtonTextSelectedColor = self.props_obj.mainButtonTextSelectedColor || "#000000", self.logoLink_str = self.props_obj.logoLink || "none", self.startAtVideo = parseInt(self.props_obj.startAtVideo) || 0, self.audioVisualizerLinesColor_str = self.props_obj.audioVisualizerLinesColor || "#0099FF", self.audioVisualizerCircleColor_str = self.props_obj.audioVisualizerCircleColor || "#FFFFFF", self.privateVideoPassword_str = self.props_obj.privateVideoPassword, self.contextMenuBackgroundColor_str = self.props_obj.contextMenuBackgroundColor || "#000000", self.contextMenuBorderColor_str = self.props_obj.contextMenuBorderColor || "#FF0000", self.contextMenuSpacerColor_str = self.props_obj.contextMenuSpacerColor || "#FF0000", self.contextMenuItemNormalColor_str = self.props_obj.contextMenuItemNormalColor || "#FF0000", self.contextMenuItemSelectedColor_str = self.props_obj.contextMenuItemSelectedColor || "#FF0000", self.contextMenuItemDisabledColor_str = self.props_obj.contextMenuItemDisabledColor || "#FF0000", self.showScriptDeveloper_bl = self.props_obj.showScriptDeveloper, self.showScriptDeveloper_bl = "yes" == self.showScriptDeveloper_bl, self.showContextmenu_bl = self.props_obj.showContextmenu, self.showContextmenu_bl = "no" != self.showContextmenu_bl, self.nextAndPrevSetButtonsMargins = self.props_obj.nextAndPrevSetButtonsMargins || 0, self.buttonsMargins = self.props_obj.buttonsMargins || 0, self.thumbnailMaxWidth = self.props_obj.thumbnailMaxWidth || 330, self.thumbnailMaxHeight = self.props_obj.thumbnailMaxHeight || 330, self.horizontalSpaceBetweenThumbnails = self.props_obj.horizontalSpaceBetweenThumbnails, self.verticalSpaceBetweenThumbnails = self.props_obj.verticalSpaceBetweenThumbnails, self.totalPlaylists = self.cats_ar.length, self.controllerHeight = self.props_obj.controllerHeight || 50, self.startSpaceBetweenButtons = self.props_obj.startSpaceBetweenButtons || 0, self.controllerHideDelay = self.props_obj.controllerHideDelay || 2, self.controllerHideDelay *= 1e3, self.spaceBetweenButtons = self.props_obj.spaceBetweenButtons || 0, self.scrubbersOffsetWidth = self.props_obj.scrubbersOffsetWidth || 0, self.mainScrubberOffestTop = self.props_obj.mainScrubberOffestTop || 0, self.volumeScrubberOffsetTopWidth = self.props_obj.volumeScrubberOffsetTopWidth || 0, self.timeOffsetLeftWidth = self.props_obj.timeOffsetLeftWidth || 0, self.timeOffsetRightWidth = self.props_obj.timeOffsetRightWidth || 0, self.timeOffsetTop = self.props_obj.timeOffsetTop || 0, self.embedWindowCloseButtonMargins = self.props_obj.embedAndInfoWindowCloseButtonMargins || 0, self.logoMargins = self.props_obj.logoMargins || 0, self.maxPlaylistItems = self.props_obj.maxPlaylistItems || 50, self.volumeScrubberHeight = self.props_obj.volumeScrubberHeight || 10, self.volumeScrubberOfsetHeight = self.props_obj.volumeScrubberOfsetHeight || 0, 200 < self.volumeScrubberHeight && (self.volumeScrubberHeight = 200), self.buttonsToolTipHideDelay = self.props_obj.buttonsToolTipHideDelay || 1.5, self.thumbnailWidth = self.props_obj.thumbnailWidth || 80, self.thumbnailWidth = Math.min(150, self.thumbnailWidth), self.thumbnailHeight = self.props_obj.thumbnailHeight || 80, self.spaceBetweenThumbnails = self.props_obj.spaceBetweenThumbnails || 0, self.thumbnailHeight = Math.min(150, self.thumbnailHeight), self.timeOffsetTop = self.props_obj.timeOffsetTop || 0, self.scrollbarOffestWidth = self.props_obj.scrollbarOffestWidth || 0, self.scollbarSpeedSensitivity = self.props_obj.scollbarSpeedSensitivity || .5, self.facebookAppId_str = self.props_obj.facebookAppId, self.aopwBorderSize = self.props_obj.aopwBorderSize || 0, self.aopwTitle = self.props_obj.aopwTitle || "Advertisement", self.aopwTitleColor_str = self.props_obj.aopwTitleColor || "#FFFFFF", self.aopwWidth = self.props_obj.aopwWidth || 200, self.aopwHeight = self.props_obj.aopwHeight || 200, self.fillEntireVideoScreen_bl = self.props_obj.fillEntireVideoScreen, self.fillEntireVideoScreen_bl = "yes" == self.fillEntireVideoScreen_bl, self.goFullScreenOnPlay_bl = self.props_obj.goFullScreenOnButtonPlay, self.goFullScreenOnPlay_bl = "yes" == self.goFullScreenOnPlay_bl, self.showContextMenu_bl = self.props_obj.showContextMenu, self.showContextMenu_bl = "no" != self.showContextMenu_bl, self.showController_bl = self.props_obj.showController, self.showController_bl = "no" != self.showController_bl, self.showButtonsToolTip_bl = self.props_obj.showButtonsToolTips, self.showButtonsToolTip_bl = "no" != self.showButtonsToolTip_bl, self.isMobile_bl && (self.showButtonsToolTip_bl = !1), self.addKeyboardSupport_bl = self.props_obj.addKeyboardSupport, self.addKeyboardSupport_bl = "no" != self.addKeyboardSupport_bl, self.playsinline = "yes" == self.props_obj.playsinline, self.useAToB = "yes" == self.props_obj.useAToB, self.atbTimeBackgroundColor = self.props_obj.atbTimeBackgroundColor || "transparent", self.atbTimeTextColorNormal = self.props_obj.atbTimeTextColorNormal || "#888888", self.atbTimeTextColorSelected = self.props_obj.atbTimeTextColorSelected || "#FFFFFF", self.atbButtonTextNormalColor = self.props_obj.atbButtonTextNormalColor || "#888888", self.atbButtonTextSelectedColor = self.props_obj.atbButtonTextSelectedColor || "#FFFFFF", self.atbButtonBackgroundNormalColor = self.props_obj.atbButtonBackgroundNormalColor || "#FFFFFF", self.atbButtonBackgroundSelectedColor = self.props_obj.atbButtonBackgroundSelectedColor || "#000000", self.addMouseWheelSupport_bl = self.props_obj.addMouseWheelSupport, self.addMouseWheelSupport_bl = "no" != self.addMouseWheelSupport_bl, self.addScrOnMM_bl = self.props_obj.addScrollOnMouseMove, self.addScrOnMM_bl = "yes" == self.addScrOnMM_bl, self.showPlaylistsSearchInput_bl = self.props_obj.showPlaylistsSearchInput, self.showPlaylistsSearchInput_bl = "yes" == self.showPlaylistsSearchInput_bl, self.inputBackgroundColor_str = self.props_obj.inputBackgroundColor || "#FFFFFF", self.inputColor_str = self.props_obj.inputColor || "#FFFFFF", self.scrubbersToolTipLabelBackgroundColor = self.props_obj.scrubbersToolTipLabelBackgroundColor || "#FFFFFF", self.scrubbersToolTipLabelFontColor = self.props_obj.scrubbersToolTipLabelFontColor || "#000000", self.autoPlay_bl = self.props_obj.autoPlay, self.autoPlay_bl = "yes" == self.autoPlay_bl, FWDUVPUtils.isMobile && (self.autoPlay_bl = !1), self.aom_bl = self.props_obj.enableAutoplayOnMobile, self.aom_bl = "yes" == self.aom_bl, self.isMobile_bl || (self.aom_bl = !1), self.autoPlay_bl && FWDUVPUtils.isFirefox && (self.aom_bl = !0), self.showNextAndPrevButtons_bl = self.props_obj.showNextAndPrevButtons, self.showNextAndPrevButtons_bl = "no" != self.showNextAndPrevButtons_bl, self.showPlaylistsButtonAndPlaylists_bl = self.props_obj.showPlaylistsButtonAndPlaylists, self.showPlaylistsButtonAndPlaylists_bl = "no" != self.showPlaylistsButtonAndPlaylists_bl, self.showEmbedButton_bl = self.props_obj.showEmbedButton, self.showEmbedButton_bl = "no" != self.showEmbedButton_bl, self.showScrubberWhenControllerIsHidden_bl = self.props_obj.showScrubberWhenControllerIsHidden, self.showScrubberWhenControllerIsHidden_bl = "no" != self.showScrubberWhenControllerIsHidden_bl, self.showMainScrubberToolTipLabel_bl = self.props_obj.showMainScrubberToolTipLabel, self.showMainScrubberToolTipLabel_bl = "yes" == self.showMainScrubberToolTipLabel_bl, self.showPlaylistsByDefault_bl = self.props_obj.showPlaylistsByDefault, self.showPlaylistsByDefault_bl = "yes" == self.showPlaylistsByDefault_bl, self.loop_bl = self.props_obj.loop, self.loop_bl = "yes" == self.loop_bl, self.shuffle_bl = self.props_obj.shuffle, self.shuffle_bl = "yes" == self.shuffle_bl, self.showLoopButton_bl = self.props_obj.showLoopButton, self.showLoopButton_bl = "no" != self.props_obj.showLoopButton, self.showShuffleButton_bl = self.props_obj.showShuffleButton, self.showShuffleButton_bl = "no" != self.props_obj.showShuffleButton, self.showDownloadVideoButton_bl = self.props_obj.showDownloadButton, self.showDownloadVideoButton_bl = "no" != self.showDownloadVideoButton_bl, self.randomizePlaylist_bl = self.props_obj.randomizePlaylist, self.randomizePlaylist_bl = "yes" == self.randomizePlaylist_bl, self.showDefaultControllerForVimeo_bl = self.props_obj.showDefaultControllerForVimeo, self.showDefaultControllerForVimeo_bl = "yes" == self.showDefaultControllerForVimeo_bl, self.showInfoButton_bl = self.props_obj.showInfoButton, self.showInfoButton_bl = "no" != self.showInfoButton_bl, self.showLogo_bl = self.props_obj.showLogo, self.showLogo_bl = "yes" == self.showLogo_bl, self.hideLogoWithController_bl = self.props_obj.hideLogoWithController, self.hideLogoWithController_bl = "yes" == self.hideLogoWithController_bl, self.showPoster_bl = self.props_obj.showPoster, self.showPoster_bl = "yes" == self.showPoster_bl, self.useVectorIcons_bl = self.props_obj.useVectorIcons, self.useVectorIcons_bl = "yes" == self.useVectorIcons_bl, self.showVolumeButton_bl = self.props_obj.showVolumeButton, self.showVolumeButton_bl = "no" != self.showVolumeButton_bl, self.showVolumeScrubber_bl = self.showVolumeButton_bl, self.showControllerWhenVideoIsStopped_bl = self.props_obj.showControllerWhenVideoIsStopped, self.showControllerWhenVideoIsStopped_bl = "yes" == self.showControllerWhenVideoIsStopped_bl, self.showNextAndPrevButtonsInController_bl = self.props_obj.showNextAndPrevButtonsInController, self.showNextAndPrevButtonsInController_bl = "yes" == self.showNextAndPrevButtonsInController_bl, self.showTime_bl = self.props_obj.showTime, self.showTime_bl = "no" != self.showTime_bl, self.showPopupAdsCloseButton_bl = self.props_obj.showPopupAdsCloseButton, self.showPopupAdsCloseButton_bl = "no" != self.showPopupAdsCloseButton_bl, self.showFullScreenButton_bl = self.props_obj.showFullScreenButton, self.showFullScreenButton_bl = "no" != self.showFullScreenButton_bl, self.showRewindButton_bl = self.props_obj.showRewindButton, self.showRewindButton_bl = "no" != self.showRewindButton_bl, self.disableVideoScrubber_bl = self.props_obj.disableVideoScrubber, self.disableVideoScrubber_bl = "yes" == self.disableVideoScrubber_bl, self.showPlaybackRateButton_bl = self.props_obj.showPlaybackRateButton, self.showPlaybackRateButton_bl = "yes" == self.showPlaybackRateButton_bl, self.defaultPlaybackRate_str = self.props_obj.defaultPlaybackRate, null == self.defaultPlaybackRate_str && (self.defaultPlaybackRate_str = 1), self.defaultPlaybackRate_ar = ["0.25", "0.5", "1", "1.25", "1.5", "2"], self.defaultPlaybackRate_ar.reverse();
                                var i = !1;
                                for (t = 0; t < self.defaultPlaybackRate_ar.length; t++) self.defaultPlaybackRate_ar[t] == self.defaultPlaybackRate_str && (i = !0, self.startAtPlaybackIndex = t);
                                if (i || (self.startAtPlaybackIndex = 3, self.defaultPlaybackRate_str = self.defaultPlaybackRate_ar[self.startAtPlaybackIndex]), self.showFullScreenButton_bl = self.props_obj.showFullScreenButton, self.showFullScreenButton_bl = "no" != self.showFullScreenButton_bl, self.repeatBackground_bl = self.props_obj.repeatBackground, self.repeatBackground_bl = "no" != self.repeatBackground_bl, self.playVideoOnlyWhenLoggedIn_bl = self.props_obj.playVideoOnlyWhenLoggedIn, self.playVideoOnlyWhenLoggedIn_bl = "yes" == self.playVideoOnlyWhenLoggedIn_bl, self.isLoggedIn_bl = self.props_obj.isLoggedIn, self.isLoggedIn_bl = "yes" == self.isLoggedIn_bl, self.loggedInMessage_str = self.props_obj.loggedInMessage || "Only loggedin users can view this video", self.showShareButton_bl = self.props_obj.showShareButton, self.showShareButton_bl = "no" != self.showShareButton_bl, self.openNewPageAtTheEndOfTheAds_bl = self.props_obj.openNewPageAtTheEndOfTheAds, self.openNewPageAtTheEndOfTheAds_bl = "yes" == self.openNewPageAtTheEndOfTheAds_bl, self.playAdsOnlyOnce_bl = self.props_obj.playAdsOnlyOnce, self.playAdsOnlyOnce_bl = "yes" == self.playAdsOnlyOnce_bl, self.startAtRandomVideo_bl = self.props_obj.startAtRandomVideo, self.startAtRandomVideo_bl = "yes" == self.startAtRandomVideo_bl, self.stopVideoWhenPlayComplete_bl = self.props_obj.stopVideoWhenPlayComplete, self.stopVideoWhenPlayComplete_bl = "yes" == self.stopVideoWhenPlayComplete_bl, self.showYoutubeQualityButton_bl = self.props_obj.showQualityButton, self.showYoutubeQualityButton_bl = "no" != self.showYoutubeQualityButton_bl, self.thumbnailsPreviewWidth = self.props_obj.thumbnailsPreviewWidth || 300, self.thumbnailsPreviewHeight = self.props_obj.thumbnailsPreviewHeight || 168, self.thumbnailsPreviewBackgroundColor = self.props_obj.thumbnailsPreviewBackgroundColor || "#000", self.thumbnailsPreviewBorderColor = self.props_obj.thumbnailsPreviewBorderColor || "#333", self.thumbnailsPreviewLabelBackgroundColor = self.props_obj.thumbnailsPreviewLabelBackgroundColor || "#FFF", self.thumbnailsPreviewLabelFontColor = self.props_obj.thumbnailsPreviewLabelFontColor || "#000", self.arrowN_str = self.skinPath_str + "combobox-arrow-normal.png", self.arrowS_str = self.skinPath_str + "combobox-arrow-selected.png", self.hlsPath_str = self.mainFolderPath_str + "java/hls.js", self.threeJsPath_str = self.mainFolderPath_str + "java/three.js", self.threeJsControlsPath_str = self.mainFolderPath_str + "java/threeControled.js", self.logoPath_str = self.skinPath_str + "logo.png", self.adLinePat_str = self.skinPath_str + "ad-line.png", self.props_obj.logoPath && (self.logoPath_str = self.props_obj.logoPath), self.mainScrubberDragLeftAddPath_str = self.skinPath_str + "scrubber-left-drag-add.png", self.mainScrubberDragMiddleAddPath_str = self.skinPath_str + "scrubber-middle-drag-add.png", self.mainPreloader_img = new Image, self.mainPreloader_img.onerror = self.onSkinLoadErrorHandler, self.mainPreloader_img.onload = self.onPreloaderLoadHandler, self.mainPreloader_img.src = self.skinPath_str + "preloader.jpg", self.skinPaths_ar = [{
                                        img: self.skipIconPath_img = new Image,
                                        src: self.skinPath_str + "skip-icon.png"
                                    }, {
                                        img: self.mainScrubberBkLeft_img = new Image,
                                        src: self.skinPath_str + "scrubber-left-background.png"
                                    }, {
                                        img: self.mainScrubberDragLeft_img = new Image,
                                        src: self.skinPath_str + "scrubber-left-drag.png"
                                    }, {
                                        img: self.mainScrubberLine_img = new Image,
                                        src: self.skinPath_str + "scrubber-line.png"
                                    }, {
                                        img: self.progressLeft_img = new Image,
                                        src: self.skinPath_str + "progress-left.png"
                                    }, {
                                        img: self.volumeScrubberDragBottom_img = new Image,
                                        src: self.skinPath_str + "volume-scrubber-bottom-drag.png"
                                    }, {
                                        img: self.popwColseN_img = new Image,
                                        src: self.skinPath_str + "popw-close-button.png"
                                    }, {
                                        img: self.embedColoseN_img = new Image,
                                        src: self.skinPath_str + "embed-close-button.png"
                                    }], self.useVectorIcons_bl || (self.skinPaths_ar.push({
                                        img: self.prevN_img = new Image,
                                        src: self.skinPath_str + "prev-video.png"
                                    }, {
                                        img: self.nextN_img = new Image,
                                        src: self.skinPath_str + "next-video.png"
                                    }, {
                                        img: self.playN_img = new Image,
                                        src: self.skinPath_str + "play.png"
                                    }, {
                                        img: self.pauseN_img = new Image,
                                        src: self.skinPath_str + "pause.png"
                                    }, {
                                        img: self.volumeN_img = new Image,
                                        src: self.skinPath_str + "volume.png"
                                    }, {
                                        img: self.largePlayN_img = new Image,
                                        src: self.skinPath_str + "large-play.png"
                                    }, {
                                        img: self.categoriesN_img = new Image,
                                        src: self.skinPath_str + "categories-button.png"
                                    }, {
                                        img: self.replayN_img = new Image,
                                        src: self.skinPath_str + "replay-button.png"
                                    }, {
                                        img: self.shuffleN_img = new Image,
                                        src: self.skinPath_str + "shuffle-button.png"
                                    }, {
                                        img: self.fullScreenN_img = new Image,
                                        src: self.skinPath_str + "full-screen.png"
                                    }, {
                                        img: self.ytbQualityN_img = new Image,
                                        src: self.skinPath_str + "youtube-quality.png"
                                    }, {
                                        img: self.shareN_img = new Image,
                                        src: self.skinPath_str + "share.png"
                                    }, {
                                        img: self.facebookN_img = new Image,
                                        src: self.skinPath_str + "facebook.png"
                                    }, {
                                        img: self.infoN_img = new Image,
                                        src: self.skinPath_str + "info-button.png"
                                    }, {
                                        img: self.downloadN_img = new Image,
                                        src: self.skinPath_str + "download-button.png"
                                    }, {
                                        img: self.normalScreenN_img = new Image,
                                        src: self.skinPath_str + "normal-screen.png"
                                    }, {
                                        img: self.embedN_img = new Image,
                                        src: self.skinPath_str + "embed.png"
                                    }, {
                                        img: self.passColoseN_img = new Image,
                                        src: self.skinPath_str + "embed-close-button.png"
                                    }, {
                                        img: self.showSubtitleNPath_img = new Image,
                                        src: self.skinPath_str + "show-subtitle-icon.png"
                                    }, {
                                        img: self.hideSubtitleNPath_img = new Image,
                                        src: self.skinPath_str + "hide-subtitle-icon.png"
                                    }, {
                                        img: self.playbackRateNPath_img = new Image,
                                        src: self.skinPath_str + "playback-rate-normal.png"
                                    }), self.useAToB && self.skinPaths_ar.push({
                                        img: self.atbNPath_img = new Image,
                                        src: self.skinPath_str + "a-to-b-button.png"
                                    })), (self.showOpener_bl && parent.displayType == FWDUVPlayer.STICKY || self.stickyOnScrollShowOpener_bl && parent.stickyOnScroll) && (self.skinPaths_ar.push({
                                        img: self.openerPauseN_img = new Image,
                                        src: self.skinPath_str + "open-pause-button-normal.png"
                                    }, {
                                        img: self.openerPlayN_img = new Image,
                                        src: self.skinPath_str + "open-play-button-normal.png"
                                    }, {
                                        img: self.animationPath_img = new Image,
                                        src: self.skinPath_str + "equalizer.png"
                                    }, {
                                        img: self.closeN_img = new Image,
                                        src: self.skinPath_str + "opener-close.png"
                                    }, {
                                        img: self.openTopN_img = new Image,
                                        src: self.skinPath_str + "open-button-normal-top.png"
                                    }, {
                                        img: self.openBottomN_img = new Image,
                                        src: self.skinPath_str + "open-button-normal-bottom.png"
                                    }), self.openerPauseS_str = self.skinPath_str + "open-pause-button-selected.png", self.openerPlayS_str = self.skinPath_str + "open-play-button-selected.png", self.openerAnimationPath_str = self.skinPath_str + "equalizer.png", self.openTopSPath_str = self.skinPath_str + "open-button-selected-top.png", self.openBottomSPath_str = self.skinPath_str + "open-button-selected-bottom.png", self.openTopSPath_str = self.skinPath_str + "open-button-selected-top.png", self.openBottomSPath_str = self.skinPath_str + "open-button-selected-bottom.png", self.closeSPath_str = self.skinPath_str + "opener-close-over.png"), self.showRewindButton_bl && (self.skinPaths_ar.push({
                                        img: self.rewindN_img = new Image,
                                        src: self.skinPath_str + "rewind.png"
                                    }), self.rewindSPath_str = self.skinPath_str + "rewind-over.png"), this.showInfoButton_bl && self.skinPaths_ar.push({
                                        img: self.infoWindowClooseN_img = new Image,
                                        src: self.skinPath_str + "embed-close-button.png"
                                    }), self.showNextAndPrevButtonsInController_bl && !self.useVectorIcons_bl && self.skinPaths_ar.push({
                                        img: self.next2N_img = new Image,
                                        src: self.skinPath_str + "next-video.png"
                                    }, {
                                        img: self.prev2N_img = new Image,
                                        src: self.skinPath_str + "prev-video.png"
                                    }), self.showShareButton_bl && !self.useVectorIcons_bl && (self.skinPaths_ar.push({
                                        img: self.shareClooseN_img = new Image,
                                        src: self.skinPath_str + "embed-close-button.png"
                                    }, {
                                        img: self.facebookN_img = new Image,
                                        src: self.skinPath_str + "facebook.png"
                                    }, {
                                        img: self.googleN_img = new Image,
                                        src: self.skinPath_str + "google-plus.png"
                                    }, {
                                        img: self.twitterN_img = new Image,
                                        src: self.skinPath_str + "twitter.png"
                                    }, {
                                        img: self.likedInkN_img = new Image,
                                        src: self.skinPath_str + "likedin.png"
                                    }, {
                                        img: self.bufferkN_img = new Image,
                                        src: self.skinPath_str + "buffer.png"
                                    }, {
                                        img: self.diggN_img = new Image,
                                        src: self.skinPath_str + "digg.png"
                                    }, {
                                        img: self.redditN_img = new Image,
                                        src: self.skinPath_str + "reddit.png"
                                    }, {
                                        img: self.thumbrlN_img = new Image,
                                        src: self.skinPath_str + "thumbrl.png"
                                    }), self.facebookSPath_str = self.skinPath_str + "facebook-over.png", self.googleSPath_str = self.skinPath_str + "google-plus-over.png", self.twitterSPath_str = self.skinPath_str + "twitter-over.png", self.likedInSPath_str = self.skinPath_str + "likedin-over.png", self.bufferSPath_str = self.skinPath_str + "buffer-over.png", self.diggSPath_str = self.skinPath_str + "digg-over.png", self.redditSPath_str = self.skinPath_str + "reddit-over.png", self.thumbrlSPath_str = self.skinPath_str + "thumbrl-over.png"), self.atbSPath_str = self.skinPath_str + "a-to-b-button-over.png", self.popwColseSPath_str = self.skinPath_str + "popw-close-button-over.png", self.popwWindowBackgroundPath_str = self.skinPath_str + "popw-window-background.png", self.popwBarBackgroundPath_str = self.skinPath_str + "popw-bar-background.png", self.playbackRateSPath_str = self.skinPath_str + "playback-rate-selected.png", self.prevSPath_str = self.skinPath_str + "prev-video-over.png", self.nextSPath_str = self.skinPath_str + "next-video-over.png", self.playSPath_str = self.skinPath_str + "play-over.png", self.pauseSPath_str = self.skinPath_str + "pause-over.png", self.bkMiddlePath_str = self.skinPath_str + "controller-middle.png", self.hdPath_str = self.skinPath_str + "hd.png", self.youtubeQualityArrowPath_str = self.skinPath_str + "youtube-quality-arrow.png", self.ytbQualityButtonPointerPath_str = self.skinPath_str + "youtube-quality-pointer.png", self.controllerBkPath_str = self.skinPath_str + "controller-background.png", self.skipIconSPath_str = self.skinPath_str + "skip-icon-over.png", self.adsBackgroundPath_str = self.skinPath_str + "ads-background.png", self.shareSPath_str = self.skinPath_str + "share-over.png", self.mainScrubberBkRightPath_str = self.skinPath_str + "scrubber-right-background.png", self.mainScrubberBkMiddlePath_str = self.skinPath_str + "scrubber-middle-background.png", self.mainScrubberDragMiddlePath_str = self.skinPath_str + "scrubber-middle-drag.png", self.volumeScrubberBkBottomPath_str = self.skinPath_str + "volume-scrubber-bottom-background.png", self.volumeScrubberBkMiddlePath_str = self.skinPath_str + "volume-scrubber-middle-background.png", self.volumeScrubberBkTopPath_str = self.skinPath_str + "volume-scrubber-top-background.png", self.volumeScrubberDragBottomPath_str = self.skinPath_str + "volume-scrubber-bottom-drag.png", self.volumeScrubberLinePath_str = self.skinPath_str + "volume-scrubber-line.png", self.volumeScrubberDragMiddlePath_str = self.skinPath_str + "volume-scrubber-middle-drag.png", self.volumeSPath_str = self.skinPath_str + "volume-over.png", self.volumeDPath_str = self.skinPath_str + "volume-disabled.png", self.categoriesSPath_str = self.skinPath_str + "categories-button-over.png", self.replaySPath_str = self.skinPath_str + "replay-button-over.png", self.toopTipBk_str = self.skinPath_str + "tooltip-background.png", self.toopTipPointer_str = self.skinPath_str + "tooltip-pointer.png", self.shufflePathS_str = self.skinPath_str + "shuffle-button-over.png", self.passButtonNPath_str = self.skinPath_str + "pass-button.png", self.passButtonSPath_str = self.skinPath_str + "pass-button-over.png", self.largePlayS_str = self.skinPath_str + "large-play-over.png", self.fullScreenSPath_str = self.skinPath_str + "full-screen-over.png", self.ytbQualitySPath_str = self.skinPath_str + "youtube-quality-over.png", self.ytbQualityDPath_str = self.skinPath_str + "youtube-quality-hd.png", self.facebookSPath_str = self.skinPath_str + "facebook-over.png", self.infoSPath_str = self.skinPath_str + "info-button-over.png", self.downloadSPath_str = self.skinPath_str + "download-button-over.png", self.normalScreenSPath_str = self.skinPath_str + "normal-screen-over.png", self.progressMiddlePath_str = self.skinPath_str + "progress-middle.png", self.embedPathS_str = self.skinPath_str + "embed-over.png", self.embedWindowClosePathS_str = self.skinPath_str + "embed-close-button-over.png", self.embedWindowInputBackgroundPath_str = self.skinPath_str + "embed-window-input-background.png", self.embedCopyButtonNPath_str = self.skinPath_str + "embed-copy-button.png", self.embedCopyButtonSPath_str = self.skinPath_str + "embed-copy-button-over.png", self.sendButtonNPath_str = self.skinPath_str + "send-button.png", self.sendButtonSPath_str = self.skinPath_str + "send-button-over.png", self.embedWindowBackground_str = self.skinPath_str + "embed-window-background.png", self.showSubtitleSPath_str = self.skinPath_str + "show-subtitle-icon-over.png", self.hideSubtitleSPath_str = self.skinPath_str + "hide-subtitle-icon-over.png", self.inputArrowPath_str = self.skinPath_str + "input-arrow.png", self.showPlaylistsButtonAndPlaylists_bl && (self.skinPaths_ar.push({
                                        img: new Image,
                                        src: self.skinPath_str + "categories-background.png"
                                    }), self.useVectorIcons_bl || self.skinPaths_ar.push({
                                        img: self.catNextN_img = new Image,
                                        src: self.skinPath_str + "categories-next-button.png"
                                    }, {
                                        img: self.catPrevN_img = new Image,
                                        src: self.skinPath_str + "categories-prev-button.png"
                                    }, {
                                        img: self.catCloseN_img = new Image,
                                        src: self.skinPath_str + "categories-close-button.png"
                                    }), self.catBkPath_str = self.skinPath_str + "categories-background.png", self.catThumbBkPath_str = self.skinPath_str + "categories-thumbnail-background.png", self.catThumbBkTextPath_str = self.skinPath_str + "categories-thumbnail-text-backgorund.png", self.catNextSPath_str = self.skinPath_str + "categories-next-button-over.png", self.catPrevSPath_str = self.skinPath_str + "categories-prev-button-over.png", self.catCloseSPath_str = self.skinPath_str + "categories-close-button-over.png"), self.popupAddCloseNPath_str = self.skinPath_str + "close-button-normal.png", self.popupAddCloseSPath_str = self.skinPath_str + "close-button-selected.png", self.annotationAddCloseNPath_str = self.skinPath_str + "annotation-close-button-normal.png", self.annotationAddCloseSPath_str = self.skinPath_str + "annotation-close-button-selected.png", self.showPlaylistButtonAndPlaylist_bl) self.playlistThumbnailsBkPath_str = self.skinPath_str + "playlist-thumbnail-background.png", self.playlistBkPath_str = self.skinPath_str + "playlist-background.png", "bottom" == self.playlistPosition_str ? (self.skinPaths_ar.push({
                                    img: self.hidePlaylistN_img = new Image,
                                    src: self.skinPath_str + "hide-horizontal-playlist.png"
                                }, {
                                    img: self.showPlaylistN_img = new Image,
                                    src: self.skinPath_str + "show-horizontal-playlist.png"
                                }), self.hidePlaylistSPath_str = self.skinPath_str + "hide-horizontal-playlist-over.png", self.showPlaylistSPath_str = self.skinPath_str + "show-horizontal-playlist-over.png") : (self.skinPaths_ar.push({
                                    img: self.hidePlaylistN_img = new Image,
                                    src: self.skinPath_str + "hide-vertical-playlist.png"
                                }, {
                                    img: self.showPlaylistN_img = new Image,
                                    src: self.skinPath_str + "show-vertical-playlist.png"
                                }), self.hidePlaylistSPath_str = self.skinPath_str + "hide-vertical-playlist-over.png", self.showPlaylistSPath_str = self.skinPath_str + "show-vertical-playlist-over.png"), self.skinPaths_ar.push({
                                    img: self.scrBkTop_img = new Image,
                                    src: self.skinPath_str + "playlist-scrollbar-background-top.png"
                                }, {
                                    img: self.scrDragTop_img = new Image,
                                    src: self.skinPath_str + "playlist-scrollbar-drag-top.png"
                                }, {
                                    img: self.scrLinesN_img = new Image,
                                    src: self.skinPath_str + "playlist-scrollbar-lines.png"
                                }), self.scrBkMiddlePath_str = self.skinPath_str + "playlist-scrollbar-background-middle.png", self.scrBkBottomPath_str = self.skinPath_str + "playlist-scrollbar-background-bottom.png", self.scrDragMiddlePath_str = self.skinPath_str + "playlist-scrollbar-drag-middle.png", self.scrDragBottomPath_str = self.skinPath_str + "playlist-scrollbar-drag-bottom.png", self.scrLinesSPath_str = self.skinPath_str + "playlist-scrollbar-lines-over.png", self.inputArrowPath_str = self.skinPath_str + "input-arrow.png";
                                self.showChromecastButton_bl && (self.skinPaths_ar.push({
                                    img: self.castN_img = new Image,
                                    src: self.skinPath_str + "cast.png"
                                }, {
                                    img: self.uncastN_img = new Image,
                                    src: self.skinPath_str + "uncast.png"
                                }), self.castSPath_str = self.skinPath_str + "cast-over.png", self.uncastSPath_str = self.skinPath_str + "uncast-over.png"), self.totalGraphics = self.skinPaths_ar.length
                            } else setTimeout(function() {
                                null != self && (errorMessage_str = "At least one playlist is required!", self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                                    text: errorMessage_str
                                }))
                            }, 50)
                        } else setTimeout(function() {
                            null != self && (errorMessage_str = "The playlist with the id <font color='#ff0000'>" + self.categoriesId_str + "</font> is not found!", self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                                text: errorMessage_str
                            }))
                        }, 50);
            else setTimeout(function() {
                null != self && (errorMessage_str = "The <font color='#ff0000'>skinPath</font> property is not defined in the constructor function!", self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: errorMessage_str
                }))
            }, 50);
            else setTimeout(function() {
                null != self && (errorMessage_str = "The <font color='#ff0000'>mainFolderPath</font> property is not defined in the constructor function!", self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: errorMessage_str
                }))
            }, 50);
            else setTimeout(function() {
                null != self && (errorMessage_str = "The <font color='#ff0000'>playlistsId</font> property is not defined in the constructor function!", self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: errorMessage_str
                }))
            }, 50)
        }, this.onPreloaderLoadHandler = function() {
            self.countLoadedSCript = 0, self.scripts = [], self.useAToB && self.scripts.push("FWDUVPATB.js"), self.thumbnailsPreview && self.scripts.push("FWDUVPThumbnailsPreview.js"), self.showChromecastButton_bl && (self.scripts.push("https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1"), self.scripts.push("FWDUVPCC.js")), self.totalScripts = self.scripts.length, self.dispatchEvent(FWDUVPData.PRELOADER_LOAD_DONE), self.loadPlugin()
        }, self.loadPlugin = function() {
            if (self.countLoadedSCript == self.totalScripts) self.loadSkin();
            else {
                var e = document.createElement("script"),
                    t = self.scripts[self.countLoadedSCript];
                document.head.appendChild(e), -1 != t.indexOf("gstatic") ? e.src = t : e.src = self.mainFolderPath_str + "java/" + t, e.onload = self.loadPlugin, e.onerror = function(e) {
                    console.log(e), "FWDUVPATB.js" == t ? self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: 'You have enabled the A to B plugin<br>A to B js file named <font color="#FF0000">FWDUVPATB.js</font> is not found. Please make sure that the content folder contains the java folder that contains the <font color="#FF0000">FWDUVPATB.js</font> file. '
                    }) : "FWDUVPThumbnailsPreview.js" == t ? self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: 'You have enabled the thumbnal preview plugin<br>thumbnail preview js file named <font color="#FF0000">FWDUVPThumbnailsPreview.js</font> is not found. Please make sure that the content folder contains the java folder that contains the <font color="#FF0000">FWDUVPThumbnailsPreview.js</font> file. '
                    }) : "FWDUVPCC.js" == t ? self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: 'You have enabled the chromecast plugin<br>js file named <font color="#FF0000">FWDUVPCC.js</font> is not found. Please make sure that the content folder contains the java folder that contains the <font color="#FF0000">FWDUVPCC.js</font> file.'
                    }) : -1 != t.indexOf("gstatic") && self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: 'Choromecast framework javascript file can\'t be loaded<font color="#FF0000"> ' + t + " </font>"
                    })
                }
            }
            self.countLoadedSCript++
        }, self.loadSkin = function() {
            for (var e, t, o = 0; o < self.totalGraphics; o++) e = self.skinPaths_ar[o].img, t = self.skinPaths_ar[o].src, e.onload = self.onSkinLoadHandler, e.onerror = self.onSkinLoadErrorHandler, e.src = t
        }, this.onSkinLoadHandler = function(e) {
            self.countLoadedSkinImages++, self.countLoadedSkinImages == self.totalGraphics && setTimeout(function() {
                self.dispatchEvent(FWDUVPData.SKIN_LOAD_COMPLETE)
            }, 50)
        }, self.onSkinLoadErrorHandler = function(e) {
            FWDUVPUtils.isIEAndLessThen9 ? message = "Graphics image not found!" : message = "The skin icon with label <font color='#ff0000'>" + e.target.src + "</font> can't be loaded, check path!", window.console && console.log(e);
            var t = {
                text: message
            };
            setTimeout(function() {
                self.dispatchEvent(FWDUVPData.LOAD_ERROR, t)
            }, 50)
        }, this.downloadVideo = function(e, t) {
            if (FWDUVPUtils.isLocal) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Downloading video files local is not allowed or possible! To function properly please test online."
                }), self.isPlaylistDispatchingError_bl = !1
            }, 50));
            if (!e) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Not allowed to download this video!"
                }), self.isPlaylistDispatchingError_bl = !1
            }, 50));
            if (-1 == String(e.indexOf(".mp4"))) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Only mp4 video files hosted on your server can be downloaded."
                }), self.isPlaylistDispatchingError_bl = !1
            }, 50));
            var o = e,
                s = location.origin,
                i = location.pathname;
            if (-1 != i.indexOf(".") && (i = i.substr(0, i.lastIndexOf("/") + 1)), -1 == e.indexOf("http:") && -1 == e.indexOf("https:") && (e = s + i + e), t) {
                40 < (t = (t = decodeURIComponent(t)).replace(/[^A-Z0-9\-\_\.]+/gi, "_")).length && (t = t.substr(0, 40) + "..."), /\.(mp4)$/i.test(t) || (t += ".mp4"), e = FWDUVPUtils.getValidSource(e);
                var n = self.videoDownloaderPath_str;
                if (self.dlIframe || (self.dlIframe = document.createElement("IFRAME"), self.dlIframe.style.display = "none", document.documentElement.appendChild(self.dlIframe)), self.isMobile_bl && !FWDUVPUtils.isAndroid) {
                    if (self.openDownloadLinkOnMobile_bl) return void window.open(o, "_blank");
                    var l = self.getValidEmail();
                    if (!l) return;
                    if (null != self.emailXHR) {
                        try {
                            self.emailXHR.abort()
                        } catch (e) {}
                        self.emailXHR.onreadystatechange = null, self.emailXHR.onerror = null, self.emailXHR = null
                    }
                    return self.emailXHR = new XMLHttpRequest, self.emailXHR.onreadystatechange = function(e) {
                        4 == self.emailXHR.readyState && (200 == self.emailXHR.status ? "sent" == self.emailXHR.responseText ? alert("Email sent.") : alert("Error sending email, this is a server side error, the php file can't send the email!") : alert("Error sending email: " + self.emailXHR.status + ": " + self.emailXHR.statusText))
                    }, self.emailXHR.onerror = function(e) {
                        try {
                            window.console && console.log(e), window.console && console.log(e.message)
                        } catch (e) {}
                        alert("Error sending email: " + e.message)
                    }, self.emailXHR.open("get", self.mailPath_str + "?mail=" + l + "&name=" + t + "&path=" + e, !0), void self.emailXHR.send()
                }
                self.dlIframe.src = n + "?path=" + e + "&name=" + t
            }
        }, this.getValidEmail = function() {
            for (var e = prompt("Please enter your email address where the video download link will be sent:"), t = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/; !t.test(e) || "" == e;) {
                if (null === e) return;
                e = prompt("Please enter a valid email address:")
            }
            return e
        }, this.loadPlaylist = function(e) {
            if (self.stopToLoadPlaylist(), !self.isPlaylistDispatchingError_bl) {
                clearTimeout(self.dispatchPlaylistLoadCompleteWidthDelayId_to);
                var t = self.catsRef_ar[e];
                if (void 0 === t) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                    self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: "<font color='#ff0000'>loadPlaylist()</font> - Please specify a DOM playlist id or youtube playlist id!"
                    }), self.isPlaylistDispatchingError_bl = !1
                }, 50));
                if (null === t) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                    self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: "The playlist with id <font color='#ff0000'>" + self.cats_ar[e].source + "</font> is not found in the DOM."
                    }), self.isPlaylistDispatchingError_bl = !1
                }, 50));
                if (!isNaN(t)) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                    self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: "<font color='#ff0000'>loadPlaylist()</font> - The parameter must be of type string!"
                    }), self.isPlaylistDispatchingError_bl = !1
                }, 50));
                if (self.resetYutubeVimeoPlaylistLoader(), self.isYoutbe_bl = !1, self.loadFromFolder_bl = !1, self.isVimeoAlbum_bl = !1, self.playlist_ar = [], t.length)
                    if (-1 != t.indexOf("list=") || -1 != t.indexOf("youtube.")) self.isYoutbe_bl = !0, self.loadYoutubePlaylist(t);
                    else if (-1 != t.indexOf("vimeo.com")) self.isVimeo_bl = !0, self.loadVimeoPlaylist(t, self.cats_ar[e].vimeoUserId, self.cats_ar[e].clientId, self.cats_ar[e].vimeoSecret, self.cats_ar[e].vimeoToken);
                else {
                    if (-1 != t.indexOf("list=")) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                        self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                            text: "Loading youtube playlist is only possible by setting <font color='#ff0000'>useYoutube=\"yes\"</font>."
                        }), self.isPlaylistDispatchingError_bl = !1
                    }, 50)); - 1 != t.indexOf("folder=") ? self.loadFolderPlaylist(t) : -1 == t.indexOf(".xml") && -1 == t.indexOf("http:") && -1 == t.indexOf("https:") && -1 == t.indexOf("www.") || self.loadXMLPlaylist(t)
                } else self.parseDOMPlaylist(t, self.cats_ar[e].source)
            }
        }, this.loadXMLPlaylist = function(e) {
            if (!self.isPlaylistDispatchingError_bl) {
                if ("file:" == document.location.protocol) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                    self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: "Loading XML files local is not allowed or possible!. To function properly please test online."
                    }), self.isPlaylistDispatchingError_bl = !1
                }, 50));
                self.sourceURL_str = e, self.xhr = new XMLHttpRequest, self.xhr.onreadystatechange = self.ajaxOnLoadHandler, self.xhr.onerror = self.ajaxOnErrorHandler;
                try {
                    self.xhr.open("get", self.proxyPath_str + "?url=" + self.sourceURL_str + "&rand=" + parseInt(99999999 * Math.random()), !0), self.xhr.setRequestHeader("Content-Type", "text/xml"), self.xhr.send()
                } catch (e) {
                    var t = e;
                    e && e.message && (t = e.message), self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: "XML file can't be loaded! <font color='#ff0000'>" + self.sourceURL_str + "</font>. " + t
                    })
                }
            }
        }, this.loadFolderPlaylist = function(e) {
            if (!self.isPlaylistDispatchingError_bl) {
                if ("file:" == document.location.protocol) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                    self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: "Creating a video playlist from a folder is not allowed or possible local! To function properly please test online."
                    }), self.isPlaylistDispatchingError_bl = !1
                }, 50));
                self.loadFromFolder_bl = !0, self.sourceURL_str = e.substr(e.indexOf("=") + 1), self.xhr = new XMLHttpRequest, self.xhr.onreadystatechange = self.ajaxOnLoadHandler, self.xhr.onerror = self.ajaxOnErrorHandler;
                try {
                    self.xhr.open("get", self.proxyFolderPath_str + "?dir=" + encodeURIComponent(self.sourceURL_str) + "&videoLabel=" + self.folderVideoLabel_str + "&rand=" + parseInt(9999999 * Math.random()), !0), self.xhr.send()
                } catch (e) {
                    e && e.message && e.message, self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: "Folder proxy file path is not found: <font color='#ff0000'>" + self.proxyFolderPath_str + "</font>"
                    })
                }
            }
        }, this.loadVimeoPlaylist = function(e, t, o, s, i) {
            if ("file:" == document.location.protocol) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Loading Vimeo albums local is not allowed or possible! To function properly please test online."
                }), self.isPlaylistDispatchingError_bl = !1
            }, 50));
            self.isVimeoAlbum_bl = !0, e && (self.vimeoAlbumURL = e), t && (self.userId = t), o && (self.clientId = atob(o)), s && (self.vimeoSecret = atob(s)), i && (self.vimeoToken = atob(i));
            var n = self.vimeoAlbumURL.match(/\/[\d]+/gi);
            n = n[0].substr(1);
            var l = "";
            self.clientId && (l = "&client_id=" + self.clientId + "&vimeo_secret=" + self.vimeoSecret + "&vimeo_token=" + self.vimeoToken), self.nextPageToken_str ? self.sourceURL_str = self.mainFolderPath_str + "vimeo/vimeo_data.php?rand=" + Math.round(99999999 * Math.random()) + "&type=vimeo_user_album&user=" + self.userId + "&album_id=" + n + "&page=" + self.nextPageToken_str + "&per_page=50" + l : self.sourceURL_str = self.mainFolderPath_str + "vimeo/vimeo_data.php?rand=" + Math.round(99999999 * Math.random()) + "&type=vimeo_user_album&user=" + self.userId + "&album_id=" + n + "&page=1&per_page=50" + l, self.xhr = new XMLHttpRequest, self.xhr.onreadystatechange = self.ajaxOnLoadHandler, self.xhr.onerror = self.ajaxOnErrorHandler;
            try {
                self.xhr.open("get", self.sourceURL_str, !0), self.xhr.send()
            } catch (e) {
                e && e.message && e.message, self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Error loading vimeo album! <font color='#ff0000'>" + self.vimeoAlbumURL + "</font>"
                })
            }
        }, this.parseVimeoPlaylist = function(e) {
            if (self.stopToLoadPlaylist(), e.body.error) self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                text: e.body.error + " " + e.body.developer_message
            });
            else {
                var t, o;
                e = e.body, self.vimeoObject_ar || (self.vimeoObject_ar = []);
                for (var s = 0; s < e.data.length; s++) self.vimeoObject_ar.push(e.data[s]);
                if (t = self.vimeoObject_ar.length, e.paging.next) return self.nextPageToken_str = Number(e.page) + 1, void self.loadVimeoPlaylist();
                for (s = 0; s < t; s++) {
                    var i = {},
                        n = (o = self.vimeoObject_ar[s]).uri.match(/\/[\d]+/gi)[0].substr(1);
                    i.startAtVideo = 0, i.videoSource = [{
                        source: "https://vimeo.com/" + n
                    }], i.gaStr = o.name, i.title = "<p class='ytbChangeColor' style='color:" + self.youtubeAndFolderVideoTitleColor_str + ";margin:0px;padding:0px;margin-top:2px;margin-bottom:4x;line-height:16px;'>" + o.name + "</p>";
                    var l = o.description;
                    l = (l = 165 < i.title.length ? l.substr(0, 60) : l.substr(0, 90)).substr(0, l.lastIndexOf(" ")) + " ...", i.titleText = o.name, i.titleText = o.name, i.desc = void 0, i.desc = "<p style='color:" + self.youtubeAndFolderVideoTitleColor_str + ";margin:10px;margin-top:12px;margin-bottom:0px;padding:0px;'>" + o.name + "</p><p style='color:" + self.youtubeDescriptionColor_str + ";margin:0;padding:10px;padding-top:8px;line-height:16px;'>" + o.description + "</p>", i.downloadable = !1;
                    try {
                        i.thumbSource = o.pictures.sizes[2].link
                    } catch (e) {}
                    i.posterSource = "none", i.downloadable = !1, self.playlist_ar.push(i)
                }
                self.randomizePlaylist_bl && (self.playlist_ar = FWDUVPUtils.randomizeArray(self.playlist_ar)), self.maxPlaylistItems < self.playlist_ar.length && (self.playlist_ar = self.playlist_ar.splice(0, self.maxPlaylistItems)), clearTimeout(self.dispatchPlaylistLoadCompleteWidthDelayId_to), self.dispatchPlaylistLoadCompleteWidthDelayId_to = setTimeout(function() {
                    self.dispatchEvent(FWDUVPData.PLAYLIST_LOAD_COMPLETE)
                }, 50), self.isDataLoaded_bl = !0
            }
        }, this.loadYoutubePlaylist = function(e) {
            if (!self.isPlaylistDispatchingError_bl || self.isYoutbe_bl) {
                if (self.isChannel = -1 != e.indexOf("channel/"), self.url = e, !self.youtubeUrl_str) {
                    if (-1 != e.indexOf("list=")) var t = /list=(.*?)(?:&|$)/i.exec(e);
                    else t = /channel\/(.*?)(?:&|$)/i.exec(e);
                    e = t[1], self.youtubeUrl_str = e
                }
                if (self.nextPageToken_str ? self.isChannel ? self.sourceURL_str = "https://www.googleapis.com/youtube/v3/search?part=snippet&pageToken=" + self.nextPageToken_str + "&channelId=" + self.youtubeUrl_str + "&key=AIzaSyAlyhJ-C5POyo4hofPh3b7ECAxWy6t6lyg&maxResults=50&callback=" + parent.instanceName_str + ".data.parseYoutubePlaylist" : self.sourceURL_str = "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&pageToken=" + self.nextPageToken_str + "&playlistId=" + self.youtubeUrl_str + "&key=AIzaSyAlyhJ-C5POyo4hofPh3b7ECAxWy6t6lyg&maxResults=50&callback=" + parent.instanceName_str + ".data.parseYoutubePlaylist" : self.isChannel ? self.sourceURL_str = "https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=" + self.youtubeUrl_str + "&key=AIzaSyAlyhJ-C5POyo4hofPh3b7ECAxWy6t6lyg&maxResults=50&callback=" + parent.instanceName_str + ".data.parseYoutubePlaylist" : self.sourceURL_str = "https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=" + self.youtubeUrl_str + "&key=AIzaSyAlyhJ-C5POyo4hofPh3b7ECAxWy6t6lyg&maxResults=50&callback=" + parent.instanceName_str + ".data.parseYoutubePlaylist", null == self.scs_el) try {
                    self.scs_el = document.createElement("script"), self.scs_el.src = self.sourceURL_str, self.scs_el.id = parent.instanceName_str + ".data.parseYoutubePlaylist", document.documentElement.appendChild(self.scs_el)
                } catch (e) {}
                self.JSONPRequestTimeoutId_to = setTimeout(function() {
                    var e;
                    self.isChannel && (e = "channel"), self.JSONPRequestTimeoutError("Error loading youtube " + e + "!<font color='#ff0000'>" + self.youtubeUrl_str + "</font>")
                }, 6e3)
            }
        }, this.JSONPRequestTimeoutError = function(e) {
            self.stopToLoadPlaylist(), self.isPlaylistDispatchingError_bl = !0, showLoadPlaylistErrorId_to = setTimeout(function() {
                self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: e
                }), self.isPlaylistDispatchingError_bl = !1
            }, 50)
        }, this.resetYutubeVimeoPlaylistLoader = function() {
            self.isYoutbe_bl = !1, self.youtubeObject_ar = null, self.vimeoObject_ar = null, self.nextPageToken_str = null, self.youtubeUrl_str = null
        }, this.ajaxOnErrorHandler = function(e) {
            try {
                window.console && console.log(e), window.console && console.log(e.message)
            } catch (e) {}
            self.isVimeoAlbum_bl ? self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                text: "Error loading vimeo album! <font color='#ff0000'>" + self.vimeoAlbumURL + "</font>"
            }) : self.loadFromFolder_bl ? self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                text: "Error loading file : <font color='#ff0000'>" + self.proxyFolderPath_str + "</font>. Make sure the path is correct"
            }) : self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                text: "Error loading file : <font color='#ff0000'>" + self.proxyPath_str + "</font>. Make sure the path is correct"
            })
        }, this.ajaxOnLoadHandler = function(e) {
            var response, isXML = !1;
            if (4 == self.xhr.readyState)
                if (404 == self.xhr.status) self.isVimeoAlbum_bl ? self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Error loading vimeo album! <font color='#ff0000'>" + self.vimeoAlbumURL + "</font>"
                }) : self.loadFromFolder_bl ? self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Folder proxy file path is not found: <font color='#ff0000'>" + self.proxyFolderPath_str + "</font>"
                }) : self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Proxy file path is not found: <font color='#ff0000'>" + self.proxyPath_str + "</font>"
                });
                else if (408 == self.xhr.status) self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                text: "Server has timeout!"
            });
            else if (200 == self.xhr.status) {
                if (-1 != self.xhr.responseText.indexOf("<b>Warning</b>:")) return void self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Error loading folder: <font color='#ff0000'>" + self.sourceURL_str + "</font>. Make sure that the folder path is correct!"
                });
                response = window.JSON ? JSON.parse(self.xhr.responseText) : eval("(" + self.xhr.responseText + ")"), response.body ? self.parseVimeoPlaylist(response) : response.folder ? self.parseFolderJSON(response) : response.li ? self.parseXML(response) : response.error && self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                    text: "Error loading file: <font color='#ff0000'>" + self.sourceURL_str + "</font>. Make sure the file path (xml or podcast) is correct and well formatted!"
                })
            }
        }, this.parseYoutubePlaylist = function(e) {
            if (!self.isPlaylistDispatchingError_bl && self.isYoutbe_bl) {
                var t, o, s;
                if (e.error) return self.isChannel && (t = "channel"), self.JSONPRequestTimeoutError("Error loading youtube " + t + "! <font color='#ff0000'>" + self.youtubeUrl_str + "</font>"), void(console && console.log(e));
                self.playlist_ar = [], self.youtubeObject_ar || (self.youtubeObject_ar = []);
                for (var i = 0; i < e.items.length; i++) self.youtubeObject_ar.push(e.items[i]);
                if (o = self.youtubeObject_ar.length, self.stopToLoadPlaylist(), e.nextPageToken) return self.nextPageToken_str = e.nextPageToken, void self.loadYoutubePlaylist(self.url);
                for (i = 0; i < o; i++) {
                    var n = {};
                    if ((s = self.youtubeObject_ar[i]).snippet.thumbnails) {
                        self.isChannel ? n.videoSource = s.id.videoId : n.videoSource = s.snippet.resourceId.videoId, n.startAtVideo = 0, n.videoSource = [{
                            source: "https://www.youtube.com/watch?v=" + n.videoSource
                        }], n.owner = s.snippet.channelTitle, n.gaStr = s.snippet.title, n.title = "<p class='ytbChangeColor' style='color:" + self.youtubeAndFolderVideoTitleColor_str + ";margin:0px;padding:0px;margin-top:2px;margin-bottom:4x;line-height:16px;'>" + s.snippet.title + "</p>";
                        var l = s.snippet.description;
                        l = (l = 165 < n.title.length ? l.substr(0, 60) : l.substr(0, 90)).substr(0, l.lastIndexOf(" ")) + " ...", n.title += "<p style='color:" + self.youtubeOwnerColor_str + ";margin:0px;padding:0px;margin-top:6px;margin-bottom:4x;line-height:16px;'> " + l + "</p>", n.titleText = s.snippet.title, n.titleText = s.snippet.title, n.desc = void 0, n.desc = "<p style='color:" + self.youtubeAndFolderVideoTitleColor_str + ";margin:10px;margin-top:12px;margin-bottom:0px;padding:0px;'>" + s.snippet.title + "</p><p style='color:" + self.youtubeDescriptionColor_str + ";margin:0;padding:10px;padding-top:8px;line-height:16px;'>" + s.snippet.description + "</p>", n.downloadable = !1;
                        try {
                            n.thumbSource = s.snippet.thumbnails.default.url
                        } catch (e) {}
                        n.posterSource = "none", -1 == s.snippet.title.indexOf("eleted video") && -1 == s.snippet.title.indexOf("his video is unavailable") && self.playlist_ar.push(n)
                    }
                }
                self.randomizePlaylist_bl && (self.playlist_ar = FWDUVPUtils.randomizeArray(self.playlist_ar)), self.maxPlaylistItems < self.playlist_ar.length && (self.playlist_ar = self.playlist_ar.splice(0, self.maxPlaylistItems)), clearTimeout(self.dispatchPlaylistLoadCompleteWidthDelayId_to), self.dispatchPlaylistLoadCompleteWidthDelayId_to = setTimeout(function() {
                    self.dispatchEvent(FWDUVPData.PLAYLIST_LOAD_COMPLETE)
                }, 50), self.isDataLoaded_bl = !0
            }
        }, this.setYoutubePlaylistHEXColor = function(e) {
            self.youtubeAndFolderVideoTitleColor_str = e
        }, this.closeJsonPLoader = function() {
            clearTimeout(self.JSONPRequestTimeoutId_to)
        }, this.parseDOMPlaylist = function(element, id) {
            if (!self.isPlaylistDispatchingError_bl) {
                var children_ar = FWDUVPUtils.getChildren(element),
                    totalChildren = children_ar.length,
                    child, has360Video = !1;
                if (self.playlist_ar = [], 0 != totalChildren) {
                    for (var i = 0; i < totalChildren; i++) {
                        var obj = {},
                            adsObj, annotations_ar;
                        if (child = children_ar[i], !FWDUVPUtils.hasAttribute(child, "data-thumb-source")) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                            self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                                text: "Attribute <font color='#ff0000'>data-thumb-source</font> is required in the playlist at position <font color='#ff0000'>" + (i + 1)
                            })
                        }, 50));
                        if (!FWDUVPUtils.hasAttribute(child, "data-video-source")) return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                            self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                                text: "Attribute <font color='#ff0000'>data-video-source</font> is required in the playlist at position <font color='#ff0000'>" + (i + 1)
                            })
                        }, 50));
                        if (obj.thumbSource = encodeURI(FWDUVPUtils.getAttributeValue(child, "data-thumb-source")), obj.videoSource = FWDUVPUtils.getAttributeValue(child, "data-video-source"), obj.dataPlaybackRate = FWDUVPUtils.getAttributeValue(child, "data-playback-rate"), obj.startAtVideo = FWDUVPUtils.getAttributeValue(child, "data-start-at-video") || 0, obj.isLive = FWDUVPUtils.getAttributeValue(child, "data-is-live"), obj.atb = "yes" == FWDUVPUtils.getAttributeValue(child, "data-use-a-to-b"), obj.thumbnailsPreview = FWDUVPUtils.getAttributeValue(child, "data-thumbnails-preview"), self.useAToB || (obj.atb = !1), "yes" == obj.isLive ? obj.isLive = !0 : obj.isLive = !1, obj.isPrivate = FWDUVPUtils.getAttributeValue(child, "data-is-private"), "yes" == obj.isPrivate ? obj.isPrivate = !0 : obj.isPrivate = !1, obj.redirectURL = FWDUVPUtils.getAttributeValue(child, "data-redirect-url"), obj.redirectTarget = FWDUVPUtils.getAttributeValue(child, "data-redirect-target"), obj.privateVideoPassword_str = FWDUVPUtils.getAttributeValue(child, "data-private-video-password"), obj.startAtTime = FWDUVPUtils.getAttributeValue(child, "data-start-at-time"), "00:00:00" != obj.startAtTime && FWDUVPUtils.checkTime(obj.startAtTime) || (obj.startAtTime = void 0), obj.stopAtTime = FWDUVPUtils.getAttributeValue(child, "data-stop-at-time"), "00:00:00" != obj.stopAtTime && FWDUVPUtils.checkTime(obj.stopAtTime) || (obj.stopAtTime = void 0), -1 != obj.videoSource.indexOf("{source:")) try {
                            obj.videoLabels_ar = [], obj.videoSource = eval(obj.videoSource);
                            for (var m = 0; m < obj.videoSource.length; m++) obj.videoLabels_ar[m] = obj.videoSource[m].label;
                            for (var m = 0; m < obj.videoSource.length; m++) {
                                var src = obj.videoSource[m].source; - 1 != src.indexOf("encrypt:") && (src = atob(src.substr(8))), obj.videoSource[m].source = FWDUVPUtils.getValidSource(src)
                            }
                            for (var m = 0; m < obj.videoSource.length; m++) obj.videoSource[m].is360 = obj.videoSource[m].is360, "yes" == obj.videoSource[m].is360 && (obj.videoSource[m].is360 = !0), "no" == obj.videoSource[m].is360 && (obj.videoSource[m].is360 = !1), 1 == obj.videoSource[m].is360 && (has360Video = !0);
                            obj.videoLabels_ar.reverse()
                        } catch (e) {
                            return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                                self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                                    text: "Please make sure that the <font color='#ff0000'>data-video-source</font> attribute contains an array of videos at position <font color='#ff0000'>" + (i + 1) + "</font>"
                                })
                            }, 50))
                        } else src = obj.videoSource, -1 != src.indexOf("encrypt:") && (src = atob(src.substr(8))), obj.videoSource = [{
                            source: FWDUVPUtils.getValidSource(src)
                        }];
                        if (FWDUVPUtils.hasAttribute(child, "data-subtitle-soruce"))
                            if (obj.subtitleSource = FWDUVPUtils.getAttributeValue(child, "data-subtitle-soruce"), -1 != obj.subtitleSource.indexOf("{source:")) {
                                if (obj.startAtSubtitle = FWDUVPUtils.getAttributeValue(child, "data-start-at-subtitle") || 0, -1 != obj.subtitleSource.indexOf("{source:")) {
                                    try {
                                        obj.subtitleSource = eval(obj.subtitleSource)
                                    } catch (e) {
                                        return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                                            self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                                                text: "Please make sure that the <font color='#ff0000'>data-subtitle-source</font> attribute contains an array of subtitles at position <font color='#ff0000'>" + (i + 1) + "</font>"
                                            })
                                        }, 50))
                                    }
                                    obj.subtitleSource.splice(0, 0, {
                                        source: "none",
                                        label: self.subtitlesOffLabel_str
                                    }), obj.subtitleSource.reverse()
                                }
                            } else obj.subtitleSource = [{
                                source: obj.subtitleSource
                            }];
                        obj.dataAdvertisementOnPauseSource = FWDUVPUtils.getAttributeValue(child, "data-advertisement-on-pause-source"), obj.scrubAtTimeAtFirstPlay = FWDUVPUtils.getAttributeValue(child, "data-scrub-at-time-at-first-play") || "none", /^((?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d$)/g.test(obj.scrubAtTimeAtFirstPlay) ? obj.scrubAtTimeAtFirstPlay = FWDUVPUtils.getSecondsFromString(obj.scrubAtTimeAtFirstPlay) : obj.scrubAtTimeAtFirstPlay = void 0, FWDUVPUtils.hasAttribute(child, "data-poster-source") ? obj.posterSource = encodeURI(FWDUVPUtils.getAttributeValue(child, "data-poster-source")) : obj.posterSource = "none", obj.downloadPath = obj.videoSource[obj.startAtVideo], FWDUVPUtils.hasAttribute(child, "data-downloadable") && self.showDownloadVideoButton_bl ? (obj.downloadable = "yes" == FWDUVPUtils.getAttributeValue(child, "data-downloadable"), -1 == obj.downloadPath.source.indexOf(".") && (obj.downloadable = !1)) : obj.downloadable = !1;
                        for (var mainPopupAds_ar = FWDUVPUtils.getChildren(child), tempPopupAds_ar, popupAds_ar, popupOrAnnotationChild, finalPopupChild, popupObj, k = 0; k < mainPopupAds_ar.length; k++) {
                            if (popupOrAnnotationChild = mainPopupAds_ar[k], FWDUVPUtils.hasAttribute(popupOrAnnotationChild, "data-add-popup")) {
                                tempPopupAds_ar = FWDUVPUtils.getChildren(popupOrAnnotationChild), popupAds_ar = [];
                                for (var x = 0; x < tempPopupAds_ar.length; x++) finalPopupChild = tempPopupAds_ar[x], finalPopupChild && (popupObj = {}, popupObj.source = FWDUVPUtils.getValidSource(FWDUVPUtils.getAttributeValue(finalPopupChild, "data-image-path")), popupObj.start = FWDUVPUtils.getSecondsFromString(FWDUVPUtils.getAttributeValue(finalPopupChild, "data-time-start")), popupObj.end = FWDUVPUtils.getSecondsFromString(FWDUVPUtils.getAttributeValue(finalPopupChild, "data-time-end")), popupObj.link = FWDUVPUtils.getAttributeValue(finalPopupChild, "data-link"), popupObj.target = FWDUVPUtils.getAttributeValue(finalPopupChild, "data-target"), popupObj.google_ad_width = parseInt(FWDUVPUtils.getAttributeValue(finalPopupChild, "data-google-ad-width")) || 600, popupObj.google_ad_height = parseInt(FWDUVPUtils.getAttributeValue(finalPopupChild, "data-google-ad-height")) || 200, popupObj.google_ad_client = FWDUVPUtils.getAttributeValue(finalPopupChild, "data-google-ad-client"), popupObj.google_ad_slot = FWDUVPUtils.getAttributeValue(finalPopupChild, "data-google-ad-slot"), popupAds_ar.push(popupObj));
                                obj.popupAds_ar = popupAds_ar
                            }
                            if (FWDUVPUtils.hasAttribute(popupOrAnnotationChild, "data-ads")) {
                                var adsChild;
                                adsData_ar = FWDUVPUtils.getChildren(popupOrAnnotationChild), ads_ar = [];
                                for (var tt = adsData_ar.length, m = 0; m < tt; m++) {
                                    var adsObj = {};
                                    adsChild = adsData_ar[m], adsObj.timeStart = FWDUVPUtils.getSecondsFromString(FWDUVPUtils.getAttributeValue(adsChild, "data-time-start")), FWDUVPUtils.hasAttribute(adsChild, "data-add-duration") && (adsObj.addDuration = FWDUVPUtils.getSecondsFromString(FWDUVPUtils.getAttributeValue(adsChild, "data-add-duration"))), adsObj.thumbnailSource = FWDUVPUtils.getAttributeValue(adsChild, "data-thumbnail-source"), "" != adsObj.thumbnailSource && " " != adsObj.thumbnailSource || (adsObj.thumbnailSource = void 0), adsObj.timeToHoldAds = FWDUVPUtils.getAttributeValue(adsChild, "data-time-to-hold-ads") || 4, adsObj.source = FWDUVPUtils.getValidSource(FWDUVPUtils.getAttributeValue(adsChild, "data-source")), adsObj.link = FWDUVPUtils.getAttributeValue(adsChild, "data-link"), adsObj.target = FWDUVPUtils.getAttributeValue(adsChild, "data-target"), ads_ar[m] = adsObj
                                }
                                obj.ads_ar = ads_ar
                            }
                            if (FWDUVPUtils.hasAttribute(child, "data-vast-url") && (obj.ads_ar = void 0, obj.vastURL = FWDUVPUtils.getAttributeValue(child, "data-vast-url"), obj.vastClickTroughTarget = FWDUVPUtils.getAttributeValue(child, "data-vast-clicktrough-target") || "_blank", obj.vastLinearStartTime = FWDUVPUtils.getAttributeValue(child, "data-vast-linear-astart-at-time") || "00:00:00"), FWDUVPUtils.hasAttribute(popupOrAnnotationChild, "data-cuepoints")) {
                                var cuepointsChild;
                                cuepointsData_ar = FWDUVPUtils.getChildren(popupOrAnnotationChild), cuepoints_ar = [];
                                for (var tt = cuepointsData_ar.length, m = 0; m < tt; m++) {
                                    var cuepointsObj = {};
                                    cuepointsChild = cuepointsData_ar[m], cuepointsObj.timeStart = FWDUVPUtils.getSecondsFromString(FWDUVPUtils.getAttributeValue(cuepointsChild, "data-time-start")), cuepointsObj.javascriptCall = FWDUVPUtils.getAttributeValue(cuepointsChild, "data-javascript-call"), cuepointsObj.isPlayed_bl = !1, cuepoints_ar[m] = cuepointsObj
                                }
                                obj.cuepoints_ar = cuepoints_ar
                            }
                            if (FWDUVPUtils.hasAttribute(popupOrAnnotationChild, "data-annotations")) {
                                var annotationChild;
                                annotations_ar = FWDUVPUtils.getChildren(popupOrAnnotationChild);
                                for (var tt = annotations_ar.length, m = 0; m < tt; m++) {
                                    var annotationObj = {};
                                    annotationChild = annotations_ar[m], annotationObj.start = FWDUVPUtils.getSecondsFromString(FWDUVPUtils.getAttributeValue(annotationChild, "data-start-time")), annotationObj.end = FWDUVPUtils.getSecondsFromString(FWDUVPUtils.getAttributeValue(annotationChild, "data-end-time")), annotationObj.left = parseInt(FWDUVPUtils.getAttributeValue(annotationChild, "data-left"), 10), annotationObj.top = parseInt(FWDUVPUtils.getAttributeValue(annotationChild, "data-top"), 10), annotationObj.showCloseButton_bl = "yes" == FWDUVPUtils.getAttributeValue(annotationChild, "data-show-close-button"), annotationObj.clickSource = FWDUVPUtils.getAttributeValue(annotationChild, "data-click-source"), annotationObj.clickSourceTarget = FWDUVPUtils.getAttributeValue(annotationChild, "data-click-source-target"), annotationObj.normalStateClass = FWDUVPUtils.getAttributeValue(annotationChild, "data-normal-state-class"), annotationObj.selectedStateClass = FWDUVPUtils.getAttributeValue(annotationChild, "data-selected-state-class"), annotationObj.content = annotationChild.innerHTML, annotations_ar[m] = annotationObj
                                }
                                obj.annotations_ar = annotations_ar
                            }
                        }
                        var descChidren_ar = FWDUVPUtils.getChildren(child),
                            descChild;
                        obj.title = "not defined!", obj.titleText = "not defined!";
                        for (var k = 0; k < descChidren_ar.length; k++) descChild = descChidren_ar[k], FWDUVPUtils.hasAttribute(descChild, "data-video-short-description") ? (obj.title = descChild.innerHTML, obj.titleText = descChild.textContent, obj.titleText = obj.titleText.replace(/^\s+/g, "")) : FWDUVPUtils.hasAttribute(descChild, "data-video-long-description") && (obj.desc = descChild.innerHTML);
                        gaStr = obj.titleText.split("\n");
                        for (var x = 0; x < gaStr.length; x++)
                            if (2 < gaStr[x].length) {
                                obj.gaStr = gaStr[x];
                                break
                            }
                        FWDUVPUtils.hasAttribute(child, "data-ads-source") && (adsObj = {}, adsObj.source = FWDUVPUtils.getValidSource(FWDUVPUtils.getAttributeValue(child, "data-ads-source")), adsObj.pageToOpen = FWDUVPUtils.getAttributeValue(child, "data-ads-page-to-open-url"), adsObj.pageTarget = FWDUVPUtils.getAttributeValue(child, "data-ads-page-target") || "_blank", adsObj.timeToHoldAds = parseInt(FWDUVPUtils.getAttributeValue(child, "data-time-to-hold-ads")) || 0, obj.ads = adsObj), self.playlist_ar[i] = obj
                    }
                    self.randomizePlaylist_bl && (self.playlist_ar = FWDUVPUtils.randomizeArray(self.playlist_ar)), self.maxPlaylistItems < self.playlist_ar.length && (self.playlist_ar = self.playlist_ar.splice(0, self.maxPlaylistItems)), clearTimeout(self.dispatchPlaylistLoadCompleteWidthDelayId_to), self.dispatchPlaylistLoadCompleteWidthDelayId_to = setTimeout(function() {
                        self.dispatchEvent(FWDUVPData.PLAYLIST_LOAD_COMPLETE)
                    }, 50), self.isDataLoaded_bl = !0
                } else showLoadPlaylistErrorId_to = setTimeout(function() {
                    self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: "At least one video is required in the playlist with id: <font color='#ff0000'>" + id + "</font>"
                    }), self.isPlaylistDispatchingError_bl = !1
                }, 50)
            }
        }, this.parseFolderJSON = function(e) {
            var t;
            self.playlist_ar = [];
            for (var o = e.folder, s = 0; s < o.length; s++)(t = {}).videoSource = encodeURI(o[s]["@attributes"]["data-video-path"]), t.videoSource = o[s]["@attributes"]["data-video-path"], t.dataPlaybackRate = o[s]["@attributes"]["data-playback-rate"], t.startAtVideo = o[s]["@attributes"]["data-start-at-video"] || 0, t.videoSource = [{
                source: FWDUVPUtils.getValidSource(t.videoSource)
            }], t.thumbSource = encodeURI(o[s]["@attributes"]["data-thumb-path"]), t.posterSource = encodeURI(o[s]["@attributes"]["data-poster-path"]), t.downloadPath = encodeURIComponent(o[s]["@attributes"]["download-path"]), t.downloadable = self.showDownloadVideoButton_bl, self.forceDisableDownloadButtonForFolder_bl && (t.downloadable = !1), t.titleText = "...", t.title = "<p style='color:" + self.youtubeAndFolderVideoTitleColor_str + ";margin:0px;padding:0px;margin-top:2px;margin-bottom:4x;line-height:16px;'>...</p>", t.titleText = o[s]["@attributes"]["data-title"], t.title = "<p style='color:" + self.youtubeAndFolderVideoTitleColor_str + ";margin:0px;padding:0px;margin-top:2px;margin-bottom:4x;line-height:16px;'>" + o[s]["@attributes"]["data-title"] + "</p>", t.desc = void 0, self.playlist_ar[s] = t;
            self.randomizePlaylist_bl && (self.playlist_ar = FWDUVPUtils.randomizeArray(self.playlist_ar)), self.maxPlaylistItems < self.playlist_ar.length && (self.playlist_ar = self.playlist_ar.splice(0, self.maxPlaylistItems)), clearTimeout(self.dispatchPlaylistLoadCompleteWidthDelayId_to), self.dispatchPlaylistLoadCompleteWidthDelayId_to = setTimeout(function() {
                self.dispatchEvent(FWDUVPData.PLAYLIST_LOAD_COMPLETE)
            }, 50), self.isDataLoaded_bl = !0
        }, this.parseXML = function(response) {
            var obj;
            self.playlist_ar = [];
            var obj_ar = response.li,
                has360Video = !1;
            obj_ar.length || (obj_ar = [obj_ar]);
            for (var i = 0; i < obj_ar.length; i++) {
                if (obj = {}, obj.videoSource = obj_ar[i]["@attributes"]["data-video-source"], obj.startAtVideo = obj_ar[i]["@attributes"]["data-start-at-video"] || 0, obj.isLive = obj_ar[i]["@attributes"]["data-is-live"], obj.atb = "yes" == obj_ar[i]["@attributes"]["data-use-a-to-b"], self.useAToB || (obj.atb = !1), obj.isPrivate = obj_ar[i]["@attributes"]["data-is-private"], "yes" == obj.isPrivate ? obj.isPrivate = !0 : obj.isPrivate = !1, obj.privateVideoPassword_str = obj_ar[i]["@attributes"]["data-private-video-password"], obj.startAtTime = obj_ar[i]["@attributes"]["data-start-at-time"], "00:00:00" != obj.startAtTime && FWDUVPUtils.checkTime(obj.startAtTime) || (obj.startAtTime = void 0), obj.stopAtTime = obj_ar[i]["@attributes"]["data-stop-at-time"], "00:00:00" != obj.stopAtTime && FWDUVPUtils.checkTime(obj.stopAtTime) || (obj.stopAtTime = void 0), -1 != obj.videoSource.indexOf("{source:")) try {
                    obj.videoLabels_ar = [], obj.videoSource = eval(obj.videoSource);
                    for (var m = 0; m < obj.videoSource.length; m++) obj.videoLabels_ar[m] = obj.videoSource[m].label;
                    for (var m = 0; m < obj.videoSource.length; m++) {
                        var src = obj.videoSource[m].source; - 1 != src.indexOf("encrypt:") && (src = atob(src.substr(8))), obj.videoSource[m].source = FWDUVPUtils.getValidSource(src)
                    }
                    for (var m = 0; m < obj.videoSource.length; m++) obj.videoSource[m].is360 = obj.videoSource[m].is360, "yes" == obj.videoSource[m].is360 && (obj.videoSource[m].is360 = !0), "no" == obj.videoSource[m].is360 && (obj.videoSource[m].is360 = !1), 1 == obj.videoSource[m].is360 && (has360Video = !0);
                    obj.videoLabels_ar.reverse()
                } catch (e) {
                    return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                        self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                            text: "Please make sure that the <font color='#ff0000'>data-video-source</font> attribute contains an array of videos at position <font color='#ff0000'>" + (i + 1) + "</font>"
                        })
                    }, 50))
                } else {
                    var src = obj.videoSource; - 1 != src.indexOf("encrypt:") && (src = atob(src.substr(8))), obj.videoSource = [{
                        source: FWDUVPUtils.getValidSource(src)
                    }]
                }
                if (obj.subtitleSource = obj_ar[i]["@attributes"]["data-subtitle-soruce"], obj.startAtSubtitle = obj_ar[i]["@attributes"]["data-start-at-subtitle"] || 0, obj.subtitleSource)
                    if (-1 != obj.subtitleSource.indexOf("{source:")) {
                        if (-1 != obj.subtitleSource.indexOf("{source:")) {
                            try {
                                obj.subtitleSource = eval(obj.subtitleSource)
                            } catch (e) {
                                return self.isPlaylistDispatchingError_bl = !0, void(showLoadPlaylistErrorId_to = setTimeout(function() {
                                    self.dispatchEvent(FWDRVPData.LOAD_ERROR, {
                                        text: "Please make sure that the <font color='#ff0000'>data-subtitle-source</font> attribute contains an array of subtitles at position <font color='#ff0000'>" + (i + 1) + "</font>"
                                    })
                                }, 50))
                            }
                            obj.subtitleSource.splice(0, 0, {
                                source: "none",
                                label: self.subtitlesOffLabel_str
                            }), obj.subtitleSource.reverse()
                        }
                    } else obj.subtitleSource = [{
                        source: obj.subtitleSource
                    }];
                obj.dataAdvertisementOnPauseSource = obj_ar[i]["@attributes"]["data-advertisement-on-pause-source"], obj.scrubAtTimeAtFirstPlay = obj_ar[i]["@attributes"]["data-scrub-at-time-at-first-play"], obj.scrubAtTimeAtFirstPlay && /^((?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d$)/g.test(obj.scrubAtTimeAtFirstPlay) && (obj.scrubAtTimeAtFirstPlay = FWDUVPUtils.getSecondsFromString(obj.scrubAtTimeAtFirstPlay)), obj.downloadPath = obj.videoSource[obj.startAtVideo], obj.downloadable = "yes" == obj_ar[i]["@attributes"]["data-downloadable"], -1 == obj.videoSource[0].source.indexOf(".") && (obj.downloadable = !1), obj.posterSource = encodeURI(obj_ar[i]["@attributes"]["data-poster-source"]), obj.thumbSource = obj_ar[i]["@attributes"]["data-thumb-source"], obj.title = obj_ar[i]["@attributes"]["data-title"], obj.titleText = obj_ar[i]["@attributes"]["data-title"], obj.desc = obj_ar[i]["@attributes"]["data-desc"], obj.gaStr = obj.titleText, obj_ar[i]["@attributes"]["data-ads-source"] && (adsObj = {}, adsObj.source = FWDUVPUtils.getValidSource(obj_ar[i]["@attributes"]["data-ads-source"]), adsObj.pageToOpen = obj_ar[i]["@attributes"]["data-ads-page-to-open-url"], adsObj.pageTarget = obj_ar[i]["@attributes"]["data-ads-page-target"] || "_blank", adsObj.timeToHoldAds = obj_ar[i]["@attributes"]["data-time-to-hold-ads"] || 0, obj.ads = adsObj), obj_ar[i]["@attributes"]["data-cuepoints"] && (adsObj = {}, adsObj.timeStart = obj_ar[i]["@attributes"]["data-time-start"], adsObj.javascriptCall = obj_ar[i]["@attributes"]["data-javascript-call"], adsObj.isPlayed_bl = !1, obj.cuepoints_ar = adsObj), self.playlist_ar[i] = obj
            }
            self.randomizePlaylist_bl && (self.playlist_ar = FWDUVPUtils.randomizeArray(self.playlist_ar)), self.maxPlaylistItems < self.playlist_ar.length && (self.playlist_ar = self.playlist_ar.splice(0, self.maxPlaylistItems)), clearTimeout(self.dispatchPlaylistLoadCompleteWidthDelayId_to), self.dispatchPlaylistLoadCompleteWidthDelayId_to = setTimeout(function() {
                self.dispatchEvent(FWDUVPData.PLAYLIST_LOAD_COMPLETE)
            }, 50), self.isDataLoaded_bl = !0
        }, this.loadVast = function(e) {
            var c, _ = [];
            self.vastXHR = new XMLHttpRequest, self.vastXHR.onreadystatechange = function(e) {
                if (4 == self.vastXHR.readyState)
                    if (200 == self.vastXHR.status) {
                        var t = FWDUVPUtils.xmlToJson(self.vastXHR.responseXML).VAST;
                        if (!t.Ad) return void self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                            text: "No <font color='#FF0000'> &lt;ad&gt; </font> tag was found in the VAST xml file."
                        });
                        t.Ad.length || (t.Ad = [t.Ad]);
                        for (var o = 0; o < t.Ad.length; o++) {
                            if ((c = {}).id = t.Ad[o]["@attributes"].id, c.sequence = t.Ad[o]["@attributes"].sequence, c.sequence || (c.sequence = o), !t.Ad[o].InLine) return void self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                                text: "No <font color='#FF0000'> &lt;InLine&gt; </font>tag was found in the VAST xml file."
                            });
                            if (c.InLine = {}, c.InLine.Impression = void 0, t.Ad[o].InLine.Impression && (t.Ad[o].InLine.Impression["#cdata-section"] ? c.InLine.Impression = t.Ad[o].InLine.Impression["#cdata-section"] : c.InLine.Impression = t.Ad[o].InLine.Impression["#text"]), t.Ad[o].InLine.Creatives.Creative.length || (t.Ad[o].InLine.Creatives.Creative = [t.Ad[o].InLine.Creatives.Creative]), t.Ad[o].InLine.Creatives.Creative.length)
                                for (var s = 0; s < t.Ad[o].InLine.Creatives.Creative.length; s++)
                                    if (t.Ad[o].InLine.Creatives.Creative[s].Linear) {
                                        t.Ad[o].InLine.Creatives.Creative[s].Linear.MediaFiles.MediaFile.length || (t.Ad[o].InLine.Creatives.Creative[s].Linear.MediaFiles.MediaFile = [t.Ad[o].InLine.Creatives.Creative[s].Linear.MediaFiles.MediaFile]), c.InLine.Linear = {};
                                        for (var i = [], n = 0; n < t.Ad[o].InLine.Creatives.Creative[s].Linear.MediaFiles.MediaFile.length; n++) i.push(t.Ad[o].InLine.Creatives.Creative[s].Linear.MediaFiles.MediaFile[n]);
                                        var l = 0;
                                        e: for (var a = 0; a < i.length; a++)
                                            if (window.innerWidth >= i[a]["@attributes"].width) {
                                                l = a;
                                                break e
                                            }
                                        if (i[l]["#cdata-section"] ? c.InLine.Linear.videoSource = i[l]["#cdata-section"] : c.InLine.Linear.videoSource = i[l]["#text"], t.Ad[o].InLine.Creatives.Creative[s].Linear.Duration && (t.Ad[o].InLine.Creatives.Creative[s].Linear.Duration["#cdata-section"] ? c.InLine.Linear.Duration = t.Ad[o].InLine.Creatives.Creative[s].Linear.Duration["#cdata-section"] : t.Ad[o].InLine.Creatives.Creative[s].Linear.Duration["#text"] && (c.InLine.Linear.Duration = t.Ad[o].InLine.Creatives.Creative[s].Linear.Duration["#text"])), c.InLine.Linear.skipoffset = void 0, t.Ad[o].InLine.Creatives.Creative[s].Linear["@attributes"] && t.Ad[o].InLine.Creatives.Creative[s].Linear["@attributes"].skipoffset && (c.InLine.Linear.skipoffset = t.Ad[o].InLine.Creatives.Creative[s].Linear["@attributes"].skipoffset), c.InLine.Linear.skipoffset && (c.InLine.Linear.skipoffset = c.InLine.Linear.skipoffset.substr(0, 8), c.InLine.Linear.Duration && -1 != c.InLine.Linear.skipoffset.indexOf("%"))) {
                                            var r = Math.round(FWDUVPUtils.getSecondsFromString(c.InLine.Linear.Duration) * (c.InLine.Linear.skipoffset.substr(0, c.InLine.Linear.skipoffset.length - 1) / 100));
                                            c.InLine.Linear.skipoffset = FWDUVPUtils.formatTime(r, !0)
                                        }
                                        if (c.InLine.Linear.skipoffset && (c.InLine.Linear.skipoffset = FWDUVPUtils.getSecondsFromString(c.InLine.Linear.skipoffset), c.InLine.Linear.Duration && FWDUVPUtils.getSecondsFromString(c.InLine.Linear.Duration) <= c.InLine.Linear.skipoffset && (c.InLine.Linear.skipoffset = void 0)), c.InLine.Linear.TrackingEvents = void 0, t.Ad[o].InLine.Creatives.Creative[s].Linear.TrackingEvents.Tracking) {
                                            c.InLine.Linear.TrackingEvents = [];
                                            for (var d = 0; d < t.Ad[o].InLine.Creatives.Creative[s].Linear.TrackingEvents.Tracking.length; d++) c.InLine.Linear.TrackingEvents.push({
                                                event: t.Ad[o].InLine.Creatives.Creative[s].Linear.TrackingEvents.Tracking[d]["@attributes"].event
                                            }), t.Ad[o].InLine.Creatives.Creative[s].Linear.TrackingEvents.Tracking[d]["#cdata-section"] ? c.InLine.Linear.TrackingEvents[d].URI = t.Ad[o].InLine.Creatives.Creative[s].Linear.TrackingEvents.Tracking[d]["#cdata-section"] : c.InLine.Linear.TrackingEvents[d].URI = t.Ad[o].InLine.Creatives.Creative[s].Linear.TrackingEvents.Tracking[d]["#text"]
                                        }
                                        t.Ad[o].InLine.Creatives.Creative[s].Linear.VideoClicks && (t.Ad[o].InLine.Creatives.Creative[s].Linear.VideoClicks.ClickThrough && ((c.InLine.Linear.ClickThrough = t.Ad[o].InLine.Creatives.Creative[s].Linear.VideoClicks.ClickThrough["#cdata-section"]) ? c.InLine.Linear.ClickThrough = t.Ad[o].InLine.Creatives.Creative[s].Linear.VideoClicks.ClickThrough["#cdata-section"] : c.InLine.Linear.ClickThrough = t.Ad[o].InLine.Creatives.Creative[s].Linear.VideoClicks.ClickThrough["#text"]), t.Ad[o].InLine.Creatives.Creative[s].Linear.VideoClicks.ClickTracking && (t.Ad[o].InLine.Creatives.Creative[s].Linear.VideoClicks.ClickTracking["#cdata-section"] ? c.InLine.Linear.ClickTracking = t.Ad[o].InLine.Creatives.Creative[s].Linear.VideoClicks.ClickTracking["#cdata-section"] : c.InLine.Linear.ClickTracking = t.Ad[o].InLine.Creatives.Creative[s].Linear.VideoClicks.ClickTracking["#text"]))
                                    }
                            _.push(c)
                        }
                        FWDUVPUtils.storArrayBasedOnObjectValue(_, "sequence");
                        var u = [];
                        for (o = 0; o < _.length; o++) {
                            var h = {};
                            h.source = FWDUVPUtils.getValidSource(_[o].InLine.Linear.videoSource), h.timeStart = FWDUVPUtils.getSecondsFromString(self.playlist_ar[parent.id].vastLinearStartTime), _[o].startTime && (h.timeStart = FWDUVPUtils.getSecondsFromString(_[o].startTime)), _[o].InLine.Linear.skipoffset && (h.timeToHoldAds = _[o].InLine.Linear.skipoffset), h.link = _[o].InLine.Linear.ClickThrough, _[o].InLine.Linear.ClickTracking && (h.ClickTracking = _[o].InLine.Linear.ClickTracking), h.target = self.playlist_ar[parent.id].vastClickTroughTarget, _[o].InLine.Impression && (h.Impression = _[o].InLine.Impression), _[o].InLine.Linear.TrackingEvents && (h.TrackingEvents = _[o].InLine.Linear.TrackingEvents), u.push(h)
                        }
                        self.adsSource_ar = u, self.isVastXMLParsed_bl = !0, self.dispatchEvent(FWDUVPData.VAST_LOADED, {
                            ads: u
                        })
                    } else self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                        text: "vast XML file can't be loaded " + self.vastXHR.statusText
                    })
            }, self.vastXHR.onerror = function(e) {
                try {
                    window.console && console.log(e), window.console && console.log(e.message)
                } catch (e) {}
            }, -1 == e.indexOf("http") && -1 == e.indexOf("https") || (e = "https://cors-anywhere.herokuapp.com/" + e), self.vastXHR.open("get", e, !0), self.vastXHR.setRequestHeader("Content-Type", "text/xml"), self.vastXHR.send()
        }, self.showPropertyError = function(e) {
            self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                text: "The property called <font color='#FF0000'>" + e + "</font> is not defined."
            })
        }, this.stopToLoadPlaylist = function() {
            self.closeJsonPLoader();
            try {
                self.scs_el.src = null, document.documentElement.removeChild(self.scs_el), self.scs_el = null
            } catch (e) {}
            if (null != self.xhr) {
                try {
                    self.xhr.abort()
                } catch (e) {}
                self.xhr.onreadystatechange = null, self.xhr.onerror = null, self.xhr = null
            }
        }, self.showPropertyError = function(e) {
            self.dispatchEvent(FWDUVPData.LOAD_ERROR, {
                text: "The property called <font color='#ff0000'>" + e + "</font> is not defined."
            })
        }, self.init()
    };
    FWDUVPData.setPrototype = function() {
        FWDUVPData.prototype = new FWDUVPEventDispatcher
    }, FWDUVPData.prototype = null, FWDUVPData.VAST_LOADED = "vastLoaded", FWDUVPData.PLAYLIST_LOAD_COMPLETE = "playlistLoadComplete", FWDUVPData.PRELOADER_LOAD_DONE = "onPreloaderLoadDone", FWDUVPData.LOAD_DONE = "onLoadDone", FWDUVPData.LOAD_ERROR = "onLoadError", FWDUVPData.IMAGE_LOADED = "onImageLoaded", FWDUVPData.SKIN_LOAD_COMPLETE = "onSkinLoadComplete", FWDUVPData.SKIN_PROGRESS = "onSkinProgress", FWDUVPData.IMAGES_PROGRESS = "onImagesPogress", window.FWDUVPData = FWDUVPData
}(window), window.FWDUVPDisplayObject = function(e, t, o, s) {
    var i = this;
    i.listeners = {
        events_ar: []
    }, i.type = e, this.children_ar = [], this.style, this.screen, this.transform, this.position = t || "absolute", this.overflow = o || "hidden", this.display = s || "inline-block", this.visible = !0, this.buttonMode, this.x = 0, this.y = 0, this.w = 0, this.h = 0, this.rect, this.alpha = 1, this.innerHTML = "", this.opacityType = "", this.isHtml5_bl = !1, this.hasTransform3d_bl = FWDUVPUtils.hasTransform3d, this.hasTransform2d_bl = FWDUVPUtils.hasTransform2d, (FWDUVPUtils.isFirefox || FWDUVPUtils.isIE) && (i.hasTransform3d_bl = !1), (FWDUVPUtils.isFirefox || FWDUVPUtils.isIE) && (i.hasTransform2d_bl = !1), this.hasBeenSetSelectable_bl = !1, i.init = function() {
        i.setScreen()
    }, i.getTransform = function() {
        for (var e, t = ["transform", "msTransform", "WebkitTransform", "MozTransform", "OTransform"]; e = t.shift();)
            if (void 0 !== i.screen.style[e]) return e;
        return !1
    }, i.getOpacityType = function() {
        return void 0 !== i.screen.style.opacity ? "opacity" : "filter"
    }, i.setScreen = function(e) {
        "img" == i.type && e ? (i.screen = null, i.screen = e) : i.screen = document.createElement(i.type), i.setMainProperties()
    }, i.setMainProperties = function() {
        i.transform = i.getTransform(), i.setPosition(i.position), i.setOverflow(i.overflow), i.opacityType = i.getOpacityType(), "opacity" == i.opacityType && (i.isHtml5_bl = !0), "filter" == i.opacityType && (i.screen.style.filter = "inherit"), i.screen.style.left = "0px", i.screen.style.top = "0px", i.screen.style.margin = "0px", i.screen.style.padding = "0px", i.screen.style.maxWidth = "none", i.screen.style.maxHeight = "none", i.screen.style.border = "none", i.screen.style.lineHeight = "1", i.screen.style.backfaceVisibility = "hidden", i.screen.style.webkitBackfaceVisibility = "hidden", i.screen.style.MozBackfaceVisibility = "hidden", "img" == e && (i.setWidth(i.screen.width), i.setHeight(i.screen.height))
    }, i.setBackfaceVisibility = function() {
        i.screen.style.backfaceVisibility = "visible", i.screen.style.webkitBackfaceVisibility = "visible", i.screen.style.MozBackfaceVisibility = "visible"
    }, i.setSelectable = function(e) {
        e ? (FWDUVPUtils.isFirefox || FWDUVPUtils.isIE ? (i.screen.style.userSelect = "element", i.screen.style.MozUserSelect = "element", i.screen.style.msUserSelect = "element") : FWDUVPUtils.isSafari ? (i.screen.style.userSelect = "text", i.screen.style.webkitUserSelect = "text") : (i.screen.style.userSelect = "auto", i.screen.style.webkitUserSelect = "auto"), i.screen.style.khtmlUserSelect = "auto", i.screen.style.oUserSelect = "auto", FWDUVPUtils.isIEAndLessThen9 ? (i.screen.ondragstart = null, i.screen.onselectstart = null, i.screen.ontouchstart = null) : (i.screen.ondragstart = void 0, i.screen.onselectstart = void 0, i.screen.ontouchstart = void 0), i.screen.style.webkitTouchCallout = "default", i.hasBeenSetSelectable_bl = !1) : (i.screen.style.userSelect = "none", i.screen.style.MozUserSelect = "none", i.screen.style.webkitUserSelect = "none", i.screen.style.khtmlUserSelect = "none", i.screen.style.oUserSelect = "none", i.screen.style.msUserSelect = "none", i.screen.msUserSelect = "none", i.screen.ondragstart = function(e) {
            return !1
        }, i.screen.onselectstart = function() {
            return !1
        }, i.screen.ontouchstart = function() {
            return !1
        }, i.screen.style.webkitTouchCallout = "none", i.hasBeenSetSelectable_bl = !0)
    }, i.getScreen = function() {
        return i.screen
    }, i.setVisible = function(e) {
        i.visible = e, 1 == i.visible ? i.screen.style.visibility = "visible" : i.screen.style.visibility = "hidden"
    }, i.getVisible = function() {
        return i.visible
    }, i.setResizableSizeAfterParent = function() {
        i.screen.style.width = "100%", i.screen.style.height = "100%"
    }, i.getStyle = function() {
        return i.screen.style
    }, i.setOverflow = function(e) {
        i.overflow = e, i.screen.style.overflow = i.overflow
    }, i.setPosition = function(e) {
        i.position = e, i.screen.style.position = i.position
    }, i.setDisplay = function(e) {
        i.display = e, i.screen.style.display = i.display
    }, i.setButtonMode = function(e) {
        i.buttonMode = e, 1 == i.buttonMode ? i.screen.style.cursor = "pointer" : i.screen.style.cursor = "default"
    }, i.setBkColor = function(e) {
        i.screen.style.backgroundColor = e
    }, i.setInnerHTML = function(e) {
        i.innerHTML = e, i.screen.innerHTML = i.innerHTML
    }, i.getInnerHTML = function() {
        return i.innerHTML
    }, i.getRect = function() {
        return i.screen.getBoundingClientRect()
    }, i.setAlpha = function(e) {
        i.alpha = e, "opacity" == i.opacityType ? i.screen.style.opacity = i.alpha : "filter" == i.opacityType && (i.screen.style.filter = "alpha(opacity=" + 100 * i.alpha + ")", i.screen.style.filter = "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + Math.round(100 * i.alpha) + ")")
    }, i.getAlpha = function() {
        return i.alpha
    }, i.getRect = function() {
        return i.screen.getBoundingClientRect()
    }, i.getGlobalX = function() {
        return i.getRect().left
    }, i.getGlobalY = function() {
        return i.getRect().top
    }, i.setX = function(e) {
        i.x = e, i.hasTransform3d_bl ? i.screen.style[i.transform] = "translate3d(" + i.x + "px," + i.y + "px,0)" : i.hasTransform2d_bl ? i.screen.style[i.transform] = "translate(" + i.x + "px," + i.y + "px)" : i.screen.style.left = i.x + "px"
    }, i.getX = function() {
        return i.x
    }, i.setY = function(e) {
        i.y = e, i.hasTransform3d_bl ? i.screen.style[i.transform] = "translate3d(" + i.x + "px," + i.y + "px,0)" : i.hasTransform2d_bl ? i.screen.style[i.transform] = "translate(" + i.x + "px," + i.y + "px)" : i.screen.style.top = i.y + "px"
    }, i.getY = function() {
        return i.y
    }, i.setWidth = function(e) {
        i.w = e, "img" == i.type && (i.screen.width = i.w), i.screen.style.width = i.w + "px"
    }, i.getWidth = function() {
        return "div" == i.type || "input" == i.type ? 0 != i.screen.offsetWidth ? i.screen.offsetWidth : i.w : "img" == i.type ? 0 != i.screen.offsetWidth ? i.screen.offsetWidth : 0 != i.screen.width ? i.screen.width : i._w : "canvas" == i.type ? 0 != i.screen.offsetWidth ? i.screen.offsetWidth : i.w : void 0
    }, i.setHeight = function(e) {
        i.h = e, "img" == i.type && (i.screen.height = i.h), i.screen.style.height = i.h + "px"
    }, i.getHeight = function() {
        return "div" == i.type || "input" == i.type ? 0 != i.screen.offsetHeight ? i.screen.offsetHeight : i.h : "img" == i.type ? 0 != i.screen.offsetHeight ? i.screen.offsetHeight : 0 != i.screen.height ? i.screen.height : i.h : "canvas" == i.type ? 0 != i.screen.offsetHeight ? i.screen.offsetHeight : i.h : void 0
    }, i.addChild = function(e) {
        i.contains(e) && i.children_ar.splice(FWDUVPUtils.indexOfArray(i.children_ar, e), 1), i.children_ar.push(e), i.screen.appendChild(e.screen)
    }, i.removeChild = function(e) {
        if (!i.contains(e)) throw Error("##removeChild()## Child dose't exist, it can't be removed!");
        i.children_ar.splice(FWDUVPUtils.indexOfArray(i.children_ar, e), 1), i.screen.removeChild(e.screen)
    }, i.contains = function(e) {
        return -1 != FWDUVPUtils.indexOfArray(i.children_ar, e)
    }, i.addChildAt = function(e, t) {
        if (0 == i.getNumChildren()) i.children_ar.push(e), i.screen.appendChild(e.screen);
        else if (1 == t) i.screen.insertBefore(e.screen, i.children_ar[0].screen), i.screen.insertBefore(i.children_ar[0].screen, e.screen), i.contains(e) ? i.children_ar.splice(FWDUVPUtils.indexOfArray(i.children_ar, e), 1, e) : i.children_ar.splice(FWDUVPUtils.indexOfArray(i.children_ar, e), 0, e);
        else {
            if (t < 0 || t > i.getNumChildren() - 1) throw Error("##getChildAt()## Index out of bounds!");
            i.screen.insertBefore(e.screen, i.children_ar[t].screen), i.contains(e) ? i.children_ar.splice(FWDUVPUtils.indexOfArray(i.children_ar, e), 1, e) : i.children_ar.splice(FWDUVPUtils.indexOfArray(i.children_ar, e), 0, e)
        }
    }, i.getChildAt = function(e) {
        if (e < 0 || e > i.getNumChildren() - 1) throw Error("##getChildAt()## Index out of bounds!");
        if (0 == i.getNumChildren()) throw Error("##getChildAt## Child dose not exist!");
        return i.children_ar[e]
    }, i.getChildIndex = function(e) {
        return i.contains(e) ? FWDUVPUtils.indexOfArray(i.children_ar, e) : 0
    }, i.removeChildAtZero = function() {
        i.screen.removeChild(i.children_ar[0].screen), i.children_ar.shift()
    }, i.getNumChildren = function() {
        return i.children_ar.length
    }, i.addListener = function(e, t) {
        if (null == e) throw Error("type is required.");
        if ("object" == typeof e) throw Error("type must be of type String.");
        if ("function" != typeof t) throw Error("listener must be of type Function.");
        var o = {};
        o.type = e, o.listener = t, (o.target = this).listeners.events_ar.push(o)
    }, i.dispatchEvent = function(e, t) {
        if (null != this.listeners) {
            if (null == e) throw Error("type is required.");
            if ("object" == typeof e) throw Error("type must be of type String.");
            for (var o = 0, s = this.listeners.events_ar.length; o < s; o++)
                if (this.listeners.events_ar[o].target === this && this.listeners.events_ar[o].type === e) {
                    if (t)
                        for (var i in t) this.listeners.events_ar[o][i] = t[i];
                    this.listeners.events_ar[o].listener.call(this, this.listeners.events_ar[o])
                }
        }
    }, i.removeListener = function(e, t) {
        if (null == e) throw Error("type is required.");
        if ("object" == typeof e) throw Error("type must be of type String.");
        if ("function" != typeof t) throw Error("listener must be of type Function." + e);
        for (var o = 0, s = this.listeners.events_ar.length; o < s; o++)
            if (this.listeners.events_ar[o].target === this && this.listeners.events_ar[o].type === e && this.listeners.events_ar[o].listener === t) {
                this.listeners.events_ar.splice(o, 1);
                break
            }
    }, i.disposeImage = function() {
        "img" == i.type && (i.screen.src = null)
    }, i.destroy = function() {
        i.hasBeenSetSelectable_bl && (i.screen.ondragstart = null, i.screen.onselectstart = null, i.screen.ontouchstart = null), i.screen.removeAttribute("style"), i.listeners = [], i.listeners = null, i.children_ar = [], i.children_ar = null, i.style = null, i.screen = null, i.transform = null, i.position = null, i.overflow = null, i.display = null, i.visible = null, i.buttonMode = null, i.x = null, i.y = null, i.w = null, i.h = null, i.rect = null, i.alpha = null, i.innerHTML = null, i.opacityType = null, i.isHtml5_bl = null, i.hasTransform3d_bl = null, i.hasTransform2d_bl = null, i = null
    }, i.init()
}, void 0 === asual) var asual = {};
void 0 === asual.util && (asual.util = {}), asual.util.Browser = new function() {
var e = navigator.userAgent.toLowerCase(),
    t = /webkit/.test(e),
    o = /opera/.test(e),
    s = /msie/.test(e) && !/opera/.test(e),
    i = /mozilla/.test(e) && !/(compatible|webkit)/.test(e),
    n = parseFloat(s ? e.substr(e.indexOf("msie") + 4) : (e.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/) || [0, "0"])[1]);
this.toString = function() {
    return "[class Browser]"
}, this.getVersion = function() {
    return n
}, this.isMSIE = function() {
    return s
}, this.isSafari = function() {
    return t
}, this.isOpera = function() {
    return o
}, this.isMozilla = function() {
    return i
}
}, asual.util.Events = new function() {
var n = "DOMContentLoaded",
    t = "onstop",
    o = window,
    s = document,
    l = [],
    i = asual.util,
    e = i.Browser,
    a = e.isMSIE(),
    r = e.isSafari();
this.toString = function() {
    return "[class Events]"
}, this.addListener = function(e, t, o) {
    l.push({
        o: e,
        t: t,
        l: o
    }), t == n && (a || r) || (e.addEventListener ? e.addEventListener(t, o, !1) : e.attachEvent && e.attachEvent("on" + t, o))
}, this.removeListener = function(e, t, o) {
    for (var s, i = 0; s = l[i]; i++)
        if (s.o == e && s.t == t && s.l == o) {
            l.splice(i, 1);
            break
        }
    t == n && (a || r) || (e.removeEventListener ? e.removeEventListener(t, o, !1) : e.detachEvent && e.detachEvent("on" + t, o))
};

function d() {
    for (var e, t = 0; e = l[t]; t++) e.t != n && i.Events.removeListener(e.o, e.t, e.l)
}(a || r) && function() {
    try {
        (a && s.body || !/loaded|complete/.test(s.readyState)) && s.documentElement.doScroll("left")
    } catch (e) {
        return setTimeout(arguments.callee, 0)
    }
    for (var e, t = 0; e = l[t]; t++) e.t == n && e.l.call(null)
}(), a && o.attachEvent && o.attachEvent("onbeforeunload", function() {
    if ("interactive" == s.readyState) {
        function e() {
            s.detachEvent(t, e), d()
        }
        s.attachEvent(t, e), o.setTimeout(function() {
            s.detachEvent(t, e)
        }, 0)
    }
}), this.addListener(o, "unload", d)
}, asual.util.Functions = new function() {
this.toString = function() {
    return "[class Functions]"
}, this.bind = function(e, t, o) {
    for (var s, i = 2, n = []; s = arguments[i]; i++) n.push(s);
    return function() {
        return e.apply(t, n)
    }
}
};
var FWDUVPAddressEvent = function(e) {
this.toString = function() {
    return "[object FWDUVPAddressEvent]"
}, this.type = e, this.target = [FWDUVPAddress][0], this.value = FWDUVPAddress.getValue(), this.path = FWDUVPAddress.getPath(), this.pathNames = FWDUVPAddress.getPathNames(), this.parameters = {};
for (var t = FWDUVPAddress.getParameterNames(), o = 0, s = t.length; o < s; o++) this.parameters[t[o]] = FWDUVPAddress.getParameter(t[o]);
this.parameterNames = t
};
FWDUVPAddressEvent.INIT = "init", FWDUVPAddressEvent.CHANGE = "change", FWDUVPAddressEvent.INTERNAL_CHANGE = "internalChange", FWDUVPAddressEvent.EXTERNAL_CHANGE = "externalChange";
var FWDUVPAddress = new function() {
var _getHash = function() {
        var e = _l.href.indexOf("#");
        return -1 != e ? _ec(_dc(_l.href.substr(e + 1))) : ""
    },
    _getWindow = function() {
        try {
            return top.document, top
        } catch (e) {
            return window
        }
    },
    _strictCheck = function(e, t) {
        return _opts.strict && (e = t ? "/" != e.substr(0, 1) ? "/" + e : e : "" == e ? "/" : e), e
    },
    _ieLocal = function(e, t) {
        return _msie && "file:" == _l.protocol ? t ? _value.replace(/\?/, "%3F") : _value.replace(/%253F/, "?") : e
    },
    _searchScript = function(e) {
        if (e.childNodes)
            for (var t, o = 0, s = e.childNodes.length; o < s; o++)
                if (e.childNodes[o].src && (_url = String(e.childNodes[o].src)), t = _searchScript(e.childNodes[o])) return t
    },
    _titleCheck = function() {
        _d.title != _title && -1 != _d.title.indexOf("#") && (_d.title = _title)
    },
    _listen = function() {
        if (!_silent) {
            var e = _getHash(),
                t = !(_value == e);
            _safari && _version < 523 ? _length != _h.length && (_length = _h.length, typeof _stack[_length - 1] != UNDEFINED && (_value = _stack[_length - 1]), _update.call(this, !1)) : _msie && t ? _version < 7 ? _l.reload() : this.setValue(e) : t && (_value = e, _update.call(this, !1)), _msie && _titleCheck.call(this)
        }
    },
    _bodyClick = function(e) {
        if (0 < _popup.length) {
            var popup = window.open(_popup[0], _popup[1], eval(_popup[2]));
            typeof _popup[3] != UNDEFINED && eval(_popup[3])
        }
        _popup = []
    },
    _swfChange = function() {
        for (var e, t, o = 0, s = FWDUVPAddress.getValue(), i = "setFWDUVPAddressValue"; e = _ids[o]; o++)
            if (t = document.getElementById(e))
                if (t.parentNode && typeof t.parentNode.so != UNDEFINED) t.parentNode.so.call(i, s);
                else {
                    if (!t || typeof t[i] == UNDEFINED) {
                        var n = t.getElementsByTagName("object"),
                            l = t.getElementsByTagName("embed");
                        t = n[0] && typeof n[0][i] != UNDEFINED ? n[0] : l[0] && typeof l[0][i] != UNDEFINED ? l[0] : null
                    }
                    t && t[i](s)
                } else(t = document[e]) && typeof t[i] != UNDEFINED && t[i](s)
    },
    _jsDispatch = function(e) {
        this.dispatchEvent(new FWDUVPAddressEvent(e)), typeof this["on" + (e = e.substr(0, 1).toUpperCase() + e.substr(1))] == FUNCTION && this["on" + e]()
    },
    _jsInit = function() {
        _util.Browser.isSafari() && _d.body.addEventListener("click", _bodyClick), _jsDispatch.call(this, "init")
    },
    _jsChange = function() {
        _swfChange(), _jsDispatch.call(this, "change")
    },
    _update = function(e) {
        _jsChange.call(this), e ? _jsDispatch.call(this, "internalChange") : _jsDispatch.call(this, "externalChange"), _st(_functions.bind(_track, this), 10)
    },
    _track = function() {
        var e = (_l.pathname + (/\/$/.test(_l.pathname) ? "" : "/") + this.getValue()).replace(/\/\//, "/").replace(/^\/$/, ""),
            t = _t[_opts.tracker];
        typeof t == FUNCTION ? t(e) : typeof _t.pageTracker != UNDEFINED && typeof _t.pageTracker._trackPageview == FUNCTION ? _t.pageTracker._trackPageview(e) : typeof _t.urchinTracker == FUNCTION && _t.urchinTracker(e)
    },
    _htmlWrite = function() {
        var e = _frame.contentWindow.document;
        e.open(), e.write("<html><head><title>" + _d.title + "</title><script>var " + ID + ' = "' + _getHash() + '";<\/script></head></html>'), e.close()
    },
    _htmlLoad = function() {
        var e = _frame.contentWindow;
        e.location.href;
        (_value = typeof e[ID] != UNDEFINED ? e[ID] : "") != _getHash() && (_update.call(FWDUVPAddress, !1), _l.hash = _ieLocal(_value, TRUE))
    },
    _load = function() {
        if (!_loaded) {
            if (_loaded = TRUE, _msie && _version < 8) {
                var e = _d.getElementsByTagName("frameset")[0];
                _frame = _d.createElement((e ? "" : "i") + "frame"), e ? (e.insertAdjacentElement("beforeEnd", _frame), e[e.cols ? "cols" : "rows"] += ",0", _frame.src = "javascript:false", _frame.noResize = !0, _frame.frameBorder = _frame.frameSpacing = 0) : (_frame.src = "javascript:false", _frame.style.display = "none", _d.body.insertAdjacentElement("afterBegin", _frame)), _st(function() {
                    _events.addListener(_frame, "load", _htmlLoad), typeof _frame.contentWindow[ID] == UNDEFINED && _htmlWrite()
                }, 50)
            } else _safari && (_version < 418 && (_d.body.innerHTML += '<form id="' + ID + '" style="position:absolute;top:-9999px;" method="get"></form>', _form = _d.getElementById(ID)), typeof _l[ID] == UNDEFINED && (_l[ID] = {}), typeof _l[ID][_l.pathname] != UNDEFINED && (_stack = _l[ID][_l.pathname].split(",")));
            _st(_functions.bind(function() {
                _jsInit.call(this), _jsChange.call(this), _track.call(this)
            }, this), 1), _msie && 8 <= _version ? (_d.body.onhashchange = _functions.bind(_listen, this), _si(_functions.bind(_titleCheck, this), 50)) : _si(_functions.bind(_listen, this), 50)
        }
    },
    ID = "swfaddress",
    FUNCTION = "function",
    UNDEFINED = "undefined",
    TRUE = !0,
    FALSE = !1,
    _util = asual.util,
    _browser = _util.Browser,
    _events = _util.Events,
    _functions = _util.Functions,
    _version = _browser.getVersion(),
    _msie = _browser.isMSIE(),
    _mozilla = _browser.isMozilla(),
    _opera = _browser.isOpera(),
    _safari = _browser.isSafari(),
    _supported = FALSE,
    _t = _getWindow(),
    _d = _t.document,
    _h = _t.history,
    _l = _t.location,
    _si = setInterval,
    _st = setTimeout,
    _dc = decodeURI,
    _ec = encodeURI,
    _frame, _form, _url, _title = _d.title,
    _length = _h.length,
    _silent = FALSE,
    _loaded = FALSE,
    _justset = TRUE,
    _juststart = TRUE,
    _ref = this,
    _stack = [],
    _ids = [],
    _popup = [],
    _listeners = {},
    _value = _getHash(),
    _opts = {
        history: TRUE,
        strict: TRUE
    };
if (_msie && _d.documentMode && _d.documentMode != _version && (_version = 8 != _d.documentMode ? 7 : 8), _supported = _mozilla && 1 <= _version || _msie && 6 <= _version || _opera && 9.5 <= _version || _safari && 312 <= _version, _supported) {
    _opera && (history.navigationMode = "compatible");
    for (var i = 1; i < _length; i++) _stack.push("");
    _stack.push(_getHash()), _msie && _l.hash != _getHash() && (_l.hash = "#" + _ieLocal(_getHash(), TRUE)), _searchScript(document);
    var _qi = _url ? _url.indexOf("?") : -1;
    if (-1 != _qi)
        for (var param, params = _url.substr(_qi + 1).split("&"), i = 0, p; p = params[i]; i++) param = p.split("="), /^(history|strict)$/.test(param[0]) && (_opts[param[0]] = isNaN(param[1]) ? /^(true|yes)$/i.test(param[1]) : 0 != parseInt(param[1])), /^tracker$/.test(param[0]) && (_opts[param[0]] = param[1]);
    _msie && _titleCheck.call(this), window == _t && _events.addListener(document, "DOMContentLoaded", _functions.bind(_load, this)), _events.addListener(_t, "load", _functions.bind(_load, this))
} else !_supported && -1 != _l.href.indexOf("#") || _safari && _version < 418 && -1 != _l.href.indexOf("#") && "" != _l.search ? (_d.open(), _d.write('<html><head><meta http-equiv="refresh" content="0;url=' + _l.href.substr(0, _l.href.indexOf("#")) + '" /></head></html>'), _d.close()) : _track();
this.toString = function() {
        return "[class FWDUVPAddress]"
    }, this.back = function() {
        _h.back()
    }, this.forward = function() {
        _h.forward()
    }, this.up = function() {
        var e = this.getPath();
        this.setValue(e.substr(0, e.lastIndexOf("/", e.length - 2) + ("/" == e.substr(e.length - 1) ? 1 : 0)))
    }, this.go = function(e) {
        _h.go(e)
    }, this.href = function(e, t) {
        "_self" == (t = typeof t != UNDEFINED ? t : "_self") ? self.location.href = e: "_top" == t ? _l.href = e : "_blank" == t ? window.open(e) : _t.frames[t].location.href = e
    }, this.popup = function(url, name, options, handler) {
        try {
            var popup = window.open(url, name, eval(options));
            typeof handler != UNDEFINED && eval(handler)
        } catch (e) {}
        _popup = arguments
    }, this.getIds = function() {
        return _ids
    }, this.getId = function(e) {
        return _ids[0]
    }, this.setId = function(e) {
        _ids[0] = e
    }, this.addId = function(e) {
        this.removeId(e), _ids.push(e)
    }, this.removeId = function(e) {
        for (var t = 0; t < _ids.length; t++)
            if (e == _ids[t]) {
                _ids.splice(t, 1);
                break
            }
    }, this.addEventListener = function(e, t) {
        typeof _listeners[e] == UNDEFINED && (_listeners[e] = []), _listeners[e].push(t)
    }, this.removeEventListener = function(e, t) {
        if (typeof _listeners[e] != UNDEFINED) {
            for (var o, s = 0;
                (o = _listeners[e][s]) && o != t; s++);
            _listeners[e].splice(s, 1)
        }
    }, this.dispatchEvent = function(e) {
        if (this.hasEventListener(e.type)) {
            e.target = this;
            for (var t, o = 0; t = _listeners[e.type][o]; o++) t(e);
            return TRUE
        }
        return FALSE
    }, this.hasEventListener = function(e) {
        return typeof _listeners[e] != UNDEFINED && 0 < _listeners[e].length
    }, this.getBaseURL = function() {
        var e = _l.href;
        return -1 != e.indexOf("#") && (e = e.substr(0, e.indexOf("#"))), "/" == e.substr(e.length - 1) && (e = e.substr(0, e.length - 1)), e
    }, this.getStrict = function() {
        return _opts.strict
    }, this.setStrict = function(e) {
        _opts.strict = e
    }, this.getHistory = function() {
        return _opts.history
    }, this.setHistory = function(e) {
        _opts.history = e
    }, this.getTracker = function() {
        return _opts.tracker
    }, this.setTracker = function(e) {
        _opts.tracker = e
    }, this.getTitle = function() {
        return _d.title
    }, this.setTitle = function(e) {
        if (!_supported) return null;
        typeof e != UNDEFINED && ("null" == e && (e = ""), e = _dc(e), _st(function() {
            _title = _d.title = e, _juststart && _frame && _frame.contentWindow && _frame.contentWindow.document && (_frame.contentWindow.document.title = e, _juststart = FALSE), !_justset && _mozilla && _l.replace(-1 != _l.href.indexOf("#") ? _l.href : _l.href + "#"), _justset = FALSE
        }, 10))
    }, this.getStatus = function() {
        return _t.status
    }, this.setStatus = function(e) {
        if (!_supported) return null;
        if (typeof e != UNDEFINED && ("null" == e && (e = ""), e = _dc(e), !_safari)) {
            if ("/" == (e = _strictCheck("null" != e ? e : "", TRUE)) && (e = ""), !/http(s)?:\/\//.test(e)) {
                var t = _l.href.indexOf("#");
                e = (-1 == t ? _l.href : _l.href.substr(0, t)) + "#" + e
            }
            _t.status = e
        }
    }, this.resetStatus = function() {
        _t.status = ""
    }, this.getValue = function() {
        return _supported ? _dc(_strictCheck(_ieLocal(_value, FALSE), FALSE)) : null
    }, this.setValue = function(e) {
        if (!_supported) return null;
        typeof e != UNDEFINED && ("null" == e && (e = ""), "/" == (e = _ec(_dc(_strictCheck(e, TRUE)))) && (e = ""), _value != e && (_value = e, _silent = _justset = TRUE, _update.call(FWDUVPAddress, !0), (_stack[_h.length] = _value) != _getHash() && (_opts.history ? _l.hash = "#" + _dc(_ieLocal(_value, TRUE)) : _l.replace("#" + _dc(_value))), _msie && _version < 8 && _opts.history && _st(_htmlWrite, 50), _safari ? _st(function() {
            _silent = FALSE
        }, 1) : _silent = FALSE))
    }, this.getPath = function() {
        var e = this.getValue();
        return -1 != e.indexOf("?") ? e.split("?")[0] : -1 != e.indexOf("#") ? e.split("#")[0] : e
    }, this.getPathNames = function() {
        var e = this.getPath(),
            t = e.split("/");
        return "/" != e.substr(0, 1) && 0 != e.length || t.splice(0, 1), "/" == e.substr(e.length - 1, 1) && t.splice(t.length - 1, 1), t
    }, this.getQueryString = function() {
        var e = this.getValue(),
            t = e.indexOf("?");
        if (-1 != t && t < e.length) return e.substr(t + 1)
    }, this.getParameter = function(e) {
        var t = this.getValue(),
            o = t.indexOf("?");
        if (-1 != o) {
            for (var s, i = (t = t.substr(o + 1)).split("&"), n = i.length, l = []; n--;)(s = i[n].split("="))[0] == e && l.push(s[1]);
            if (0 != l.length) return 1 != l.length ? l : l[0]
        }
    }, this.getParameterNames = function() {
        var e = this.getValue(),
            t = e.indexOf("?"),
            o = [];
        if (-1 != t && "" != (e = e.substr(t + 1)) && -1 != e.indexOf("="))
            for (var s = e.split("&"), i = 0; i < s.length;) o.push(s[i].split("=")[0]), i++;
        return o
    }, this.onInit = null, this.onChange = null, this.onInternalChange = null, this.onExternalChange = null,
    function() {
        var o;
        if (typeof FlashObject != UNDEFINED && (SWFObject = FlashObject), typeof SWFObject != UNDEFINED && SWFObject.prototype && SWFObject.prototype.write) {
            var t = SWFObject.prototype.write;
            SWFObject.prototype.write = function() {
                var e;
                return o = arguments, this.getAttribute("version").major < 8 && (this.addVariable("$swfaddress", FWDUVPAddress.getValue()), ("string" == typeof o[0] ? document.getElementById(o[0]) : o[0]).so = this), (e = t.apply(this, o)) && _ref.addId(this.getAttribute("id")), e
            }
        }
        if (typeof swfobject != UNDEFINED) {
            var e = swfobject.registerObject;
            swfobject.registerObject = function() {
                o = arguments, e.apply(this, o), _ref.addId(o[0])
            };
            var s = swfobject.createSWF;
            swfobject.createSWF = function() {
                o = arguments;
                var e = s.apply(this, o);
                return e && _ref.addId(o[0].id), e
            };
            var i = swfobject.embedSWF;
            swfobject.embedSWF = function() {
                typeof(o = arguments)[8] == UNDEFINED && (o[8] = {}), typeof o[8].id == UNDEFINED && (o[8].id = o[1]), i.apply(this, o), _ref.addId(o[8].id)
            }
        }
        if (typeof UFO != UNDEFINED) {
            var n = UFO.create;
            UFO.create = function() {
                o = arguments, n.apply(this, o), _ref.addId(o[0].id)
            }
        }
        if (typeof AC_FL_RunContent != UNDEFINED) {
            var l = AC_FL_RunContent;
            AC_FL_RunContent = function() {
                o = arguments, l.apply(this, o);
                for (var e = 0, t = o.length; e < t; e++) "id" == o[e] && _ref.addId(o[e + 1])
            }
        }
    }()
};
! function(s) {
var o = function(e, l) {
    var r = this;
    o.prototype;

    function t(e) {
        var t, o;
        s.top != s && FWDEVPUtils.isIE || (e || (e = this), document.body.createTextRange ? ((t = document.body.createTextRange()).moveToElementText(e), t.select()) : s.getSelection && document.createRange && (o = s.getSelection(), (t = document.createRange()).selectNodeContents(e), o.removeAllRanges(), o.addRange(t)))
    }
    this.xhr = null, this.embedColoseN_img = e.embedColoseN_img, this.bk_do = null, this.mainHolder_do = null, this.embedAndLinkMainLabel_do = null, this.linkAndEmbedHolderBk_do = null, this.linkText_do = null, this.linkLabel_do = null, this.embedText_do = null, this.embedLabel_do = null, this.linkAndEmbedHolder_do = null, this.copyLinkButton_do = null, this.copyEmbedButton_do = null, this.infoText_do = null, this.sendMainHolder_do = null, this.sendMainHolderBk_do = null, this.sendMainLabel_do = null, this.yourEmailLabel_do = null, this.yourEmailInput_do = null, this.friendEmailLabel_do = null, this.friendEmailInput_do = null, this.closeButton_do = null, this.useHEXColorsForSkin_bl = e.useHEXColorsForSkin_bl, this.normalButtonsColor_str = e.normalButtonsColor_str, this.selectedButtonsColor_str = e.selectedButtonsColor_str, this.videoLink_str = null, this.embedWindowBackground_str = e.embedWindowBackground_str, this.embedWindowInputBackgroundPath_str = e.embedWindowInputBackgroundPath_str, this.secondaryLabelsColor_str = e.secondaryLabelsColor_str, this.inputColor_str = e.inputColor_str, this.mainLabelsColor_str = e.mainLabelsColor_str, this.sendButtonNPath_str = e.sendButtonNPath_str, this.sendButtonSPath_str = e.sendButtonSPath_str, this.inputBackgroundColor_str = e.inputBackgroundColor_str, this.borderColor_str = e.borderColor_str, this.sendToAFriendPath_str = e.sendToAFriendPath_str, this.maxTextWidth = 0, this.totalWidth = 0, this.stageWidth = 0, this.stageHeight = 0, this.buttonWidth = 44, this.buttonHeight = 19, this.embedWindowCloseButtonMargins = e.embedWindowCloseButtonMargins, this.finalEmbedPath_str = null, this.finalEmbedCode_str = null, this.linkToVideo_str = null, this.shareAndEmbedTextColor_str = e.shareAndEmbedTextColor_str, this.isSending_bl = !1, this.isShowed_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, r.useVectorIcons_bl = e.useVectorIcons_bl, this.init = function() {
        r.closeButton_do || (-1 != e.skinPath_str.indexOf("hex_white") && (r.selectedButtonsColor_str = "#FFFFFF"), r.setBackfaceVisibility(), r.mainHolder_do = new FWDUVPDisplayObject("div"), r.bk_do = new FWDUVPDisplayObject("div"), r.bk_do.getStyle().width = "100%", r.bk_do.getStyle().height = "100%", r.bk_do.setAlpha(.9), r.bk_do.getStyle().background = "url('" + r.embedWindowBackground_str + "')", r.linkAndEmbedHolder_do = new FWDUVPDisplayObject("div"), r.linkAndEmbedHolderBk_do = new FWDUVPDisplayObject("div"), r.linkAndEmbedHolderBk_do.getStyle().background = "url('" + r.embedWindowBackground_str + "')", r.linkAndEmbedHolderBk_do.getStyle().borderStyle = "solid", r.linkAndEmbedHolderBk_do.getStyle().borderWidth = "1px", r.linkAndEmbedHolderBk_do.getStyle().borderColor = r.borderColor_str, r.embedAndLinkMainLabel_do = new FWDUVPDisplayObject("div"), r.embedAndLinkMainLabel_do.setBackfaceVisibility(), r.embedAndLinkMainLabel_do.getStyle().fontFamily = "Arial", r.embedAndLinkMainLabel_do.getStyle().fontSize = "12px", r.embedAndLinkMainLabel_do.getStyle().color = r.mainLabelsColor_str, r.embedAndLinkMainLabel_do.getStyle().whiteSpace = "nowrap", r.embedAndLinkMainLabel_do.getStyle().fontSmoothing = "antialiased", r.embedAndLinkMainLabel_do.getStyle().webkitFontSmoothing = "antialiased", r.embedAndLinkMainLabel_do.getStyle().textRendering = "optimizeLegibility", r.embedAndLinkMainLabel_do.getStyle().padding = "0px", r.embedAndLinkMainLabel_do.setInnerHTML("SHARE & EMBED"), r.linkLabel_do = new FWDUVPDisplayObject("div"), r.linkLabel_do.setBackfaceVisibility(), r.linkLabel_do.getStyle().fontFamily = "Arial", r.linkLabel_do.getStyle().fontSize = "12px", r.linkLabel_do.getStyle().color = r.secondaryLabelsColor_str, r.linkLabel_do.getStyle().whiteSpace = "nowrap", r.linkLabel_do.getStyle().fontSmoothing = "antialiased", r.linkLabel_do.getStyle().webkitFontSmoothing = "antialiased", r.linkLabel_do.getStyle().textRendering = "optimizeLegibility", r.linkLabel_do.getStyle().padding = "0px", r.linkLabel_do.setInnerHTML("Link to this video:"), r.linkText_do = new FWDUVPDisplayObject("div"), r.linkText_do.setBackfaceVisibility(), r.linkText_do.getStyle().fontFamily = "Arial", r.linkText_do.getStyle().fontSize = "12px", r.linkText_do.getStyle().color = r.shareAndEmbedTextColor_str, FWDUVPUtils.isIEAndLessThen9 || (r.linkText_do.getStyle().wordBreak = "break-all"), r.linkText_do.getStyle().fontSmoothing = "antialiased", r.linkText_do.getStyle().webkitFontSmoothing = "antialiased", r.linkText_do.getStyle().textRendering = "optimizeLegibility", r.linkText_do.getStyle().padding = "6px", r.linkText_do.getStyle().paddingTop = "4px", r.linkText_do.getStyle().paddingBottom = "4px", r.linkText_do.getStyle().backgroundColor = r.inputBackgroundColor_str, r.linkText_do.screen.addEventListener("touchstart", function() {
            t(r.linkText_do.screen)
        }), r.embedLabel_do = new FWDUVPDisplayObject("div"), r.embedLabel_do.setBackfaceVisibility(), r.embedLabel_do.getStyle().fontFamily = "Arial", r.embedLabel_do.getStyle().fontSize = "12px", r.embedLabel_do.getStyle().color = r.secondaryLabelsColor_str, r.embedLabel_do.getStyle().whiteSpace = "nowrap", r.embedLabel_do.getStyle().fontSmoothing = "antialiased", r.embedLabel_do.getStyle().webkitFontSmoothing = "antialiased", r.embedLabel_do.getStyle().textRendering = "optimizeLegibility", r.embedLabel_do.getStyle().padding = "0px", r.embedLabel_do.setInnerHTML("Embed this video:"), r.embedText_do = new FWDUVPDisplayObject("div"), r.embedText_do.setBackfaceVisibility(), FWDUVPUtils.isIEAndLessThen9 || (r.embedText_do.getStyle().wordBreak = "break-all"), r.embedText_do.getStyle().fontFamily = "Arial", r.embedText_do.getStyle().fontSize = "12px", r.embedText_do.getStyle().lineHeight = "16px", r.embedText_do.getStyle().color = r.shareAndEmbedTextColor_str, r.embedText_do.getStyle().fontSmoothing = "antialiased", r.embedText_do.getStyle().webkitFontSmoothing = "antialiased", r.embedText_do.getStyle().textRendering = "optimizeLegibility", r.embedText_do.getStyle().backgroundColor = r.inputBackgroundColor_str, r.embedText_do.getStyle().padding = "6px", r.embedText_do.getStyle().paddingTop = "4px", r.embedText_do.getStyle().paddingBottom = "4px", r.embedText_do.screen.addEventListener("touchstart", function() {
            t(r.embedText_do.screen)
        }), FWDUVPSimpleSizeButton.setPrototype(), r.copyLinkButton_do = new FWDUVPSimpleSizeButton(e.embedCopyButtonNPath_str, e.embedCopyButtonSPath_str, r.buttonWidth, r.buttonHeight, e.useHEXColorsForSkin_bl, e.normalButtonsColor_str, e.selectedButtonsColor_str), r.copyLinkButton_do.screen.style.position = "absolute", r.copyLinkButton_do.addListener(FWDUVPSimpleSizeButton.CLICK, function() {
            r.copyToClipboard(r.linkText_do.screen)
        }), FWDUVPSimpleSizeButton.setPrototype(), r.copyEmbedButton_do = new FWDUVPSimpleSizeButton(e.embedCopyButtonNPath_str, e.embedCopyButtonSPath_str, r.buttonWidth, r.buttonHeight, e.useHEXColorsForSkin_bl, e.normalButtonsColor_str, e.selectedButtonsColor_str), r.copyEmbedButton_do.screen.style.position = "absolute", r.copyEmbedButton_do.addListener(FWDUVPSimpleSizeButton.CLICK, function() {
            r.copyToClipboard(r.embedText_do.screen)
        }), r.sendMainHolder_do = new FWDUVPDisplayObject("div"), r.sendMainHolderBk_do = new FWDUVPDisplayObject("div"), r.sendMainHolderBk_do.getStyle().background = "url('" + r.embedWindowBackground_str + "')", r.sendMainHolderBk_do.getStyle().borderStyle = "solid", r.sendMainHolderBk_do.getStyle().borderWidth = "1px", r.sendMainHolderBk_do.getStyle().borderColor = r.borderColor_str, r.sendMainLabel_do = new FWDUVPDisplayObject("div"), r.sendMainLabel_do.setBackfaceVisibility(), r.sendMainLabel_do.getStyle().fontFamily = "Arial", r.sendMainLabel_do.getStyle().fontSize = "12px", r.sendMainLabel_do.getStyle().color = r.mainLabelsColor_str, r.sendMainLabel_do.getStyle().whiteSpace = "nowrap", r.sendMainLabel_do.getStyle().fontSmoothing = "antialiased", r.sendMainLabel_do.getStyle().webkitFontSmoothing = "antialiased", r.sendMainLabel_do.getStyle().textRendering = "optimizeLegibility", r.sendMainLabel_do.getStyle().padding = "0px", r.sendMainLabel_do.setInnerHTML("SEND TO A FRIEND"), r.yourEmailLabel_do = new FWDUVPDisplayObject("div"), r.yourEmailLabel_do.setBackfaceVisibility(), r.yourEmailLabel_do.getStyle().fontFamily = "Arial", r.yourEmailLabel_do.getStyle().fontSize = "12px", r.yourEmailLabel_do.getStyle().color = r.secondaryLabelsColor_str, r.yourEmailLabel_do.getStyle().whiteSpace = "nowrap", r.yourEmailLabel_do.getStyle().fontSmoothing = "antialiased", r.yourEmailLabel_do.getStyle().webkitFontSmoothing = "antialiased", r.yourEmailLabel_do.getStyle().textRendering = "optimizeLegibility", r.yourEmailLabel_do.getStyle().padding = "0px", r.yourEmailLabel_do.setInnerHTML("Your email:"), r.yourEmailInput_do = new FWDUVPDisplayObject("input"), r.yourEmailInput_do.setBackfaceVisibility(), r.yourEmailInput_do.getStyle().fontFamily = "Arial", r.yourEmailInput_do.getStyle().fontSize = "12px", r.yourEmailInput_do.getStyle().backgroundColor = r.inputBackgroundColor_str, r.yourEmailInput_do.getStyle().color = r.inputColor_str, r.yourEmailInput_do.getStyle().outline = 0, r.yourEmailInput_do.getStyle().whiteSpace = "nowrap", r.yourEmailInput_do.getStyle().fontSmoothing = "antialiased", r.yourEmailInput_do.getStyle().webkitFontSmoothing = "antialiased", r.yourEmailInput_do.getStyle().textRendering = "optimizeLegibility", r.yourEmailInput_do.getStyle().padding = "6px", r.yourEmailInput_do.getStyle().paddingTop = "4px", r.yourEmailInput_do.getStyle().paddingBottom = "4px", r.friendEmailLabel_do = new FWDUVPDisplayObject("div"), r.friendEmailLabel_do.setBackfaceVisibility(), r.friendEmailLabel_do.getStyle().fontFamily = "Arial", r.friendEmailLabel_do.getStyle().fontSize = "12px", r.friendEmailLabel_do.getStyle().color = r.secondaryLabelsColor_str, r.friendEmailLabel_do.getStyle().whiteSpace = "nowrap", r.friendEmailLabel_do.getStyle().fontSmoothing = "antialiased", r.friendEmailLabel_do.getStyle().webkitFontSmoothing = "antialiased", r.friendEmailLabel_do.getStyle().textRendering = "optimizeLegibility", r.friendEmailLabel_do.getStyle().padding = "0px", r.friendEmailLabel_do.setInnerHTML("Your friend's email:"), r.friendEmailInput_do = new FWDUVPDisplayObject("input"), r.friendEmailInput_do.setBackfaceVisibility(), r.friendEmailInput_do.getStyle().fontFamily = "Arial", r.friendEmailInput_do.getStyle().fontSize = "12px", r.friendEmailInput_do.getStyle().backgroundColor = r.inputBackgroundColor_str, r.friendEmailInput_do.getStyle().color = r.inputColor_str, r.friendEmailInput_do.getStyle().outline = 0, r.friendEmailInput_do.getStyle().whiteSpace = "nowrap", r.friendEmailInput_do.getStyle().fontSmoothing = "antialiased", r.friendEmailInput_do.getStyle().webkitFontSmoothing = "antialiased", r.friendEmailInput_do.getStyle().textRendering = "optimizeLegibility", r.friendEmailInput_do.getStyle().padding = "6px", r.friendEmailInput_do.getStyle().paddingTop = "4px", r.friendEmailInput_do.getStyle().paddingBottom = "4px", FWDUVPSimpleSizeButton.setPrototype(), r.sendButton_do = new FWDUVPSimpleSizeButton(r.sendButtonNPath_str, r.sendButtonSPath_str, r.buttonWidth, r.buttonHeight, r.useHEXColorsForSkin_bl, r.normalButtonsColor_str, r.selectedButtonsColor_str), r.sendButton_do.addListener(FWDUVPSimpleSizeButton.MOUSE_UP, r.sendClickHandler), r.infoText_do = new FWDUVPDisplayObject("div"), r.infoText_do.setBackfaceVisibility(), r.infoText_do.getStyle().fontFamily = "Arial", r.infoText_do.getStyle().fontSize = "12px", r.infoText_do.getStyle().color = r.secondaryLabelsColor_str, r.infoText_do.getStyle().whiteSpace = "nowrap", r.infoText_do.getStyle().fontSmoothing = "antialiased", r.infoText_do.getStyle().webkitFontSmoothing = "antialiased", r.infoText_do.getStyle().textRendering = "optimizeLegibility", r.infoText_do.getStyle().padding = "0px", r.infoText_do.getStyle().paddingTop = "4px", r.infoText_do.getStyle().textAlign = "center", r.infoText_do.getStyle().color = r.mainLabelsColor_str, r.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), r.closeButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<div class='table-fwduvp-button'><span class='table-cell-fwduvp-button icon-close'></span></div>", void 0, "UVPCloseButtonNormalState", "UVPCloseButtonSelectedState")) : (FWDUVPSimpleButton.setPrototype(), r.closeButton_do = new FWDUVPSimpleButton(e.embedColoseN_img, e.embedWindowClosePathS_str, void 0, !0, e.useHEXColorsForSkin_bl, e.normalButtonsColor_str, e.selectedButtonsColor_str)), r.closeButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, r.closeButtonOnMouseUpHandler), r.addChild(r.mainHolder_do), r.mainHolder_do.addChild(r.bk_do), r.linkAndEmbedHolder_do.addChild(r.linkAndEmbedHolderBk_do), r.linkAndEmbedHolder_do.addChild(r.embedAndLinkMainLabel_do), r.linkAndEmbedHolder_do.addChild(r.linkLabel_do), r.linkAndEmbedHolder_do.addChild(r.linkText_do), r.linkAndEmbedHolder_do.addChild(r.embedLabel_do), r.linkAndEmbedHolder_do.addChild(r.embedText_do), r.linkAndEmbedHolder_do.addChild(r.copyLinkButton_do), r.linkAndEmbedHolder_do.addChild(r.copyEmbedButton_do), r.sendMainHolder_do.addChild(r.sendMainHolderBk_do), r.sendMainHolder_do.addChild(r.sendMainLabel_do), r.sendMainHolder_do.addChild(r.yourEmailLabel_do), r.sendMainHolder_do.addChild(r.yourEmailInput_do), r.sendMainHolder_do.addChild(r.friendEmailLabel_do), r.sendMainHolder_do.addChild(r.friendEmailInput_do), r.sendMainHolder_do.addChild(r.sendButton_do), r.mainHolder_do.addChild(r.linkAndEmbedHolder_do), r.mainHolder_do.addChild(r.sendMainHolder_do), r.mainHolder_do.addChild(r.closeButton_do))
    }, this.closeButtonOnMouseUpHandler = function() {
        r.isShowed_bl && r.hide()
    }, this.copyToClipboard = function(e) {
        t(e), document.execCommand("copy")
    }, this.positionAndResize = function() {
        r.stageWidth = l.stageWidth, r.stageHeight = l.stageHeight, r.maxTextWidth = Math.min(r.stageWidth - 150, 500), r.totalWidth = r.maxTextWidth + r.buttonWidth + 40, r.isMobile_bl ? (r.linkText_do.setWidth(r.maxTextWidth + 52), r.embedText_do.setWidth(r.maxTextWidth + 52)) : (r.linkText_do.setWidth(r.maxTextWidth), r.embedText_do.setWidth(r.maxTextWidth)), r.positionFinal(), r.closeButton_do.setX(r.stageWidth - r.closeButton_do.w - r.embedWindowCloseButtonMargins), r.closeButton_do.setY(r.embedWindowCloseButtonMargins), r.setWidth(r.stageWidth), r.setHeight(r.stageHeight), r.mainHolder_do.setWidth(r.stageWidth), r.mainHolder_do.setHeight(r.stageHeight)
    }, this.positionFinal = function() {
        var e, t, o, s, i, n, l, a = !1;
        r.stageHeight < 360 || r.stageWidth < 350 ? (r.linkText_do.getStyle().whiteSpace = "nowrap", r.embedText_do.getStyle().whiteSpace = "nowrap") : (r.linkText_do.getStyle().whiteSpace = "normal", r.embedText_do.getStyle().whiteSpace = "normal"), r.linkLabel_do.screen.offsetHeight < 6 && (a = !0), t = a ? Math.round(100 * r.embedAndLinkMainLabel_do.screen.getBoundingClientRect().height) : r.embedAndLinkMainLabel_do.getHeight(), r.embedAndLinkMainLabel_do.setX(16), r.linkLabel_do.setX(16), r.linkLabel_do.setY(t + 14), s = a ? (o = Math.round(100 * r.linkLabel_do.screen.getBoundingClientRect().height), Math.round(100 * r.linkText_do.screen.getBoundingClientRect().height)) : (o = r.linkLabel_do.getHeight(), r.linkText_do.getHeight()), r.linkText_do.setX(10), r.linkText_do.setY(r.linkLabel_do.y + o + 5), r.isMobile_bl ? r.copyLinkButton_do.setX(-100) : r.copyLinkButton_do.setX(r.maxTextWidth + 30), r.copyLinkButton_do.setY(r.linkText_do.y + s - r.buttonHeight), r.embedLabel_do.setX(16), r.embedLabel_do.setY(r.copyLinkButton_do.y + r.copyLinkButton_do.h + 14), i = a ? Math.round(100 * r.embedText_do.screen.getBoundingClientRect().height) : r.embedText_do.getHeight(), r.embedText_do.setX(10), r.embedText_do.setY(r.embedLabel_do.y + o + 5), r.isMobile_bl ? r.copyEmbedButton_do.setX(-100) : r.copyEmbedButton_do.setX(r.maxTextWidth + 30), r.copyEmbedButton_do.setY(r.embedText_do.y + i - r.buttonHeight), r.linkAndEmbedHolderBk_do.setY(r.linkLabel_do.y - 9), r.linkAndEmbedHolderBk_do.setWidth(r.totalWidth - 2), r.linkAndEmbedHolderBk_do.setHeight(r.embedText_do.y + i - 9), r.linkAndEmbedHolder_do.setWidth(r.totalWidth), r.linkAndEmbedHolder_do.setHeight(r.embedText_do.y + i + 14), l = a ? (n = Math.round(100 * r.sendMainLabel_do.screen.getBoundingClientRect().height), Math.round(100 * r.yourEmailInput_do.screen.getBoundingClientRect().height)) : (n = r.sendMainLabel_do.getHeight(), r.yourEmailInput_do.getHeight()), r.sendMainLabel_do.setX(16), r.yourEmailLabel_do.setX(16), r.yourEmailLabel_do.setY(n + 14), 400 < r.stageWidth ? (r.yourEmailInput_do.setX(10), r.yourEmailInput_do.setWidth(parseInt(r.totalWidth - 52 - r.buttonWidth) / 2), r.yourEmailInput_do.setY(r.yourEmailLabel_do.y + o + 5), r.friendEmailLabel_do.setX(r.yourEmailInput_do.x + r.yourEmailInput_do.w + 26), r.friendEmailLabel_do.setY(r.yourEmailLabel_do.y), r.friendEmailInput_do.setX(r.yourEmailInput_do.x + r.yourEmailInput_do.w + 20), r.friendEmailInput_do.setWidth(parseInt((r.maxTextWidth - 30) / 2)), r.friendEmailInput_do.setY(r.yourEmailLabel_do.y + o + 5), r.sendButton_do.setX(r.friendEmailInput_do.x + r.yourEmailInput_do.w + 10), r.sendButton_do.setY(r.friendEmailInput_do.y + l - r.buttonHeight)) : (r.yourEmailInput_do.setX(10), r.yourEmailInput_do.setWidth(r.totalWidth - 32), r.yourEmailInput_do.setY(r.yourEmailLabel_do.y + o + 5), r.friendEmailLabel_do.setX(16), r.friendEmailLabel_do.setY(r.yourEmailInput_do.y + l + 14), r.friendEmailInput_do.setX(10), r.friendEmailInput_do.setY(r.friendEmailLabel_do.y + o + 5), r.friendEmailInput_do.setWidth(r.totalWidth - 32), r.sendButton_do.setX(r.totalWidth - r.buttonWidth - 10), r.sendButton_do.setY(r.friendEmailInput_do.y + l + 10)), r.sendMainHolderBk_do.setY(r.yourEmailLabel_do.y - 9), r.sendMainHolderBk_do.setWidth(r.totalWidth - 2), r.sendMainHolderBk_do.setHeight(r.sendButton_do.y + r.sendButton_do.h - 9), r.sendMainHolder_do.setWidth(r.totalWidth), r.sendMainHolder_do.setHeight(r.sendButton_do.y + r.sendButton_do.h + 14), e = a ? Math.round(100 * r.linkAndEmbedHolder_do.screen.getBoundingClientRect().height + 100 * r.sendMainHolder_do.screen.getBoundingClientRect().height) : r.linkAndEmbedHolder_do.getHeight() + r.sendMainHolder_do.getHeight(), r.linkAndEmbedHolder_do.setX(parseInt((r.stageWidth - r.totalWidth) / 2)), r.linkAndEmbedHolder_do.setY(parseInt((r.stageHeight - e) / 2) - 8), r.sendMainHolder_do.setX(parseInt((r.stageWidth - r.totalWidth) / 2)), a ? r.sendMainHolder_do.setY(Math.round(r.linkAndEmbedHolder_do.y + 100 * r.linkAndEmbedHolder_do.screen.getBoundingClientRect().height + 20)) : r.sendMainHolder_do.setY(r.linkAndEmbedHolder_do.y + r.linkAndEmbedHolder_do.getHeight() + 20)
    }, this.sendClickHandler = function() {
        var e = !1;
        if (!r.getValidEmail(r.yourEmailInput_do.screen.value)) {
            if (FWDAnimation.isTweening(r.yourEmailInput_do.screen)) return;
            FWDAnimation.to(r.yourEmailInput_do.screen, .1, {
                css: {
                    backgroundColor: "#FF0000"
                },
                yoyo: !0,
                repeat: 3
            }), e = !0
        }
        if (!r.getValidEmail(r.friendEmailInput_do.screen.value)) {
            if (FWDAnimation.isTweening(r.friendEmailInput_do.screen)) return;
            FWDAnimation.to(r.friendEmailInput_do.screen, .1, {
                css: {
                    backgroundColor: "#FF0000"
                },
                yoyo: !0,
                repeat: 3
            }), e = !0
        }
        e || r.sendEmail()
    }, this.sendEmail = function() {
        if (!r.isSending_bl) {
            r.isSending_bl = !0, r.xhr = new XMLHttpRequest, r.xhr.onreadystatechange = r.onChange, r.xhr.onerror = r.ajaxOnErrorHandler;
            try {
                r.xhr.open("get", r.sendToAFriendPath_str + "?friendMail=" + r.friendEmailInput_do.screen.value + "&yourMail=" + r.yourEmailInput_do.screen.value + "&link=" + encodeURIComponent(r.linkToVideo_str), !0), r.xhr.send()
            } catch (e) {
                r.showInfo("ERROR", !0), console && console.log(e), e.message && s.console && console.log(e.message)
            }
            r.resetInputs()
        }
    }, this.ajaxOnErrorHandler = function(e) {
        r.showInfo("ERROR", !0);
        try {
            s.console && console.log(e), s.console && console.log(e.message)
        } catch (e) {}
        r.isSending_bl = !1
    }, this.onChange = function(e) {
        4 == r.xhr.readyState && 200 == r.xhr.status && ("sent" == r.xhr.responseText ? r.showInfo("SENT") : (r.showInfo("ERROR", !0), s.console && console.log("Error The server can't send the email!")), r.isSending_bl = !1)
    }, this.resetInputs = function() {
        r.yourEmailInput_do.screen.value = "", r.friendEmailInput_do.screen.value = ""
    }, this.getValidEmail = function(e) {
        return !(!/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(e) || "" == e)
    }, this.setEmbedData = function() {
        var e = location.href,
            t = location.protocol + "//" + location.host,
            o = location.pathname,
            s = location.hash,
            i = location.search,
            n = t + o;
        i = i.replace(/&?RVPInstanceName=.+RVPVideoId=[0-9]+/g, ""), e = e.replace(/&?RVPInstanceName=.+RVPVideoId=[0-9]+/g, ""), r.finalEmbedPath_str = i ? s ? n + i + "&RVPInstanceName=" + l.instanceName_str + "&RVPPlaylistId=" + l.catId + "&RVPVideoId=" + l.id + s : n + i + "&RVPInstanceName=" + l.instanceName_str + "&RVPPlaylistId=" + l.catId + "&RVPVideoId=" + l.id : s ? n + "?RVPInstanceName=" + l.instanceName_str + "&RVPPlaylistId=" + l.catId + "&RVPVideoId=" + l.id + s : n + "?RVPInstanceName=" + l.instanceName_str + "&RVPPlaylistId=" + l.catId + "&RVPVideoId=" + l.id, s ? -1 == s.indexOf("playlistId=") ? r.linkToVideo_str = n + i + s + "&playlistId=" + l.catId + "&videoId=" + l.id : r.linkToVideo_str = e : r.linkToVideo_str = e + "#/?playlistId=" + l.catId + "&videoId=" + l.id, r.finalEmbedPath_str = encodeURI(r.finalEmbedPath_str), r.linkToVideo_str = encodeURI(r.linkToVideo_str), r.finalEmbedCode_str = "<iframe src='" + r.finalEmbedPath_str + "' width='" + l.stageWidth + "' height='" + l.stageHeight + "' frameborder='0' scrolling='no' allowfullscreen></iframe>", FWDUVPUtils.isIE ? (r.linkText_do.screen.innerText = r.linkToVideo_str, r.embedText_do.screen.innerText = r.finalEmbedCode_str) : (r.linkText_do.screen.textContent = r.linkToVideo_str, r.embedText_do.screen.textContent = r.finalEmbedCode_str)
    }, this.showInfo = function(e, t) {
        r.infoText_do.setInnerHTML(e), r.sendMainHolder_do.addChild(r.infoText_do), r.infoText_do.setWidth(r.buttonWidth), r.infoText_do.setHeight(r.buttonHeight - 4), r.infoText_do.setX(r.sendButton_do.x), r.infoText_do.setY(r.sendButton_do.y - 23), r.infoText_do.setAlpha(0), r.infoText_do.getStyle().color = t ? "#FF0000" : r.mainLabelsColor_str, FWDAnimation.killTweensOf(r.infoText_do), FWDAnimation.to(r.infoText_do, .16, {
            alpha: 1,
            yoyo: !0,
            repeat: 7
        })
    }, this.show = function(e) {
        r.isShowed_bl || (r.isShowed_bl = !0, l.main_do.addChild(r), r.init(), r.resetInputs(), r.setEmbedData(), (!FWDUVPUtils.isMobile || FWDUVPUtils.isMobile && FWDUVPUtils.hasPointerEvent) && l.main_do.setSelectable(!0), r.useVectorIcons_bl ? r.checkButtonsId_to = setInterval(function() {
            0 != r.closeButton_do.w && (r.positionAndResize(), clearInterval(r.checkButtonsId_to), clearTimeout(r.hideCompleteId_to), clearTimeout(r.showCompleteId_to), r.mainHolder_do.setY(-r.stageHeight), r.showCompleteId_to = setTimeout(r.showCompleteHandler, 900), setTimeout(function() {
                FWDAnimation.to(r.mainHolder_do, .8, {
                    y: 0,
                    delay: .1,
                    ease: Expo.easeInOut
                })
            }, 100))
        }, 50) : (r.positionAndResize(), clearTimeout(r.hideCompleteId_to), clearTimeout(r.showCompleteId_to), r.mainHolder_do.setY(-r.stageHeight), r.showCompleteId_to = setTimeout(r.showCompleteHandler, 900), setTimeout(function() {
            FWDAnimation.to(r.mainHolder_do, .8, {
                y: 0,
                delay: .1,
                ease: Expo.easeInOut
            })
        }, 100)))
    }, this.showCompleteHandler = function() {}, this.hide = function() {
        r.isShowed_bl && (r.isShowed_bl = !1, l.customContextMenu_do && l.customContextMenu_do.enable(), r.positionAndResize(), clearTimeout(r.hideCompleteId_to), clearTimeout(r.showCompleteId_to), (!FWDUVPUtils.isMobile || FWDUVPUtils.isMobile && FWDUVPUtils.hasPointerEvent) && l.main_do.setSelectable(!1), r.hideCompleteId_to = setTimeout(r.hideCompleteHandler, 800), FWDAnimation.killTweensOf(r.mainHolder_do), FWDAnimation.to(r.mainHolder_do, .8, {
            y: -r.stageHeight,
            ease: Expo.easeInOut
        }))
    }, this.hideCompleteHandler = function() {
        l.main_do.removeChild(r), r.dispatchEvent(o.HIDE_COMPLETE)
    }, this.updateHEXColors = function(e, t) {
        r.copyEmbedButton_do && (r.copyEmbedButton_do.updateHEXColors(e, t), r.copyLinkButton_do.updateHEXColors(e, t), r.sendButton_do.updateHEXColors(e, t), r.closeButton_do.updateHEXColors(e, t), r.embedAndLinkMainLabel_do.getStyle().color = e, r.sendMainLabel_do.getStyle().color = e, r.linkAndEmbedHolderBk_do.getStyle().borderColor = e, r.sendMainHolderBk_do.getStyle().borderColor = e)
    }
};
o.setPrototype = function() {
    o.prototype = new FWDUVPDisplayObject("div")
}, o.ERROR = "error", o.HIDE_COMPLETE = "hideComplete", o.prototype = null, s.FWDUVPEmbedWindow = o
}(window), window, window.FWDUVPEventDispatcher = function() {
    this.listeners = {
        events_ar: []
    }, this.addListener = function(e, t) {
        if (null == e) throw Error("type is required.");
        if ("object" == typeof e) throw Error("type must be of type String.");
        if ("function" != typeof t) throw Error("listener must be of type Function.");
        var o = {};
        o.type = e, o.listener = t, (o.target = this).listeners.events_ar.push(o)
    }, this.dispatchEvent = function(e, t) {
        if (null != this.listeners) {
            if (null == e) throw Error("type is required.");
            if ("object" == typeof e) throw Error("type must be of type String.");
            for (var o = 0, s = this.listeners.events_ar.length; o < s; o++)
                if (this.listeners.events_ar[o].target === this && this.listeners.events_ar[o].type === e) {
                    if (t)
                        for (var i in t) this.listeners.events_ar[o][i] = t[i];
                    this.listeners.events_ar[o].listener.call(this, this.listeners.events_ar[o])
                }
        }
    }, this.removeListener = function(e, t) {
        if (null == e) throw Error("type is required.");
        if ("object" == typeof e) throw Error("type must be of type String.");
        if ("function" != typeof t) throw Error("listener must be of type Function." + e);
        for (var o = 0, s = this.listeners.events_ar.length; o < s; o++)
            if (this.listeners.events_ar[o].target === this && this.listeners.events_ar[o].type === e && this.listeners.events_ar[o].listener === t) {
                this.listeners.events_ar.splice(o, 1);
                break
            }
    }, this.destroy = function() {
        this.listeners = null, this.addListener = null, this.dispatchEvent = null, this.removeListener = null
    }
},
function(e) {
    var f = function(e, t, o, s, i, n, l, a, r, d, u, h, c) {
        var _ = this;
        f.prototype;
        this.useHEXColorsForSkin_bl = u, this.normalButtonsColor_str = h, this.selectedButtonsColor_str = c, this.nImg_img = null, this.sImg_img = null, this.n_do, this.s_do, this.nImgPath_str = e, this.sImgPath_str = t, this.flashPath_str = o, this.flashButtonName_str = s, this.overPath_str = i, this.outPath_str = n, this.clickPath_str = l, this.copyPath_str = a, this.linkFlashObject = null, this.buttonWidth = r, this.buttonHeight = d, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.isDisabled_bl = !1, this.init = function() {
            _.setWidth(_.buttonWidth), _.setHeight(_.buttonHeight), _.isMobile_bl || (_.setupMainContainers(), _.setupFalshButton(), _.setButtonMode(!0))
        }, this.setupMainContainers = function() {
            _.nImg = new Image, _.nImg.src = _.nImgPath_str, _.useHEXColorsForSkin_bl ? (_.n_do = new FWDUVPTransformDisplayObject("div"), _.n_do.setWidth(_.buttonWidth), _.n_do.setHeight(_.buttonHeight), _.nImg.onload = function() {
                _.n_do_canvas = FWDUVPUtils.getCanvasWithModifiedColor(_.nImg, _.normalButtonsColor_str).canvas, _.n_do.screen.appendChild(_.n_do_canvas)
            }) : (_.n_do = new FWDUVPDisplayObject("img"), _.n_do.setScreen(_.nImg), _.n_do.setWidth(_.buttonWidth), _.n_do.setHeight(_.buttonHeight)), _.addChild(_.n_do), _.sImg = new Image, _.sImg.src = _.sImgPath_str, _.useHEXColorsForSkin_bl ? (_.s_do = new FWDUVPTransformDisplayObject("div"), _.s_do.setWidth(_.buttonWidth), _.s_do.setHeight(_.buttonHeight), _.sImg.onload = function() {
                _.s_do_canvas = FWDUVPUtils.getCanvasWithModifiedColor(_.sImg, _.selectedButtonsColor_str).canvas, _.s_do.screen.appendChild(_.s_do_canvas)
            }) : (_.s_do = new FWDUVPDisplayObject("img"), _.s_do.setScreen(_.sImg), _.s_do.setWidth(_.buttonWidth), _.s_do.setHeight(_.buttonHeight)), _.s_do.setAlpha(0), _.addChild(_.s_do), _.screen.addEventListener ? (_.screen.addEventListener("mouseover", _.onMouseOver), _.screen.addEventListener("mouseout", _.onMouseOut), _.screen.addEventListener("mouseup", _.onMouseUp)) : _.screen.attachEvent && (_.screen.attachEvent("onmouseover", _.onMouseOver), _.screen.attachEvent("onmouseout", _.onMouseOut), _.screen.attachEvent("onmouseup", _.onMouseUp))
        }, this.onMouseOver = function(e) {
            if (!e.pointerType || "mouse" == e.pointerType) {
                if (_.isDisabled_bl || _.isSelectedFinal_bl) return;
                _.setSelectedState()
            }
        }, this.onMouseOut = function(e) {
            e.pointerType && "mouse" != e.pointerType || _.setNormalState()
        }, this.onMouseUp = function(e) {
            FWDUVPFlashTest.hasFlashPlayerVersion("9.0.18") || (e.preventDefault && e.preventDefault(), _.isDisabled_bl || 2 == e.button || _.dispatchEvent(f.CLICK))
        }, this.setupFalshButton = function() {
            if (FWDUVPFlashTest.hasFlashPlayerVersion("9.0.18")) {
                var e = '<object id="' + _.flashButtonName_str + '"classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="100%" height="100%"><param name="movie" value="' + _.flashPath_str + '"/><param name="wmode" value="transparent"/><param name="scale" value="noscale"/><param name=FlashVars value="clickPath_str=' + _.clickPath_str + "&overPath_str=" + _.overPath_str + "&outPath_str=" + _.outPath_str + "&copyPath_str=" + _.copyPath_str + '"/><object type="application/x-shockwave-flash" data="' + _.flashPath_str + '" width="100%" height="100%"><param name="movie" value="' + _.flashPath_str + '"/><param name="wmode" value="transparent"/><param name="scale" value="noscale"/><param name=FlashVars value="clickPath_str=' + _.clickPath_str + "&overPath_str=" + _.overPath_str + "&outPath_str=" + _.outPath_str + "&copyPath_str=" + _.copyPath_str + '"/></object></object>',
                    t = new FWDUVPDisplayObject("div");
                t.setBackfaceVisibility(), t.setResizableSizeAfterParent(), t.screen.innerHTML = e, _.addChild(t), _.linkFlashObject = t.screen.firstChild, FWDUVPUtils.isIE || (_.linkFlashObject = _.linkFlashObject.getElementsByTagName("object")[0])
            }
        }, this.setNormalState = function() {
            FWDAnimation.killTweensOf(_.s_do), FWDAnimation.to(_.s_do, .5, {
                alpha: 0,
                ease: Expo.easeOut
            })
        }, this.setSelectedState = function() {
            FWDAnimation.killTweensOf(_.s_do), FWDAnimation.to(_.s_do, .5, {
                alpha: 1,
                ease: Expo.easeOut
            })
        }, _.updateHEXColors = function(e, t) {
            FWDUVPUtils.changeCanvasHEXColor(_.nImg, _.n_do_canvas, e), FWDUVPUtils.changeCanvasHEXColor(_.sImg, _.s_do_canvas, t)
        }, _.init()
    };
    f.setPrototype = function() {
        f.prototype = null, f.prototype = new FWDUVPDisplayObject("div")
    }, f.CLICK = "onClick", f.MOUSE_OVER = "onMouseOver", f.SHOW_TOOLTIP = "showTooltip", f.MOUSE_OUT = "onMouseOut", f.MOUSE_UP = "onMouseDown", f.prototype = null, e.FWDUVPFlashButton = f
}(window);
var FWDUVPFlashTest = function() {
var u = "undefined",
    h = "object",
    c = "Shockwave Flash",
    _ = "application/x-shockwave-flash",
    f = window,
    p = document,
    b = navigator,
    s = function() {
        var e = typeof p.getElementById != u && typeof p.getElementsByTagName != u && typeof p.createElement != u,
            t = b.userAgent.toLowerCase(),
            o = b.platform.toLowerCase(),
            s = /win/.test(o || t),
            i = /mac/.test(o || t),
            n = !!/webkit/.test(t) && parseFloat(t.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")),
            l = !1,
            a = [0, 0, 0],
            r = null;
        if (typeof b.plugins != u && typeof b.plugins[c] == h) !(r = b.plugins[c].description) || typeof b.mimeTypes != u && b.mimeTypes[_] && !b.mimeTypes[_].enabledPlugin || (l = !!0, r = r.replace(/^.*\s+(\S+\s+\S+$)/, "$1"), a[0] = parseInt(r.replace(/^(.*)\..*$/, "$1"), 10), a[1] = parseInt(r.replace(/^.*\.(.*)\s.*$/, "$1"), 10), a[2] = /[a-zA-Z]/.test(r) ? parseInt(r.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0);
        else if (typeof f.ActiveXObject != u) try {
            var d = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
            d && (r = d.GetVariable("$version")) && (l = !0, r = r.split(" ")[1].split(","), a = [parseInt(r[0], 10), parseInt(r[1], 10), parseInt(r[2], 10)])
        } catch (e) {}
        return {
            w3: e,
            pv: a,
            wk: n,
            ie: l,
            win: s,
            mac: i
        }
    }();

function e(e) {
    var t = s.pv,
        o = e.split(".");
    return o[0] = parseInt(o[0], 10), o[1] = parseInt(o[1], 10) || 0, o[2] = parseInt(o[2], 10) || 0, t[0] > o[0] || t[0] == o[0] && t[1] > o[1] || t[0] == o[0] && t[1] == o[1] && t[2] >= o[2]
}
return {
    hasFlashPlayerVersion: e
}
}();
! function(n) {
var l = function(e, t, o) {
    var s = this,
        i = l.prototype;
    this.screenToTest = e, this.screenToTest2 = t, this.hideDelay = o, this.globalX = 0, this.globalY = 0, this.currentTime, this.checkIntervalId_int, this.hideCompleteId_to, this.hasInitialTestEvents_bl = !1, this.addSecondTestEvents_bl = !1, this.dispatchOnceShow_bl = !0, this.dispatchOnceHide_bl = !1, this.isStopped_bl = !0, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, s.init = function() {}, s.start = function() {
        s.currentTime = (new Date).getTime(), clearInterval(s.checkIntervalId_int), s.checkIntervalId_int = setInterval(s.update, 100), s.addMouseOrTouchCheck(), s.isStopped_bl = !1
    }, s.stop = function() {
        clearInterval(s.checkIntervalId_int), s.isStopped_bl = !0, s.removeMouseOrTouchCheck(), s.removeMouseOrTouchCheck2()
    }, s.addMouseOrTouchCheck = function() {
        s.hasInitialTestEvents_bl || (s.hasInitialTestEvents_bl = !0, s.isMobile_bl ? s.hasPointerEvent_bl ? (s.screenToTest.screen.addEventListener("pointerdown", s.onMouseOrTouchUpdate), s.screenToTest.screen.addEventListener("MSPointerMove", s.onMouseOrTouchUpdate)) : s.screenToTest.screen.addEventListener("touchstart", s.onMouseOrTouchUpdate) : n.addEventListener ? n.addEventListener("mousemove", s.onMouseOrTouchUpdate) : document.attachEvent && document.attachEvent("onmousemove", s.onMouseOrTouchUpdate))
    }, s.removeMouseOrTouchCheck = function() {
        s.hasInitialTestEvents_bl && (s.hasInitialTestEvents_bl = !1, s.isMobile_bl ? s.hasPointerEvent_bl ? (s.screenToTest.screen.removeEventListener("pointerdown", s.onMouseOrTouchUpdate), s.screenToTest.screen.removeEventListener("MSPointerMove", s.onMouseOrTouchUpdate)) : s.screenToTest.screen.removeEventListener("touchstart", s.onMouseOrTouchUpdate) : n.removeEventListener ? n.removeEventListener("mousemove", s.onMouseOrTouchUpdate) : document.detachEvent && document.detachEvent("onmousemove", s.onMouseOrTouchUpdate))
    }, s.addMouseOrTouchCheck2 = function() {
        s.addSecondTestEvents_bl || (s.addSecondTestEvents_bl = !0, s.screenToTest.screen.addEventListener ? s.screenToTest.screen.addEventListener("mousemove", s.secondTestMoveDummy) : s.screenToTest.screen.attachEvent && s.screenToTest.screen.attachEvent("onmousemove", s.secondTestMoveDummy))
    }, s.removeMouseOrTouchCheck2 = function() {
        s.addSecondTestEvents_bl && (s.addSecondTestEvents_bl = !1, s.screenToTest.screen.removeEventListener ? s.screenToTest.screen.removeEventListener("mousemove", s.secondTestMoveDummy) : s.screenToTest.screen.detachEvent && s.screenToTest.screen.detachEvent("onmousemove", s.secondTestMoveDummy))
    }, this.secondTestMoveDummy = function() {
        s.removeMouseOrTouchCheck2(), s.addMouseOrTouchCheck()
    }, s.onMouseOrTouchUpdate = function(e) {
        var t = FWDUVPUtils.getViewportMouseCoordinates(e);
        s.globalX != t.screenX && s.globalY != t.screenY && (s.currentTime = (new Date).getTime()), s.globalX = t.screenX, s.globalY = t.screenY, s.isMobile_bl || FWDUVPUtils.hitTest(s.screenToTest.screen, s.globalX, s.globalY) || (s.removeMouseOrTouchCheck(), s.addMouseOrTouchCheck2())
    }, s.update = function(e) {
        (new Date).getTime() > s.currentTime + s.hideDelay ? s.dispatchOnceShow_bl && (s.dispatchOnceHide_bl = !0, s.dispatchOnceShow_bl = !1, s.dispatchEvent(l.HIDE), clearTimeout(s.hideCompleteId_to), s.hideCompleteId_to = setTimeout(function() {
            s.dispatchEvent(l.HIDE_COMPLETE)
        }, 1e3)) : s.dispatchOnceHide_bl && (clearTimeout(s.hideCompleteId_to), s.dispatchOnceHide_bl = !1, s.dispatchOnceShow_bl = !0, s.dispatchEvent(l.SHOW))
    }, s.reset = function() {
        clearTimeout(s.hideCompleteId_to), s.currentTime = (new Date).getTime(), s.dispatchEvent(l.SHOW)
    }, s.destroy = function() {
        s.removeMouseOrTouchCheck(), clearInterval(s.checkIntervalId_int), s.screenToTest = null, e = null, s.init = null, s.start = null, s.stop = null, s.addMouseOrTouchCheck = null, s.removeMouseOrTouchCheck = null, s.onMouseOrTouchUpdate = null, s.update = null, s.reset = null, s.destroy = null, i.destroy(), s = i = null, l.prototype = null
    }, s.init()
};
l.HIDE = "hide", l.SHOW = "show", l.HIDE_COMPLETE = "hideComplete", l.setPrototype = function() {
    l.prototype = new FWDUVPEventDispatcher
}, n.FWDUVPHider = l
}(window),
function(e) {
var o = function(i, e, t) {
    var n = this;
    o.prototype;
    this.bk_do = null, this.textHolder_do = null, this.warningIconPath_str = e, this.showErrorInfo_bl = t, this.show_to = null, this.isShowed_bl = !1, this.isShowedOnce_bl = !1, this.allowToRemove_bl = !0, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.init = function() {
        n.setResizableSizeAfterParent(), n.bk_do = new FWDUVPDisplayObject("div"), n.bk_do.setAlpha(.6), n.bk_do.setBkColor("#000000"), n.addChild(n.bk_do), n.textHolder_do = new FWDUVPDisplayObject("div"), FWDUVPUtils.isIEAndLessThen9 || (n.textHolder_do.getStyle().font = "Arial"), n.textHolder_do.getStyle().wordWrap = "break-word", n.textHolder_do.getStyle().padding = "10px", n.textHolder_do.getStyle().paddingLeft = "42px", n.textHolder_do.getStyle().lineHeight = "18px", n.textHolder_do.getStyle().color = "#000000", n.textHolder_do.setBkColor("#EEEEEE");
        var e = new Image;
        e.src = this.warningIconPath_str, this.img_do = new FWDUVPDisplayObject("img"), this.img_do.setScreen(e), this.img_do.setWidth(28), this.img_do.setHeight(28), n.addChild(n.textHolder_do), n.addChild(n.img_do)
    }, this.showText = function(e) {
        n.isShowedOnce_bl || (n.hasPointerEvent_bl ? n.screen.addEventListener("pointerdown", n.closeWindow) : (n.screen.addEventListener("mousedown", n.closeWindow), n.screen.addEventListener("touchstart", n.closeWindow)), n.isShowedOnce_bl = !0), n.setVisible(!1), n.textHolder_do.getStyle().paddingBottom = "10px", n.textHolder_do.setInnerHTML(e), clearTimeout(n.show_to), n.show_to = setTimeout(n.show, 60), setTimeout(function() {
            n.positionAndResize()
        }, 10)
    }, this.show = function() {
        var e = Math.min(640, i.stageWidth - 120);
        n.isShowed_bl = !0, n.textHolder_do.setWidth(e), setTimeout(function() {
            n.showErrorInfo_bl && n.setVisible(!0), n.positionAndResize()
        }, 100)
    }, this.positionAndResize = function() {
        var e = n.textHolder_do.getWidth(),
            t = n.textHolder_do.getHeight(),
            o = parseInt((i.stageWidth - e) / 2),
            s = parseInt((i.stageHeight - t) / 2);
        n.bk_do.setWidth(i.stageWidth), n.bk_do.setHeight(i.stageHeight), n.textHolder_do.setX(o), n.textHolder_do.setY(s), n.img_do.setX(o + 6), n.img_do.setY(s + parseInt((n.textHolder_do.getHeight() - n.img_do.h) / 2))
    }, this.closeWindow = function() {
        if (n.allowToRemove_bl) {
            n.isShowed_bl = !1, clearTimeout(n.show_to);
            try {
                i.main_do.removeChild(n)
            } catch (e) {}
        }
    }, this.init()
};
o.setPrototype = function() {
    o.prototype = new FWDUVPDisplayObject("div", "relative")
}, o.prototype = null, e.FWDUVPInfo = o
}(window),
function(e) {
var s = function(t, e) {
    var o = this;
    s.prototype;
    this.xhr = null, this.embedColoseN_img = e.embedColoseN_img, this.mainBk_do = null, this.mainHolder_do = null, this.mainTextHolder_do = null, this.text_do = null, this.bk_do = null, this.closeButton_do = null, this.embedWindowBackground_str = e.embedWindowBackground_str, this.embedWindowInputBackgroundPath_str = e.embedWindowInputBackgroundPath_str, this.secondaryLabelsColor_str = e.secondaryLabelsColor_str, this.inputColor_str = e.inputColor_str, this.sendButtonNPath_str = e.sendButtonNPath_str, this.sendButtonSPath_str = e.sendButtonSPath_str, this.inputBackgroundColor_str = e.inputBackgroundColor_str, this.borderColor_str = e.borderColor_str, this.sendToAFriendPath_str = e.sendToAFriendPath_str, this.maxTextWidth = 0, this.totalWidth = 0, this.stageWidth = 0, this.stageHeight = 0, this.buttonWidth = 44, this.buttonHeight = 19, this.embedWindowCloseButtonMargins = e.embedWindowCloseButtonMargins, this.finalEmbedPath_str = null, this.finalEmbedCode_str = null, this.linkToVideo_str = null, this.shareAndEmbedTextColor_str = e.shareAndEmbedTextColor_str, this.isYTB_bl = !1, this.isShowed_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.useVectorIcons_bl = e.useVectorIcons_bl, this.init = function() {
        o.setBackfaceVisibility(), o.mainHolder_do = new FWDUVPDisplayObject("div"), o.mainBk_do = new FWDUVPDisplayObject("div"), o.mainBk_do.getStyle().width = "100%", o.mainBk_do.getStyle().height = "100%", o.mainBk_do.setAlpha(.9), o.mainBk_do.getStyle().background = "url('" + o.embedWindowBackground_str + "')", o.mainTextHolder_do = new FWDUVPDisplayObject("div", "absolute"), o.bk_do = new FWDUVPDisplayObject("div"), o.bk_do.getStyle().background = "url('" + o.embedWindowBackground_str + "')", o.bk_do.getStyle().borderStyle = "solid", o.bk_do.getStyle().borderWidth = "1px", o.bk_do.getStyle().borderColor = o.borderColor_str, o.text_do = new FWDUVPDisplayObject("div", "relative"), o.text_do.hasTransform3d_bl = !1, o.text_do.hasTransform2d_bl = !1, o.text_do.getStyle().fontFamily = "Arial", o.text_do.getStyle().fontSize = "12px", o.text_do.getStyle().fontSmoothing = "antialiased", o.text_do.getStyle().webkitFontSmoothing = "antialiased", o.text_do.getStyle().textRendering = "optimizeLegibility", o.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), o.closeButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<div class='table-fwduvp-button'><span class='table-cell-fwduvp-button icon-close'></span></div>", void 0, "UVPCloseButtonNormalState", "UVPCloseButtonSelectedState")) : (FWDUVPSimpleButton.setPrototype(), o.closeButton_do = new FWDUVPSimpleButton(e.infoWindowClooseN_img, e.embedWindowClosePathS_str, void 0, !0, e.useHEXColorsForSkin_bl, e.normalButtonsColor_str, e.selectedButtonsColor_str)), o.closeButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, o.closeButtonOnMouseUpHandler), o.mainHolder_do.addChild(o.mainBk_do), o.mainTextHolder_do.addChild(o.bk_do), o.mainTextHolder_do.addChild(o.text_do), o.mainHolder_do.addChild(o.mainTextHolder_do), o.addChild(o.mainHolder_do), o.mainHolder_do.addChild(o.closeButton_do)
    }, this.closeButtonOnMouseUpHandler = function() {
        o.isShowed_bl && o.hide()
    }, this.positionAndResize = function() {
        o.stageWidth = t.stageWidth, o.stageHeight = t.stageHeight, o.maxTextWidth = Math.min(o.stageWidth - 150, 500), o.totalWidth = o.maxTextWidth + o.buttonWidth + 40, o.positionFinal(), o.closeButton_do.setX(o.stageWidth - o.closeButton_do.w - o.embedWindowCloseButtonMargins), o.closeButton_do.setY(o.embedWindowCloseButtonMargins), o.setWidth(o.stageWidth), o.setHeight(o.stageHeight), o.mainHolder_do.setWidth(o.stageWidth), o.mainHolder_do.setHeight(o.stageHeight)
    }, this.positionFinal = function() {
        var e;
        o.mainTextHolder_do.setWidth(o.totalWidth), e = o.mainTextHolder_do.getHeight(), o.bk_do.setWidth(o.totalWidth - 2), o.bk_do.setHeight(e - 2), o.mainTextHolder_do.setX(parseInt((o.stageWidth - o.totalWidth) / 2)), o.mainTextHolder_do.setY(parseInt((o.stageHeight - e) / 2) - 8)
    }, this.show = function(e) {
        o.isShowed_bl || (o.isShowed_bl = !0, t.main_do.addChild(o), o.text_do.setInnerHTML(e), o.positionAndResize(), clearTimeout(o.hideCompleteId_to), clearTimeout(o.showCompleteId_to), o.mainHolder_do.setY(-o.stageHeight), o.showCompleteId_to = setTimeout(o.showCompleteHandler, 900), setTimeout(function() {
            FWDAnimation.to(o.mainHolder_do, .8, {
                y: 0,
                delay: .1,
                ease: Expo.easeInOut
            })
        }, 100))
    }, this.showCompleteHandler = function() {}, this.hide = function() {
        o.isShowed_bl && (o.isShowed_bl = !1, t.customContextMenu_do && t.customContextMenu_do.enable(), o.positionAndResize(), clearTimeout(o.hideCompleteId_to), clearTimeout(o.showCompleteId_to), o.hideCompleteId_to = setTimeout(o.hideCompleteHandler, 800), FWDAnimation.killTweensOf(o.mainHolder_do), FWDAnimation.to(o.mainHolder_do, .8, {
            y: -o.stageHeight,
            ease: Expo.easeInOut
        }))
    }, this.hideCompleteHandler = function() {
        t.main_do.removeChild(o), o.dispatchEvent(s.HIDE_COMPLETE)
    }, this.init()
};
s.setPrototype = function() {
    s.prototype = new FWDUVPDisplayObject("div")
}, s.ERROR = "error", s.HIDE_COMPLETE = "hideComplete", s.prototype = null, e.FWDUVPInfoWindow = s
}(window),
function(window) {
var FWDUVPlayer = function(props) {
        var self = this,
            recoverDecodingErrorDate, recoverSwapAudioCodecDate;

        function handleMediaError() {
            if (autoRecoverError) {
                var e = performance.now();
                !recoverDecodingErrorDate || 3e3 < e - recoverDecodingErrorDate ? (recoverDecodingErrorDate = performance.now(), self.HLSError_str = "try to recover media Error ...", self.hlsJS.recoverMediaError()) : !recoverSwapAudioCodecDate || 3e3 < e - recoverSwapAudioCodecDate ? (recoverSwapAudioCodecDate = performance.now(), self.HLSError_str = "try to swap Audio Codec and recover media Error ...", self.hlsJS.swapAudioCodec(), self.hlsJS.recoverMediaError()) : self.HLSError_str = "cannot recover, last media error recovery failed ..."
            }
            self.HLSError_str && (console && console.log(self.HLSError_str), self.main_do.addChild(self.info_do), self.info_do.showText(self.HLSError_str), self.resizeHandler())
        }
        this.isInstantiate_bl = !1, this.displayType = props.displayType || FWDUVPlayer.RESPONSIVE, self.displayType.toLowerCase() != FWDUVPlayer.RESPONSIVE && self.displayType.toLowerCase() != FWDUVPlayer.FULL_SCREEN && self.displayType.toLowerCase() != FWDUVPlayer.STICKY && self.displayType.toLowerCase() != FWDUVPlayer.AFTER_PARENT && self.displayType.toLowerCase() != FWDUVPlayer.LIGHTBOX && (self.displayType = FWDUVPlayer.RESPONSIVE), self.displayType = self.displayType.toLowerCase(), this.stickyOnScroll = props.stickyOnScroll || "no", this.stickyOnScroll = "yes" == self.stickyOnScroll, self.displayType != FWDUVPlayer.RESPONSIVE && (this.stickyOnScroll = !1), self.isMinShowed = !0, self.stickyOnScrollWidth = props.stickyOnScrollWidth || 700, self.stickyOnScrollHeight = props.stickyOnScrollHeight || 394, this.maxWidth = props.maxWidth || 640, this.maxHeight = props.maxHeight || 380, this.embeddedPlaylistId, this.embeddedVideoId, this.isEmbedded_bl = !1, this.useYoutube_bl = props.useYoutube || "no", this.useYoutube_bl = "yes" == self.useYoutube_bl, this.useVimeo_bl = props.useVimeo || "no", this.useVimeo_bl = "yes" == self.useVimeo_bl, self.mainFolderPath_str = props.mainFolderPath, self.mainFolderPath_str.lastIndexOf("/") + 1 != self.mainFolderPath_str.length && (self.mainFolderPath_str += "/"), this.skinPath_str = props.skinPath, self.skinPath_str.lastIndexOf("/") + 1 != self.skinPath_str.length && (self.skinPath_str += "/"), this.warningIconPath_str = self.mainFolderPath_str + this.skinPath_str + "warningIcon.png", FWDUVPlayer.YTAPIReady = !1, this.fillEntireVideoScreen_bl = !1, self.init = function() {
            var e, t, o, s;
            self.isInstantiate_bl || (FWDUVPlayer.instaces_ar.push(this), FWDTweenLite.ticker.useRAF(!1), this.props_obj = props, this.mustHaveHolderDiv_bl = !1, this.instanceName_str = this.props_obj.instanceName, this.instanceName_str ? window[this.instanceName_str] ? alert("FWDUVPlayer instance name " + this.instanceName_str + " is already defined and contains a different instance reference, set a different instance name.") : (window[this.instanceName_str] = this).props_obj ? this.props_obj.parentId ? (self.displayType == FWDUVPlayer.RESPONSIVE && (self.mustHaveHolderDiv_bl = !0), !self.mustHaveHolderDiv_bl || FWDUVPUtils.getChildById(self.props_obj.parentId) ? (this.body = document.getElementsByTagName("body")[0], self.displayType == FWDUVPlayer.STICKY ? (this.stageContainer = document.createElement("div"), this.stageContainer.style.position = "fixed", this.stageContainer.style.width = "100%", this.stageContainer.style.zIndex = "999999", this.stageContainer.style.height = "0px", document.documentElement.appendChild(this.stageContainer), this.stageContainer.style.overflow = "visible") : self.displayType == FWDUVPlayer.FULL_SCREEN || self.displayType == FWDUVPlayer.LIGHTBOX ? self.stageContainer = document.documentElement : this.stageContainer = FWDUVPUtils.getChildById(self.props_obj.parentId), this.position_str = self.props_obj.verticalPosition, this.position_str || (this.position_str = FWDUVPlayer.POSITION_TOP), "bottom" == this.position_str ? this.position_str = FWDUVPlayer.POSITION_BOTTOM : this.position_str = FWDUVPlayer.POSITION_TOP, this.horizontalPosition_str = self.props_obj.horizontalPosition, this.horizontalPosition_str || (this.horizontalPosition_str = FWDUVPlayer.CENTER), "center" == this.horizontalPosition_str ? this.horizontalPosition_str = FWDUVPlayer.CENTER : "left" == this.horizontalPosition_str ? this.horizontalPosition_str = FWDUVPlayer.LEFT : "right" == this.horizontalPosition_str ? this.horizontalPosition_str = FWDUVPlayer.RIGHT : this.horizontalPosition_str = FWDUVPlayer.CENTER, self.isEmbedded_bl && (self.displayType = FWDUVPlayer.FULL_SCREEN), self.isMin = !1, this.lightBox_do = null, this.listeners = {
                events_ar: []
            }, this.customContextMenu_do = null, this.info_do = null, this.categories_do = null, this.playlist_do = null, this.main_do = null, this.ytb_do = null, this.preloader_do = null, this.controller_do = null, this.videoScreen_do = null, this.flashObject = null, this.videoPoster_do = null, this.largePlayButton_do = null, this.hider = null, this.videoHolder_do = null, this.videoHider_do = null, this.disableClick_do = null, this.embedWindow_do = null, this.spaceBetweenControllerAndPlaylist = self.props_obj.spaceBetweenControllerAndPlaylist || 1, this.autoScale_bl = self.props_obj.autoScale, this.autoScale_bl = "yes" == self.autoScale_bl, self.showPreloader_bl = self.props_obj.showPreloader, self.showPreloader_bl = "yes" == self.showPreloader_bl, self.preloaderColors = self.props_obj.preloaderColors || ["#666666", "#FFFFFF"], this.backgroundColor_str = self.props_obj.backgroundColor || "transparent", this.videoBackgroundColor_str = self.props_obj.videoBackgroundColor || "transparent", this.flashObjectMarkup_str = null, self.mainBackgroundImagePath_str = self.props_obj.mainBackgroundImagePath, self.mainBackgroundImagePath_str && self.mainBackgroundImagePath_str.length < 3 && (self.mainBackgroundImagePath_str = void 0), self.animate_bl = self.props_obj.animatePlayer, self.animate_bl = "yes" == self.animate_bl, this.isShowedFirstTime_bl = !0, this.offsetX = parseInt(self.props_obj.offsetX) || 0, this.offsetY = parseInt(self.props_obj.offsetY) || 0, this.lastX = 0, this.lastY = 0, this.tempStageWidth = 0, this.tempStageHeight = 0, this.tempVidStageWidth = 0, this.tempVidStageHeight = 0, this.stageWidth = 0, this.stageHeight = 0, this.vidStageWidth = 0, this.vidStageHeight = 0, this.firstTapX, this.firstTapY, this.curTime, this.totalTime, this.catId = -1, this.id = -1, this.totalVideos = 0, this.prevCatId = -1, this.totalTimePlayed = 0, this.videoSourcePath_str = "", this.prevVideoSourcePath_str, this.posterPath_str = self.props_obj.posterPath, this.videoType_str, this.videoStartBehaviour_str, this.prevVideoSource_str, this.prUVPosterSource_str, this.finalVideoPath_str, this.playListThumbnailWidth = self.props_obj.thumbnailWidth || 80, this.playListThumbnailHeight = self.props_obj.thumbnailHeight || 80, this.playlistWidth = self.props_obj.playlistRightWidth || 250, this.playlistHeight = 0, this.resizeHandlerId_to, this.resizeHandler2Id_to, this.hidePreloaderId_to, this.orientationChangeId_to, this.disableClickId_to, this.clickDelayId_to, this.secondTapId_to, this.videoHiderId_to, this.showPlaylistButtonAndPlaylist_bl = self.props_obj.showPlaylistButtonAndPlaylist, this.showPlaylistButtonAndPlaylist_bl = "no" != self.showPlaylistButtonAndPlaylist_bl, this.isPlaylistShowed_bl = self.props_obj.showPlaylistByDefault, this.isPlaylistShowed_bl = "no" != self.isPlaylistShowed_bl, self.showErrorInfo_bl = self.props_obj.showErrorInfo, self.showErrorInfo_bl = "no" != self.showErrorInfo_bl, self.showAnnotationsPositionTool_bl = self.props_obj.showAnnotationsPositionTool, self.showAnnotationsPositionTool_bl = "yes" == self.showAnnotationsPositionTool_bl, self.showAnnotationsPositionTool_bl && (self.isPlaylistShowed_bl = !1), "pause" != FWDUVPlayer.videoStartBehaviour && "stop" != FWDUVPlayer.videoStartBehaviour && "default" != FWDUVPlayer.videoStartBehaviour && (FWDUVPlayer.videoStartBehaviour = "pause"), this.lightBoxBackgroundOpacity = self.props_obj.lightBoxBackgroundOpacity || 1, this.lightBoxBackgroundColor_str = self.props_obj.lightBoxBackgroundColor || "transparent", self.preloaderBackgroundColor = self.props_obj.preloaderBackgroundColor || "#000000", self.preloaderFillColor = self.props_obj.preloaderFillColor || "#FFFFFF", self.addPrevId = 999999999 * Math.random(), this.isVideoPlayingWhenOpenWindows_bl = !1, this.isFirstPlaylistLoaded_bl = !1, this.isVideoHiderShowed_bl = !1, this.isSpaceDown_bl = !1, this.isPlaying_bl = !1, this.firstTapPlaying_bl = !1, this.stickOnCurrentInstanceKey_bl = !1, this.isFullScreen_bl = !1, this.isFlashScreenReady_bl = !1, this.orintationChangeComplete_bl = !0, this.disableClick_bl = !1, this.isAPIReady_bl = !1, this.isInstantiate_bl = !0, this.isPlaylistLoaded_bl = !1, this.isPlaylistLoadedFirstTime_bl = !1, this.useDeepLinking_bl = self.props_obj.useDeepLinking, this.useDeepLinking_bl = "yes" == self.useDeepLinking_bl, this.isAdd_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.lightBoxWidth = self.props_obj.maxWidth || 500, this.lightBoxHeight = self.props_obj.maxHeight || 400, self.isShowed_bl = self.props_obj.showPlayerByDefault, self.isShowed_bl = "yes" == self.isShowed_bl, self.googleAnalyticsTrackingCode = self.props_obj.googleAnalyticsTrackingCode, !window.ga && self.googleAnalyticsTrackingCode ? (e = window, t = document, e.GoogleAnalyticsObject = "ga", e.ga = e.ga || function() {
                (e.ga.q = e.ga.q || []).push(arguments)
            }, e.ga.l = 1 * new Date, o = t.createElement("script"), s = t.getElementsByTagName("script")[0], o.async = 1, o.src = "https://www.google-analytics.com/analytics.js", s.parentNode.insertBefore(o, s), ga("create", self.googleAnalyticsTrackingCode, "auto"), ga("send", "pageview")) : window.ga && self.googleAnalyticsTrackingCode && (ga("create", self.googleAnalyticsTrackingCode, "auto"), ga("send", "pageview")), self.displayType == FWDUVPlayer.LIGHTBOX ? self.setupLightBox() : self.displayType == FWDUVPlayer.STICKY ? (self.setupPlayer(), this.startResizeHandler()) : self.initializeOnlyWhenVisible_bl ? (this.startResizeHandler(), window.addEventListener("scroll", self.onInitlalizeScrollHandler), setTimeout(self.onInitlalizeScrollHandler, 500)) : (self.setupPlayer(), this.startResizeHandler())) : alert("FWDUVPlayer holder div is not found, please make sure that the div exsists and the id is correct! " + self.props_obj.parentId)) : alert("Property parentId is not defined in the FWDUVPlayer constructor, self property represents the div id into which the megazoom is added as a child!") : alert("FWDUVPlayer constructor properties object is not defined!") : alert("FWDUVPlayer instance name is required please make sure that the instanceName parameter exsists and it's value is uinique."))
        }, self.addMinOnScroll = function() {
            self.displayType == FWDUVPlayer.RESPONSIVE && self.stickyOnScroll && window.addEventListener("scroll", self.minimizeOnScrollHandler)
        }, self.removeMinOnScroll = function() {
            self.stickyOnScroll && window.removeEventListener("scroll", self.minimizeOnScrollHandler)
        }, self.minimizeOnScrollHandler = function(e) {
            var t = FWDUVPUtils.getScrollOffsets();
            self.pageXOffset = t.x, self.pageYOffset = t.y, self.stageContainer.getBoundingClientRect().bottom < 0 ? self.setMinimized() : self.setNormal()
        }, self.setMinimized = function() {
            self.isMin || self.isFullscreen_bl || (self.isMin = !0, self.main_do.getStyle().position = "fixed", self.main_do.getStyle().zIndex = 9999999999999, self.main_do.setAlpha(0), self.startPosisionOnMin())
        }, self.startPosisionOnMin = function() {
            self.wasPlaylistShowed_bl = self.isPlaylistShowed_bl, self.showPlaylist(), self.resizeHandler(), self.positionOnMin()
        }, self.setNormal = function() {
            self.isMin && (self.isMinShowed = !0, self.isMin = !1, self.main_do.getStyle().position = "relative", self.main_do.getStyle().zIndex = 0, FWDAnimation.killTweensOf(self.main_do), self.main_do.setAlpha(1), self.main_do.setX(0), self.main_do.setY(0), self.opener_do && self.opener_do.setX(-1e3), self.startPosisionOnNormal())
        }, self.startPosisionOnNormal = function() {
            self.opener_do && self.opener_do.showCloseButton(), self.isPlaylistShowed_bl = self.wasPlaylistShowed_bl, self.isPlaylistShowed_bl && self.hidePlaylist(), self.resizeHandler()
        }, self.positionOnMin = function(e) {
            if (self.isMin || e) {
                var t = 5,
                    o = .2;
                self.isMobile_bl && (t = 0);
                var s = 0;
                if (self.isMinShowed || (o = 0, s = Math.round(self.tempStageHeight) + t), self.opener_do) var i = self.ws.w - self.opener_do.w - t,
                    n = self.ws.h - self.tempStageHeight - t + s - self.opener_do.h;
                self.main_do.setX(self.ws.w - self.tempStageWidth - t), 0 == self.main_do.alpha || e ? (0 == self.main_do.alpha && (self.main_do.setY(self.ws.h), self.opener_do && (self.opener_do.setX(i), self.opener_do.setY(self.ws.h))), FWDAnimation.to(self.main_do, .8, {
                    alpha: 1,
                    y: self.ws.h - self.tempStageHeight - t + s,
                    delay: o,
                    ease: Expo.easeInOut
                }), self.opener_do && (FWDAnimation.killTweensOf(self.opener_do), FWDAnimation.to(self.opener_do, .8, {
                    x: i,
                    y: n,
                    delay: o,
                    ease: Expo.easeInOut
                }))) : (FWDAnimation.killTweensOf(self.main_do), self.main_do.setAlpha(1), self.main_do.setY(self.ws.h - self.tempStageHeight - t + s), self.opener_do && (FWDAnimation.killTweensOf(self.opener_do), self.opener_do.setX(i), self.opener_do.setY(n)))
            }
        }, self.onInitlalizeScrollHandler = function() {
            var e = FWDUVPUtils.getScrollOffsets();
            self.pageXOffset = e.x, self.pageYOffset = e.y, self.main_do.getRect().top >= -self.stageHeight && self.main_do.getRect().top < self.ws.h && (window.removeEventListener("scroll", self.onInitlalizeScrollHandler), self.setupPlayer())
        }, this.setupPlayer = function() {
            self.main_do || (self.setupMainDo(), self.setupInfo(), self.setupData())
        }, self.setupLightBox = function() {
            FWDUVPLightBox.setPrototype(), self.lightBox_do = new FWDUVPLightBox(self, self.lightBoxBackgroundColor_str, self.backgroundColor_str, self.lightBoxBackgroundOpacity, self.lightBoxWidth, self.lightBoxHeight), self.lightBox_do.addListener(FWDUVPLightBox.SHOW, self.lightBoxShowHandler), self.lightBox_do.addListener(FWDUVPLightBox.CLOSE, self.lightBoxCloseHandler), self.lightBox_do.addListener(FWDUVPLightBox.HIDE_COMPLETE, self.lightBoxHideCompleteHandler), self.lighboxAnimDoneId_to = setTimeout(self.setupPlayer, 1200)
        }, self.lightBoxShowHandler = function() {}, self.lightBoxCloseHandler = function() {
            self.stop(), self.stopResizeHandler()
        }, self.lightBoxHideCompleteHandler = function() {
            self.dispatchEvent(FWDUVPlayer.HIDE_LIGHTBOX_COMPLETE)
        }, self.setupMainDo = function() {
            self.main_do = new FWDUVPDisplayObject("div", "relative"), self.hasPointerEvent_bl && (self.main_do.getStyle().touchAction = "none"), self.main_do.getStyle().webkitTapHighlightColor = "rgba(0, 0, 0, 0)", self.main_do.getStyle().webkitFocusRingColor = "rgba(0, 0, 0, 0)", self.main_do.getStyle().width = "100%", self.main_do.getStyle().height = "100%", self.main_do.setBackfaceVisibility(), self.main_do.setBkColor(self.backgroundColor_str), (!FWDUVPUtils.isMobile || FWDUVPUtils.isMobile && FWDUVPUtils.hasPointerEvent) && self.main_do.setSelectable(!1), self.videoHolder_do = new FWDUVPDisplayObject("div"), self.main_do.addChild(self.videoHolder_do), self.displayType == FWDUVPlayer.STICKY ? (self.background_do = new FWDUVPDisplayObject("div"), self.background_do.getStyle().width = "100%", self.mainBackgroundImagePath_str && (self.mainBackground_do = new FWDUVPDisplayObject("div"), self.stageContainer.appendChild(self.mainBackground_do.screen)), self.stageContainer.appendChild(self.background_do.screen), self.stageContainer.appendChild(self.main_do.screen)) : self.displayType == FWDUVPlayer.FULL_SCREEN ? (self.stageContainer.style.overflow = "hidden", self.main_do.getStyle().position = "absolute", document.documentElement.appendChild(self.main_do.screen), self.stageContainer.style.zIndex = 9999999999998, self.main_do.getStyle().zIndex = 9999999999998) : self.displayType == FWDUVPlayer.BACKGROUND_VIDEO ? (document.documentElement.appendChild(self.main_do.screen), self.main_do.getStyle().zIndex = -9999999999998, self.main_do.getStyle().position = "fixed", document.documentElement.insertBefore(self.main_do.screen, document.documentElement.firstChild)) : self.displayType == FWDUVPlayer.LIGHTBOX ? (self.main_do.getStyle().position = "absolute", self.stageContainer.appendChild(self.main_do.screen), self.main_do.setX(-1e4), self.main_do.setY(-1e4), self.main_do.setWidth(0), self.main_do.setHeight(0)) : (self.stageContainer.style.overflow = "hidden", self.stageContainer.appendChild(self.main_do.screen)), self.isEmbedded_bl && (self.main_do.getStyle().zIndex = 9999999999998)
        }, self.setupInfo = function() {
            FWDUVPInfo.setPrototype(), self.info_do = new FWDUVPInfo(self, self.warningIconPath_str, self.showErrorInfo_bl), self.info_do.getStyle().zIndex = "9999999999999999"
        }, self.startResizeHandler = function() {
            self.displayType == FWDUVPlayer.STICKY && (FWDUVPUtils.isAndroid && window.addEventListener("orientationchange", self.orientationChange), window.addEventListener("scroll", self.onScrollHandler)), self.displayType == FWDUVPlayer.LIGHTBOX && window.addEventListener("scroll", self.onScrollHandler), window.addEventListener("resize", self.onResizeHandler), self.onResizeHandler(!0), self.resizeHandlerId_to = setTimeout(function() {
                self.resizeHandler()
            }, 500)
        }, this.orientationChange = function() {
            self.orintationChangeComplete_bl = !1, clearTimeout(self.resizeHandlerId_to), clearTimeout(self.resizeHandler2Id_to), clearTimeout(self.orientationChangeId_to), self.orientationChangeId_to = setTimeout(function() {
                self.orintationChangeComplete_bl = !0, self.resizeHandler(!0)
            }, 1e3), self.stageContainer.style.left = "-5000px", self.preloader_do && self.preloader_do.setX(-5e3)
        }, self.onScrollHandler = function(e) {
            if (self.displayType == FWDUVPlayer.STICKY && self.onResizeHandler(), !self.lightbox_do || self.lightbox_do.isShowed_bl) {
                self.scrollHandler();
                var t = FWDUVPUtils.getScrollOffsets();
                self.scrollOffsets = t
            }
        }, self.scrollHandler = function() {
            var e = FWDUVPUtils.getScrollOffsets();
            self.pageXOffset = e.x, self.pageYOffset = e.y, self.displayType == FWDUVPlayer.LIGHTBOX ? (self.lightBox_do.setX(e.x), self.lightBox_do.setY(e.y)) : !self.isFullScreen_bl && self.displayType != FWDUVPlayer.FULL_SCREEN || (self.main_do.setX(e.x), self.main_do.setY(e.y))
        }, self.stopResizeHandler = function() {
            window.removeEventListener ? window.removeEventListener("resize", self.onResizeHandler) : window.detachEvent && window.detachEvent("onresize", self.onResizeHandler), clearTimeout(self.resizeHandlerId_to)
        }, self.onResizeHandler = function(e) {
            self.resizeHandler(), clearTimeout(self.resizeHandler2Id_to), self.resizeHandler2Id_to = setTimeout(function() {
                self.resizeHandler()
            }, 300)
        }, self.resizeHandler = function(e, t) {
            self.tempPlaylistPosition_str;
            var o = FWDUVPUtils.getViewportSize(),
                s = FWDUVPUtils.getScrollOffsets();
            if (self.ws = o, self.displayType != FWDUVPlayer.STICKY || self.isFullScreen_bl)
                if (self.displayType != FWDUVPlayer.LIGHTBOX || self.isFullScreen_bl) self.isFullScreen_bl || self.displayType == FWDUVPlayer.FULL_SCREEN ? (self.main_do.setX(0), self.main_do.setY(0), self.stageWidth = o.w, self.stageHeight = o.h) : self.displayType == FWDUVPlayer.AFTER_PARENT ? (self.main_do.setX(0), self.main_do.setY(0), self.stageWidth = self.stageContainer.offsetWidth, self.stageHeight = self.stageContainer.offsetHeight) : (self.stageContainer.style.width = "100%", self.stageContainer.offsetWidth > self.maxWidth && (self.stageContainer.style.width = self.maxWidth + "px"), self.stageWidth = self.stageContainer.offsetWidth, self.autoScale_bl ? self.stageHeight = parseInt(self.maxHeight * (self.stageWidth / self.maxWidth)) : self.stageHeight = self.maxHeight, self.tempStageHeight = self.stageHeight);
                else {
                    if (!self.lightBox_do.isShowed_bl || !self.main_do) return;
                    self.lightBoxWidth > o.w ? (self.finalLightBoxWidth = o.w, self.finalLightBoxHeight = parseInt(self.lightBoxHeight * (o.w / self.lightBoxWidth))) : (self.finalLightBoxWidth = self.lightBoxWidth, self.finalLightBoxHeight = self.lightBoxHeight), self.lightBox_do.setWidth(o.w), self.lightBox_do.setHeight(o.h), self.lightBox_do.setX(s.x), self.lightBox_do.setY(s.y), self.lightBox_do.mainLightBox_do.setX(parseInt((o.w - self.finalLightBoxWidth) / 2)), self.lightBox_do.mainLightBox_do.setY(parseInt((o.h - self.finalLightBoxHeight) / 2)), self.lightBox_do.closeButton_do && self.lightBox_do.isShowed_bl && (self.lightBox_do.closeButton_do.setX(o.w - self.lightBox_do.closeButton_do.w - 4), self.lightBox_do.closeButton_do.setY(4)), self.main_do.setX(0), self.main_do.setY(0), self.lightBox_do.mainLightBox_do.setWidth(self.finalLightBoxWidth), self.lightBox_do.mainLightBox_do.setHeight(self.finalLightBoxHeight), self.stageWidth = self.finalLightBoxWidth, self.stageHeight = self.finalLightBoxHeight
                } else self.main_do.getStyle().width = "100%", self.main_do.getWidth() > self.maxWidth && self.main_do.setWidth(self.maxWidth), self.stageWidth = self.main_do.getWidth(), self.autoScale_bl ? self.stageHeight = parseInt(self.maxHeight * (self.stageWidth / self.maxWidth)) : self.stageHeight = self.maxHeight;
            FWDUVPUtils.isIEAndLessThen9 && self.stageWidth < 400 && (self.stageWidth = 400), self.stageHeight > o.h && self.isFullScreen_bl && (self.stageHeight = o.h), self.data && self.playlist_do && (self.playlistHeight = parseInt(self.data.playlistBottomHeight * (self.stageWidth / self.maxWidth))), self.isMin && !self.isFullScreen_bl && (self.stageWidth = Math.min(self.stickyOnScrollWidth - 10, self.ws.w - 10), self.stageHeight = parseInt(self.stickyOnScrollHeight * (self.stageWidth / self.stickyOnScrollWidth)), self.tempStageHeight = self.stageHeight), self.data && (self.tempPlaylistPosition_str = self.data.playlistPosition_str, self.stageWidth < 600 && (self.tempPlaylistPosition_str = "bottom"), self.playlistPosition_str = self.tempPlaylistPosition_str, self.playlist_do && (self.playlist_do.position_str = self.tempPlaylistPosition_str)), self.playlist_do && self.isPlaylistShowed_bl ? "bottom" == self.playlistPosition_str ? (self.vidStageWidth = self.stageWidth, self.stageHeight += self.playlistHeight + self.spaceBetweenControllerAndPlaylist, self.vidStageHeight = self.stageHeight - self.playlistHeight - self.spaceBetweenControllerAndPlaylist, self.displayType == FWDUVPlayer.FULL_SCREEN && self.controller_do.disablePlaylistButton()) : "right" == self.playlistPosition_str && (self.isFullScreen_bl ? self.vidStageWidth = self.stageWidth : self.vidStageWidth = self.stageWidth - self.playlistWidth - self.spaceBetweenControllerAndPlaylist, self.controller_do && self.controller_do.enablePlaylistButton(), self.vidStageHeight = self.stageHeight) : (self.vidStageWidth = self.stageWidth, self.vidStageHeight = self.stageHeight), self.controller_do && self.playlist_do && ("right" == self.playlistPosition_str ? self.isFullScreen_bl ? self.controller_do.disablePlaylistButton() : self.controller_do.enablePlaylistButton() : self.isEmbedded_bl && self.controller_do.disablePlaylistButton()), self.mainBackground_do && (self.mainBackground_do.setWidth(self.ws.w), self.mainBackground_do.setHeight(self.stageHeight)), e && !self.isMobile_bl || (FWDAnimation.killTweensOf(self), self.tempStageWidth = self.stageWidth, self.tempStageHeight = self.stageHeight, self.tempVidStageWidth = self.vidStageWidth, self.tempVidStageHeight = Math.max(0, self.vidStageHeight), self.resizeFinal(t), self.setStageContainerFinalHeightAndPosition(t))
        }, this.resizeFinal = function(e) {
            if (self.displayType == FWDUVPlayer.STICKY || self.isMin || (self.stageContainer.style.height = self.tempStageHeight + "px"), self.mainBackground_do && (self.mainBackground_do.setWidth(self.ws.w), self.mainBackground_do.setHeight(self.tempStageHeight)), self.main_do.setWidth(self.tempStageWidth), self.videoHolder_do.setWidth(self.tempVidStageWidth), self.videoHolder_do.setHeight(self.tempVidStageHeight), self.showPlaylistButtonAndPlaylist_bl && self.isPlaylistShowed_bl && self.playlistPosition_str, self.main_do.setHeight(self.tempStageHeight), self.displayType == FWDUVPlayer.LIGHTBOX && self.lightBox_do.mainLightBox_do.setY(parseInt((self.ws.h - self.tempStageHeight) / 2)), self.audioScreen_do && self.videoType_str == FWDUVPlayer.MP3 && self.audioScreen_do.resizeAndPosition(self.tempVidStageWidth, self.tempVidStageHeight), self.ytb_do && self.videoType_str == FWDUVPlayer.YOUTUBE && (self.ytb_do.setWidth(self.tempVidStageWidth), self.ytb_do.setHeight(self.tempVidStageHeight)), self.logo_do && self.logo_do.positionAndResize(), self.playlist_do && !FWDAnimation.isTweening(self) && (self.isMobile_bl ? self.playlist_do.resizeAndPosition(!1) : self.playlist_do.resizeAndPosition(e)), self.annotations_do && (FWDAnimation.isTweening(self) ? self.annotations_do.position(!0) : self.annotations_do.position(!1)), self.controller_do && self.controller_do.resizeAndPosition(), self.categories_do && self.categories_do.resizeAndPosition(), self.videoScreen_do && (self.videoType_str == FWDUVPlayer.VIDEO || self.videoType_str == FWDUVPlayer.HLS_JS)) {
                if (self.fillEntireVideoScreen_bl) {
                    if (self.videoScreen_do && self.videoScreen_do.video_el && 0 != self.videoScreen_do.video_el.videoWidth) {
                        var t = self.videoScreen_do.video_el.videoWidth,
                            o = self.videoScreen_do.video_el.videoHeight,
                            s = self.tempVidStageWidth / t,
                            i = self.tempVidStageHeight / o;
                        totalScale = 0, i <= s ? totalScale = s : s <= i && (totalScale = i), self.finalVideoScreenW = parseInt(t * totalScale), self.finalVideoScreenH = parseInt(o * totalScale), self.finalVideoScreenX = parseInt((self.tempVidStageWidth - self.finalVideoScreenW) / 2), self.finalVideoScreenY = parseInt((self.tempVidStageHeight - self.finalVideoScreenH) / 2)
                    }
                } else self.finalVideoScreenW = self.tempVidStageWidth, self.finalVideoScreenH = self.tempVidStageHeight, self.finalVideoScreenX = self.finalVideoScreenY = 0;
                self.videoScreen_do.resizeAndPosition(self.finalVideoScreenW, self.finalVideoScreenH, self.finalVideoScreenX, self.finalVideoScreenY)
            }
            self.ytb_do && self.ytb_do.ytb && self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do.resizeAndPosition(), self.vimeo_do && self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do.resizeAndPosition(), self.preloader_do && self.positionPreloader(), self.dumyClick_do && (self.is360 && self.videoType_str == FWDUVPlayer.YOUTUBE ? self.dumyClick_do.setWidth(0) : (self.dumyClick_do.setWidth(self.tempVidStageWidth), self.isMobile_bl || self.videoType_str != FWDUVPlayer.YOUTUBE || self.isAdd_bl, self.dumyClick_do.setHeight(self.tempVidStageHeight))), self.videoHider_do && self.resizeVideoHider(), self.largePlayButton_do && self.positionLargePlayButton(), self.videoPoster_do && self.videoPoster_do.allowToShow_bl && self.videoPoster_do.positionAndResize(), self.popw_do && self.popw_do.isShowed_bl && self.popw_do.positionAndResize(), self.embedWindow_do && self.embedWindow_do.isShowed_bl && self.embedWindow_do.positionAndResize(), self.passWindow_do && self.passWindow_do.isShowed_bl && self.passWindow_do.positionAndResize(), self.infoWindow_do && self.infoWindow_do.isShowed_bl && self.infoWindow_do.positionAndResize(), self.info_do && self.info_do.isShowed_bl && self.info_do.positionAndResize(), self.shareWindow_do && self.shareWindow_do.isShowed_bl && self.shareWindow_do.positionAndResize(), self.adsStart_do && self.positionAds(), self.subtitle_do && self.subtitle_do.position(e), self.popupAds_do && self.popupAds_do.position(e), self.positionAdsImage(), self.positionOnMin()
        }, this.setStageContainerFinalHeightAndPosition = function(e) {
            self.displayType == FWDUVPlayer.STICKY && (self.allowToResizeAndPosition_bl = !0, clearTimeout(self.showPlaylistWithDelayId_to), self.horizontalPosition_str == FWDUVPlayer.LEFT ? (self.main_do.setX(self.offsetX), self.opener_do && ("right" == self.data.openerAlignment_str ? self.opener_do.setX(Math.round(self.stageWidth - self.opener_do.w + self.offsetX)) : self.opener_do.setX(self.offsetX))) : self.horizontalPosition_str == FWDUVPlayer.CENTER ? (self.main_do.setX(Math.round((self.ws.w - self.stageWidth) / 2)), self.opener_do && ("right" == self.data.openerAlignment_str ? self.opener_do.setX(parseInt((self.ws.w - self.stageWidth) / 2) + self.stageWidth - self.opener_do.w) : self.opener_do.setX(self.main_do.x))) : self.horizontalPosition_str == FWDUVPlayer.RIGHT && (self.main_do.setX(Math.round(self.ws.w - self.stageWidth - self.offsetX)), self.opener_do && ("right" == self.data.openerAlignment_str ? self.opener_do.setX(Math.round(self.ws.w - self.opener_do.w - self.offsetX)) : self.opener_do.setX(Math.round(self.ws.w - self.stageWidth - self.offsetX)))), e ? self.position_str == FWDUVPlayer.POSITION_TOP ? (self.isShowed_bl && !self.isShowedFirstTime_bl ? FWDAnimation.to(self.stageContainer, .8, {
                css: {
                    top: self.offsetY
                },
                ease: Expo.easeInOut
            }) : FWDAnimation.to(self.stageContainer, .8, {
                css: {
                    top: -self.stageHeight
                },
                ease: Expo.easeInOut
            }), self.isShowedFirstTime_bl ? self.opener_do && FWDAnimation.to(self.opener_do, .8, {
                y: self.stageHeight - self.opener_do.h,
                ease: Expo.easeInOut
            }) : self.opener_do && FWDAnimation.to(self.opener_do, .8, {
                y: self.stageHeight,
                ease: Expo.easeInOut
            })) : (self.isShowed_bl && !self.isShowedFirstTime_bl ? FWDAnimation.to(self.stageContainer, .8, {
                css: {
                    top: self.ws.h - self.stageHeight - self.offsetY
                },
                ease: Expo.easeInOut
            }) : FWDAnimation.to(self.stageContainer, .8, {
                css: {
                    top: self.ws.h
                },
                ease: Expo.easeInOut,
                onComplete: self.moveWheyLeft
            }), self.isShowedFirstTime_bl ? self.opener_do && FWDAnimation.to(self.opener_do, .8, {
                y: 0,
                ease: Expo.easeInOut
            }) : self.opener_do && FWDAnimation.to(self.opener_do, .8, {
                y: -self.opener_do.h,
                ease: Expo.easeInOut
            })) : (FWDAnimation.killTweensOf(self.stageContainer), self.position_str == FWDUVPlayer.POSITION_TOP ? (self.isShowed_bl && !self.isShowedFirstTime_bl ? self.stageContainer.style.top = self.offsetY + "px" : self.stageContainer.style.top = -self.stageHeight + "px", self.isShowedFirstTime_bl ? self.opener_do && self.opener_do.setY(self.stageHeight - self.opener_do.h) : self.opener_do && self.opener_do.setY(self.stageHeight)) : (self.isShowed_bl && !self.isShowedFirstTime_bl ? self.stageContainer.style.top = self.ws.h - self.stageHeight - self.offsetY + "px" : self.stageContainer.style.top = self.ws.h + "px", self.isShowedFirstTime_bl ? self.opener_do && self.opener_do.setY(0) : self.opener_do && self.opener_do.setY(-self.opener_do.h))))
        }, this.setupClickScreen = function() {
            self.dumyClick_do = new FWDUVPDisplayObject("div"), FWDUVPUtils.isIE && (self.dumyClick_do.setBkColor("#00FF00"), self.dumyClick_do.setAlpha(1e-6)), self.hasPointerEvent_bl ? (self.dumyClick_do.screen.addEventListener("pointerdown", self.playPauseDownHandler), self.dumyClick_do.screen.addEventListener("pointerup", self.playPauseClickHandler), self.dumyClick_do.screen.addEventListener("pointermove", self.playPauseMoveHandler)) : self.isMobile_bl ? self.dumyClick_do.screen.addEventListener("click", self.playPauseClickHandler) : (self.dumyClick_do.screen.addEventListener("mousedown", self.playPauseDownHandler), self.dumyClick_do.screen.addEventListener("mouseup", self.playPauseClickHandler), self.dumyClick_do.screen.addEventListener("mousemove", self.playPauseMoveHandler)), self.hideClickScreen(), self.videoHolder_do.addChild(self.dumyClick_do)
        }, this.playPauseDownHandler = function(e) {
            self.isClickHandlerMoved_bl = !1;
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            self.firstDommyTapX = t.screenX, self.firstDommyTapY = t.screenY, self.is360 && (self.dumyClick_do.getStyle().cursor = "url(" + self.data.grabPath_str + "), default")
        }, this.playPauseMoveHandler = function(e) {
            var t, o, s = FWDUVPUtils.getViewportMouseCoordinates(e);
            e.touches && 1 != e.touches.length || (t = Math.abs(s.screenX - self.firstDommyTapX), o = Math.abs(s.screenY - self.firstDommyTapY), self.isMobile_bl && (10 < t || 10 < o) ? self.isClickHandlerMoved_bl = !0 : !self.isMobile_bl && (2 < t || 2 < o) && (self.isClickHandlerMoved_bl = !0))
        }, this.playPauseClickHandler = function(e) {
            self.is360 && (self.dumyClick_do.getStyle().cursor = "url(" + self.data.handPath_str + "), default"), 2 != e.button && (self.isClickHandlerMoved_bl || (self.isAdd_bl ? self.data.adsPageToOpenURL_str && "none" != self.data.adsPageToOpenURL_str && (self.ClickTracking && self.executeVastEvent(self.ClickTracking), window.open(self.data.adsPageToOpenURL_str, self.data.adsPageToOpenTarget_str), self.pause()) : self.disableClick_bl || (self.firstTapPlaying_bl = self.isPlaying_bl, (FWDUVPlayer.keyboardCurInstance = self).controller_do && 0 != self.controller_do.mainHolder_do.y && self.isMobile_bl || (self.isMobile_bl || (FWDUVPlayer.videoStartBehaviour == FWDUVPlayer.PAUSE_ALL_VIDEOS ? FWDUVPlayer.pauseAllVideos(self) : FWDUVPlayer.videoStartBehaviour == FWDUVPlayer.STOP_ALL_VIDEOS && FWDUVPlayer.stopAllVideos(self)), self.videoType_str == FWDUVPlayer.YOUTUBE ? self.ytb_do.togglePlayPause() : self.videoType_str == FWDUVPlayer.MP3 ? self.audioScreen_do.togglePlayPause() : FWDUVPlayer.hasHTML5Video ? self.videoScreen_do && self.videoScreen_do.togglePlayPause() : self.isFlashScreenReady_bl && self.flashObject.togglePlayPause()))))
        }, this.showClickScreen = function() {
            self.dumyClick_do.setVisible(!0), self.isAdd_bl && self.data.adsPageToOpenURL_str && "none" != self.data.adsPageToOpenURL_str ? self.dumyClick_do.setButtonMode(!0) : self.is360 ? self.dumyClick_do.getStyle().cursor = "url(" + self.data.handPath_str + "), default" : self.dumyClick_do.setButtonMode(!1)
        }, this.hideClickScreen = function() {
            self.dumyClick_do.setVisible(!1)
        }, this.setupDisableClick = function() {
            self.disableClick_do = new FWDUVPDisplayObject("div"), FWDUVPUtils.isIE && (self.disableClick_do.setBkColor("#ff0000"), self.disableClick_do.setAlpha(.001)), self.main_do.addChild(self.disableClick_do)
        }, this.disableClick = function() {
            self.disableClick_bl = !0, clearTimeout(self.disableClickId_to), self.disableClick_do && (self.disableClick_do.setWidth(self.stageWidth), self.disableClick_do.setHeight(self.stageHeight)), self.disableClickId_to = setTimeout(function() {
                self.disableClick_do && (self.disableClick_do.setWidth(0), self.disableClick_do.setHeight(0)), self.disableClick_bl = !1
            }, 500)
        }, this.showDisable = function() {
            self.disableClick_do.w != self.stageWidth && (self.disableClick_do.setWidth(self.stageWidth), self.disableClick_do.setHeight(self.stageHeight))
        }, this.hideDisable = function() {
            self.disableClick_do && 0 != self.disableClick_do.w && (self.disableClick_do.setWidth(0), self.disableClick_do.setHeight(0))
        }, this.addDoubleClickSupport = function() {
            self.hasPointerEvent_bl ? self.dumyClick_do.screen.addEventListener("pointerdown", self.onFirstDown) : (self.isMobile_bl || self.dumyClick_do.screen.addEventListener("mousedown", self.onFirstDown), self.dumyClick_do.screen.addEventListener("touchstart", self.onFirstDown)), self.setupVisualization()
        }, this.onFirstDown = function(e) {
            if (2 != e.button) {
                self.isFullscreen_bl && e.preventDefault && e.preventDefault();
                var t = FWDUVPUtils.getViewportMouseCoordinates(e);
                self.firstTapX = t.screenX - self.main_do.getGlobalX(), self.firstTapY = t.screenY - self.main_do.getGlobalY(), self.firstTapPlaying_bl = self.isPlaying_bl, FWDUVPUtils.isIEWebKit || (self.hasPointerEvent_bl ? (self.dumyClick_do.screen.removeEventListener("pointerdown", self.onFirstDown), self.dumyClick_do.screen.addEventListener("pointerdown", self.onSecondDown)) : (self.isMobile_bl || (self.dumyClick_do.screen.addEventListener("mousedown", self.onSecondDown), self.dumyClick_do.screen.removeEventListener("mousedown", self.onFirstDown)), self.dumyClick_do.screen.addEventListener("touchstart", self.onSecondDown), self.dumyClick_do.screen.removeEventListener("touchstart", self.onFirstDown)), clearTimeout(self.secondTapId_to), self.secondTapId_to = setTimeout(self.doubleTapExpired, 500))
            }
        }, this.doubleTapExpired = function() {
            clearTimeout(self.secondTapId_to), self.hasPointerEvent_bl ? (self.dumyClick_do.screen.removeEventListener("pointerdown", self.onSecondDown), self.dumyClick_do.screen.addEventListener("pointerdown", self.onFirstDown)) : (self.dumyClick_do.screen.removeEventListener("touchstart", self.onSecondDown), self.dumyClick_do.screen.addEventListener("touchstart", self.onFirstDown), self.isMobile_bl || (self.dumyClick_do.screen.removeEventListener("mousedown", self.onSecondDown), self.dumyClick_do.screen.addEventListener("mousedown", self.onFirstDown)))
        }, this.onSecondDown = function(e) {
            e.preventDefault && e.preventDefault();
            var t, o, s = FWDUVPUtils.getViewportMouseCoordinates(e);
            FWDUVPUtils.isIEWebKit && (self.firstTapPlaying_bl = self.isPlaying_bl), e.touches && 1 != e.touches.length || (t = Math.abs(s.screenX - self.main_do.getGlobalX() - self.firstTapX), o = Math.abs(s.screenY - self.main_do.getGlobalY() - self.firstTapY), 10 < t || 10 < o || (self.firstTapX < .33 * self.tempVidStageWidth ? self.isPlaying_bl || (self.skipOnDb_bl = !0, self.rewind(10), self.addVisualization("left"), setTimeout(function() {
                self.isPlaying_bl || self.play()
            }, 200), setTimeout(function() {
                self.skipOnDb_bl = !1
            }, 500)) : self.firstTapX > .67 * self.tempVidStageWidth ? self.isPlaying_bl || (self.skipOnDb_bl = !0, self.rewind(-10), self.addVisualization("right"), setTimeout(function() {
                self.isPlaying_bl || self.play()
            }, 200), setTimeout(function() {
                self.skipOnDb_bl = !1
            }, 500)) : (self.switchFullScreenOnDoubleClick(), self.firstTapPlaying_bl ? self.play() : self.pause())))
        }, this.switchFullScreenOnDoubleClick = function() {
            self.disableClick(), self.isFullScreen_bl ? self.goNormalScreen() : self.goFullScreen()
        }, self.lasPosition, this.setupVisualization = function() {
            self.mainVz_do = new FWDUVPDisplayObject("div"), self.mainVz_do.getStyle().pointerEvents = "none", self.mainVz_do.getStyle().backgroundColor = "rgba(0,0,0,0.01)", self.mainVzBackgrond_do = new FWDUVPDisplayObject("div"), self.mainVzBackgrond_do.getStyle().width = "100%", self.mainVzBackgrond_do.getStyle().height = "100%", self.mainVzBackgrond_do.getStyle().backgroundColor = "rgba(255,255,255, .15)", self.mainVz_do.getStyle().borderRadius = "100%", self.mainVz_do.addChild(self.mainVzBackgrond_do), self.circle_do = new FWDUVPTransformDisplayObject("div"), self.circle_do.getStyle().backgroundColor = "rgba(255,255,255, .15)", self.circle_do.getStyle().borderRadius = "100%", self.mainVz_do.addChild(self.circle_do);
            var e = new Image;
            e.src = self.mainFolderPath_str + this.skinPath_str + "vis.png", self.vzImg1_do = new FWDUVPTransformDisplayObject("img"), self.vzImg1_do.setScreen(e), self.vzImg1_do.setWidth(17), self.vzImg1_do.setHeight(23), self.mainVz_do.addChild(self.vzImg1_do);
            var t = new Image;
            t.src = self.mainFolderPath_str + this.skinPath_str + "vis.png", self.vzImg2_do = new FWDUVPTransformDisplayObject("img"), self.vzImg2_do.setScreen(t), self.vzImg2_do.setWidth(17), self.vzImg2_do.setHeight(23), self.mainVz_do.addChild(self.vzImg2_do);
            var o = new Image;
            o.src = self.mainFolderPath_str + this.skinPath_str + "vis.png", self.vzImg3_do = new FWDUVPTransformDisplayObject("img"), self.vzImg3_do.setScreen(o), self.vzImg3_do.setWidth(17), self.vzImg3_do.setHeight(23), self.mainVz_do.addChild(self.vzImg3_do)
        }, this.addVisualization = function(e) {
            clearTimeout(self.vizFinisedId_to), clearTimeout(self.vizFinished2Id_to);
            var t = Math.round(self.tempVidStageWidth / 2),
                o = Math.round(1.5 * self.tempVidStageHeight);
            FWDAnimation.killTweensOf(self.mainVzBackgrond_do), self.lasPosition != e && self.mainVzBackgrond_do.setAlpha(0), FWDAnimation.to(self.mainVzBackgrond_do, .4, {
                alpha: 1
            }), self.mainVz_do.setVisible(!0), self.mainVz_do.setWidth(t), self.mainVz_do.setHeight(o), self.mainVz_do.setY((self.tempVidStageHeight - o) / 2);
            var s = Math.abs(self.mainVz_do.y);
            self.controller_do && self.controller_do.isShowed_bl && (s -= self.controller_do.stageHeight / 2), self.videoHolder_do.contains(self.mainVz_do) || (self.controller_do ? self.videoHolder_do.addChildAt(self.mainVz_do, self.videoHolder_do.getChildIndex(self.controller_do) - 1) : self.videoHolder_do.addChild(self.mainVz_do)), "right" == e ? (self.mainVz_do.getStyle().borderRadius = "100% 0% 0% 100%", self.mainVz_do.setX(t), self.vzImg1_do.setRotation(0), self.vzImg2_do.setRotation(0), self.vzImg3_do.setRotation(0)) : (self.mainVz_do.getStyle().borderRadius = "0% 100% 100% 0%", self.mainVz_do.setX(0), self.vzImg1_do.setRotation(180), self.vzImg2_do.setRotation(180), self.vzImg3_do.setRotation(180)), self.vzImg1_do.setX(Math.round(t - 3 * self.vzImg1_do.w) / 2), self.vzImg1_do.setY(Math.round(s + (self.tempVidStageHeight - self.vzImg1_do.h) / 2)), self.vzImg2_do.setX(self.vzImg1_do.x + self.vzImg1_do.w), self.vzImg2_do.setY(self.vzImg1_do.y), self.vzImg3_do.setX(self.vzImg2_do.x + self.vzImg2_do.w), self.vzImg3_do.setY(self.vzImg2_do.y), FWDAnimation.killTweensOf(self.vzImg1_do), FWDAnimation.killTweensOf(self.vzImg2_do), FWDAnimation.killTweensOf(self.vzImg3_do), self.vzImg1_do.setAlpha(0), self.vzImg2_do.setAlpha(0), self.vzImg3_do.setAlpha(0), "right" == e ? (FWDAnimation.to(self.vzImg1_do, .4, {
                alpha: 1
            }), FWDAnimation.to(self.vzImg1_do, .4, {
                alpha: 0,
                delay: .3
            }), FWDAnimation.to(self.vzImg2_do, .4, {
                alpha: 1,
                delay: .3
            }), FWDAnimation.to(self.vzImg2_do, .4, {
                alpha: 0,
                delay: .6
            }), FWDAnimation.to(self.vzImg3_do, .4, {
                alpha: 1,
                delay: .6
            }), FWDAnimation.to(self.vzImg3_do, .4, {
                alpha: 0,
                delay: .9
            })) : (FWDAnimation.to(self.vzImg3_do, .4, {
                alpha: 1
            }), FWDAnimation.to(self.vzImg3_do, .4, {
                alpha: 0,
                delay: .3
            }), FWDAnimation.to(self.vzImg2_do, .4, {
                alpha: 1,
                delay: .3
            }), FWDAnimation.to(self.vzImg2_do, .4, {
                alpha: 0,
                delay: .6
            }), FWDAnimation.to(self.vzImg1_do, .4, {
                alpha: 1,
                delay: .6
            }), FWDAnimation.to(self.vzImg1_do, .4, {
                alpha: 0,
                delay: .9
            })), FWDAnimation.killTweensOf(self.circle_do), self.circle_do.setAlpha(1), self.circle_do.setScale2(1), self.circle_do.setWidth(t), self.circle_do.setHeight(t), self.circle_do.setScale2(0), self.circle_do.setX(self.firstTapX - self.mainVz_do.x - self.circle_do.w / 2), self.circle_do.setY(self.firstTapY + s - self.circle_do.w / 2), FWDAnimation.to(self.circle_do, .8, {
                scale: 2,
                ease: Expo.easeInOut
            }), self.vizFinisedId_to = setTimeout(function() {
                FWDAnimation.to(self.mainVzBackgrond_do, .4, {
                    alpha: 0
                }), FWDAnimation.to(self.circle_do, .4, {
                    alpha: 0
                }), self.vizFinished2Id_to = setTimeout(function() {
                    self.mainVz_do.setVisible(!1)
                }, 400)
            }, 800), self.lasPosition = e
        }, this.stopVisualization = function() {
            self.mainVz_do && (clearTimeout(self.vizFinisedId_to), clearTimeout(self.vizFinished2Id_to), self.mainVz_do.setVisible(!1))
        }, this.setupVideoHider = function() {
            self.videoHider_do = new FWDUVPDisplayObject("div"), self.videoHider_do.setBkColor(self.backgroundColor_str), self.videoHolder_do.addChild(self.videoHider_do)
        }, this.showVideoHider = function() {
            !self.isVideoHiderShowed_bl && self.videoHider_do && (self.isVideoHiderShowed_bl = !0, self.videoHider_do.setVisible(!0), self.resizeVideoHider())
        }, this.hideVideoHider = function() {
            self.isVideoHiderShowed_bl && (self.isVideoHiderShowed_bl = !1, clearTimeout(self.videoHilderId_to), self.videoHilderId_to = setTimeout(function() {
                self.videoHider_do.setVisible(!1)
            }, 300))
        }, this.resizeVideoHider = function() {
            self.isVideoHiderShowed_bl && (self.videoHider_do.setWidth(self.tempStageWidth), self.videoHider_do.setHeight(self.tempStageHeight))
        }, this.setupYoutubeAPI = function() {
            if (!self.ytb_do)
                if ("undefined" != typeof YT && YT.Player) self.setupYoutubePlayer();
                else if (FWDUVPlayer.isYoutubeAPILoadedOnce_bl) self.keepCheckingYoutubeAPI_int = setInterval(function() {
                "undefined" != typeof YT && YT && YT.Player && (-1 == self.videoSourcePath_str.indexOf("youtube.") && clearInterval(self.keepCheckingYoutubeAPI_int), clearInterval(self.keepCheckingYoutubeAPI_int), self.setupYoutubePlayer())
            }, 50);
            else {
                var e = document.createElement("script");
                e.src = "https://www.youtube.com/iframe_api";
                var t = document.getElementsByTagName("script")[0];
                t.parentNode.insertBefore(e, t), e.onload = function() {
                    self.checkIfYoutubePlayerIsReadyId_int = setInterval(function() {
                        YT && YT.Player && (clearInterval(self.checkIfYoutubePlayerIsReadyId_int), self.setupYoutubePlayer())
                    }, 50)
                }, e.onerror = function() {
                    setTimeout(function() {
                        self.main_do.addChild(self.info_do), self.info_do.showText("Error loading Youtube API"), self.preloader_do.hide()
                    }, 500)
                }, FWDUVPlayer.isYoutubeAPILoadedOnce_bl = !0
            }
        }, this.setupYoutubePlayer = function() {
            self.ytb_do || (FWDUVPYoutubeScreen.setPrototype(), self.ytb_do = new FWDUVPYoutubeScreen(self, self.data.volume), self.ytb_do.addListener(FWDUVPYoutubeScreen.READY, self.youtubeReadyHandler), self.ytb_do.addListener(FWDUVPVideoScreen.ERROR, self.videoScreenErrorHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.SAFE_TO_SCRUBB, self.videoScreenSafeToScrubbHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.STOP, self.videoScreenStopHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.PLAY, self.videoScreenPlayHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.PAUSE, self.videoScreenPauseHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.UPDATE, self.videoScreenUpdateHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.UPDATE_TIME, self.videoScreenUpdateTimeHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.LOAD_PROGRESS, self.videoScreenLoadProgressHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.PLAY_COMPLETE, self.videoScreenPlayCompleteHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.CUED, self.youtubeScreenCuedHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.QUALITY_CHANGE, self.youtubeScreenQualityChangeHandler), self.ytb_do.addListener(FWDUVPYoutubeScreen.UPDATE_SUBTITLE, self.videoScreenUpdateSubtitleHandler))
        }, this.youtubeReadyHandler = function(e) {
            self.isYoutubeReady_bl = !0, self.hidePreloaderId_to = setTimeout(function() {
                self.preloader_do && self.preloader_do.hide(!0)
            }, 50), self.isTempYoutubeAdd_bl = self.isAdd_bl, self.isAdd_bl ? self.videoType_str == FWDUVPlayer.YOUTUBE && self.setSource(self.addSource_str) : self.videoType_str == FWDUVPlayer.YOUTUBE && self.updateAds(0, !0)
        }, this.youtubeScreenCuedHandler = function() {
            self.main_do && self.main_do.contains(self.info_do) && self.main_do.removeChild(self.info_do)
        }, this.youtubeScreenQualityChangeHandler = function(e) {
            self.videoType_str == FWDUVPlayer.VIDEO && (self.curDurration = self.videoScreen_do.curDuration), self.controller_do && self.controller_do.updateQuality(e.levels, e.qualityLevel)
        }, this.setupVimeoAPI = function() {
            if (!self.vimeo_do)
                if ("undefined" != typeof Vimeo && Vimeo.Player) self.setupVimeoPlayer();
                else if (FWDUVPlayer.isVimeoAPILoadedOnce_bl) self.keepCheckingVimeoAPI_int = setInterval(function() {
                "undefined" != typeof Vimeo && Vimeo && Vimeo.Player && (-1 == self.videoSourcePath_str.indexOf("vimeo.") && clearInterval(self.keepCheckingVimeoAPI_int), clearInterval(self.keepCheckingVimeoAPI_int), self.setupVimeoPlayer())
            }, 50);
            else {
                var e = document.createElement("script");
                e.src = "https://player.vimeo.com/api/player.js";
                var t = document.getElementsByTagName("script")[0];
                t.parentNode.insertBefore(e, t), e.onload = function() {
                    self.keepCheckingVimeoAPI_int = setInterval(function() {
                        "undefined" != typeof Vimeo && Vimeo && Vimeo.Player && (clearInterval(self.keepCheckingVimeoAPI_int), self.setupVimeoPlayer())
                    }, 50)
                }, e.onerror = function() {
                    setTimeout(function() {
                        self.main_do.addChild(self.info_do), self.info_do.showText("Error loading Vimeo API"), self.preloader_do.hide()
                    }, 500)
                }, FWDUVPlayer.isVimeoAPILoadedOnce_bl = !0
            }
        }, this.setupVimeoPlayer = function() {
            self.vimeo_do || (FWDUVPVimeoScreen.setPrototype(), self.vimeo_do = new FWDUVPVimeoScreen(self, self.data.volume), self.vimeo_do.addListener(FWDUVPVimeoScreen.ERROR, self.vimeoInitErrorHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.READY, self.vimeoReadyHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.SAFE_TO_SCRUBB, self.videoScreenSafeToScrubbHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.STOP, self.videoScreenStopHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.PLAY, self.videoScreenPlayHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.PAUSE, self.videoScreenPauseHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.UPDATE, self.videoScreenUpdateHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.UPDATE_TIME, self.videoScreenUpdateTimeHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.LOAD_PROGRESS, self.videoScreenLoadProgressHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.PLAY_COMPLETE, self.videoScreenPlayCompleteHandler), self.vimeo_do.addListener(FWDUVPVimeoScreen.UPDATE_SUBTITLE, self.videoScreenUpdateSubtitleHandler))
        }, this.vimeoInitErrorHandler = function(e) {
            self.main_do.addChild(self.info_do), self.info_do.showText(e.error), self.preloader_do.hide()
        }, this.vimeoReadyHandler = function(e) {
            self.isVimeoReady_bl = !0, clearInterval(self.hidePreloaderId_to), self.hidePreloaderId_to = setTimeout(function() {
                self.preloader_do && self.preloader_do.hide(!0)
            }, 50), self.isAdd_bl ? self.videoType_str == FWDUVPlayer.VIMEO && self.setSource(self.addSource_str) : self.videoType_str == FWDUVPlayer.VIMEO && self.updateAds(0, !0)
        }, self.setupContextMenu = function() {
            FWDUVPContextMenu.setPrototype(), self.customContextMenu_do = new FWDUVPContextMenu(self, self.data)
        }, self.setupRSM = function() {
            window.addEventListener("beforeunload", function(e) {
                Math.random();
                if (self.isPlaying_bl) {
                    document.cookie = "fwduvp_video_path=" + self.videoSourcePath_str + "; expires=Thu, 18 Dec 2040 00:00:01 GMT; path=/";
                    var t = self.getCurrentTime();
                    5 == t.length && (t = "00:" + t), document.cookie = "fwduvp_time=" + t + "; expires=Thu, 18 Dec 2040 00:00:01 GMT; path=/"
                }
            })
        }, self.setupData = function() {
            FWDUVPData.setPrototype(), self.data = new FWDUVPData(self.props_obj, self.rootElement_el, self), self.data.useYoutube_bl = self.useYoutube_bl, self.mainBackground_do && (self.mainBackground_do.getStyle().background = "url('" + self.mainBackgroundImagePath_str + "')"), self.data.addListener(FWDUVPData.VAST_LOADED, self.vastLoaded), self.data.addListener(FWDUVPData.PRELOADER_LOAD_DONE, self.onPreloaderLoadDone), self.data.addListener(FWDUVPData.LOAD_ERROR, self.dataLoadError), self.data.addListener(FWDUVPData.SKIN_PROGRESS, self.dataSkinProgressHandler), self.data.addListener(FWDUVPData.SKIN_LOAD_COMPLETE, self.dataSkinLoadComplete), self.data.addListener(FWDUVPData.PLAYLIST_LOAD_COMPLETE, self.dataPlayListLoadComplete)
        }, self.vastLoaded = function(e) {
            self.data.playlist_ar[self.id].ads_ar = e.ads, self.updateAds(0)
        }, self.onPreloaderLoadDone = function() {
            self.data.autoPlay_bl && !FWDUVPlayer.iFrame && FWDUVPUtils.isChrome && !FWDUVPUtils.isMobile && (FWDUVPlayer.iFrame = document.createElement("iframe"), FWDUVPlayer.iFrame.src = self.mainFolderPath_str + "audio/silent.mp3", FWDUVPlayer.iFrame.style.position = "absolute", FWDUVPlayer.iFrame.style.top = "-500px", document.documentElement.appendChild(FWDUVPlayer.iFrame)), self.showPreloader_bl && self.setupPreloader(), self.isMobile_bl || self.setupContextMenu(), self.fillEntireVideoScreen_bl = self.data.fillEntireVideoScreen_bl, self.resizeHandler()
        }, self.dataLoadError = function(e) {
            self.main_do.addChild(self.info_do), self.info_do.showText(e.text), self.preloader_do && self.preloader_do.hide(!1), self.resizeHandler(), self.playlist_do && (self.playlist_do.catId = -1), self.dispatchEvent(FWDUVPlayer.ERROR, {
                error: e.text
            })
        }, self.dataSkinProgressHandler = function(e) {}, self.dataSkinLoadComplete = function() {
            if (-1 != location.protocol.indexOf("file:") && (FWDUVPUtils.isOpera || FWDUVPUtils.isIEAndLessThen9)) return self.main_do.addChild(self.info_do), self.info_do.allowToRemove_bl = !1, self.info_do.showText("This browser can't play video local, please test online or use a browser like Firefox of Chrome."), void(self.preloader_do && self.preloader_do.hide());
            if (self.volume = self.data.volume, self.playlistHeight = self.data.playlistBottomHeight, self.displayType != FWDUVPlayer.FULL_SCREEN || FWDUVPUtils.hasFullScreen || (self.data.showFullScreenButton_bl = !1), self.isEmbedded_bl && (self.useDeepLinking_bl = !1, self.data.playlistPosition_str = "right"), FWDUVPlayer.atLeastOnePlayerHasDeeplinking_bl && (self.useDeepLinking_bl = !1), self.useDeepLinking_bl && (FWDUVPlayer.atLeastOnePlayerHasDeeplinking_bl = !0), self.useDeepLinking_bl) setTimeout(function() {
                self.setupDL()
            }, 200);
            else {
                if (self.isEmbedded_bl) self.catId = self.embeddedPlaylistId, self.id = self.embeddedVideoId;
                else {
                    var e = FWDUVPUtils.getHashUrlArgs(window.location.hash);
                    self.useDeepLinking_bl && void 0 !== e.playlistId && void 0 !== e.videoId ? (self.catId = e.playlistId, self.id = e.videoId) : (e.videoId ? self.id = e.videoId : self.id = self.data.startAtVideo, e.playlistId ? self.catId = e.playlistId : self.catId = self.data.startAtPlaylist)
                }
                self.loadInternalPlaylist()
            }
        }, this.dataPlayListLoadComplete = function() {
            self.loadAddFirstTime_bl = !0, self.isPlaylistLoadedFirstTime_bl || (self.setupNormalVideoPlayers(), FWDUVPUtils.isIEAndLessThen9 || self.updatePlaylist()), self.isPlaylistLoadedFirstTime_bl && self.updatePlaylist(), self.isPlaylistLoaded_bl = !0, self.resizeHandler(), setTimeout(function() {
                self.positionLargePlayButton(), self.controller_do && self.controller_do.resizeAndPosition(), self.playlist_do && self.playlist_do.resizeAndPosition()
            }, 350)
        }, this.updatePlaylist = function() {
            self.videoType_str = "none.:", self.main_do && self.main_do.contains(self.info_do) && self.main_do.removeChild(self.info_do), self.preloader_do && self.preloader_do.hide(!0), self.totalVideos = self.data.playlist_ar.length, self.id < 0 ? self.id = 0 : self.id > self.totalVideos - 1 && (self.id = self.totalVideos - 1), self.playlist_do && self.playlist_do.updatePlaylist(self.data.playlist_ar, self.catId, self.id, self.data.cats_ar[self.catId].playlistName), self.hideVideoHider(), self.data.startAtRandomVideo_bl && (self.id = parseInt(Math.random() * self.data.playlist_ar.length), self.useDeepLinking_bl) ? FWDUVPAddress.setValue("?playlistId=" + self.catId + "&videoId=" + self.id) : (self.prevSource = 99999999999 * Math.random(), self.posterPath_str = self.data.playlist_ar[self.id].posterSource, self.updateAds(0), self.isFirstPlaylistLoaded_bl && !self.isMobile_bl && !self.data.startAtRandomVideo_bl && self.data.autoPlay_bl && self.play(), self.data.startAtRandomVideo_bl = !1, self.isFirstPlaylistLoaded_bl = !0, self.dispatchEvent(FWDUVPlayer.LOAD_PLAYLIST_COMPLETE), self.displayType == FWDUVPlayer.STICKY && setTimeout(function() {
                self.isShowedFirstTime_bl = !1, self.setStageContainerFinalHeightAndPosition(self.animate_bl)
            }, 50))
        }, this.loadInternalPlaylist = function() {
            self.isPlaylistLoaded_bl = !1, self.isAdd_bl = !1, self.prvAdSource = 999999999 * Math.random(), self.prevCatId != self.catId && (self.prevCatId = self.catId, self.stop(), self.hider && self.hider.stop(), self.setPosterSource("none"), self.videoPoster_do && (self.videoPoster_do.curPath_str = ""), self.videoPoster_do && self.videoPoster_do.hide(!0), self.preloader_do && self.preloader_do.show(!1), self.largePlayButton_do && self.largePlayButton_do.hide(), self.controller_do && self.controller_do.hide(!1, 10), self.showVideoHider(), self.data.loadPlaylist(self.catId), self.logo_do && self.logo_do.hide(!1, !0), self.isAdd_bl && (self.adsSkip_do.hide(!1), self.adsStart_do.hide(!1)), self.playlist_do && self.playlist_do.destroyPlaylist(), self.preloader_do && self.positionPreloader(), self.isAPIReady_bl && self.dispatchEvent(FWDUVPlayer.START_TO_LOAD_PLAYLIST))
        }, this.setupDL = function() {
            self.initFirstDL = !0, FWDUVPAddress.onChange = self.dlChangeHandler, self.isEmbedded_bl && FWDUVPAddress.setValue("?playlistId=" + self.embeddedPlaylistId + "&videoId=" + self.embeddedVideoId), self.dlChangeHandler()
        }, this.dlChangeHandler = function() {
            if (!self.hasOpenedInPopup_bl) {
                var e = !1;
                if (self.categories_do && self.categories_do.isOnDOM_bl) self.categories_do.hide();
                else {
                    self.prevId = self.id, self.prevEventCatId = self.catId, self.catId = parseInt(FWDUVPAddress.getParameter("playlistId")), self.id = parseInt(FWDUVPAddress.getParameter("videoId")), (null == self.catId || null == self.id || isNaN(self.catId) || isNaN(self.id)) && (self.catId = self.data.startAtPlaylist, self.id = self.data.startAtVideo, e = !0), (self.catId < 0 || self.catId > self.data.totalCategories - 1 && !e) && (self.catId = self.data.startAtPlaylist, self.id = self.data.startAtVideo, e = !0), self.data.playlist_ar && (self.id < 0 && !e ? (self.id = self.data.startAtVideo, e = !0) : self.prevCatId == self.catId && self.id > self.data.playlist_ar.length - 1 && !e && (self.id = self.data.playlist_ar.length - 1, e = !0));
                    var t = self.catId + " - " + self.id;
                    e ? FWDUVPAddress.setValue("?playlistId=" + self.catId + "&videoId=" + self.id) : self.lastValue != t && (self.lastValue = self.catId + " - " + self.id, -1 == self.prevId && (self.prevId = self.id), -1 == self.prevEventCatId && (self.prevEventCatId = self.catId), self.prevCatId != self.catId ? (self.loadInternalPlaylist(), self.prevCatId = self.catId) : (self.isThumbClick_bl = !0, self.updateAds(0, !0), self.data.startAtRandomVideo_bl = !1), self.pastHref = window.location.href)
                }
            }
        }, this.playVimeoWithDelay = function() {
            self.isMobile_bl || (self.vimeo_do.isVideoLoaded_bl ? (self.hasVimeoStarted_bl = !0, self.play(), self.vimeo_do.play(), clearTimeout(self.playVimeoWhenLoadedId_to)) : self.playVimeoWhenLoadedId_to = setTimeout(self.playVimeoWithDelay, 50))
        }, this.setupNormalVideoPlayers = function() {
            self.videoScreen_do || (self.isAPIReady_bl = !0, self.setupRSM(), self.setupVideoScreen(), self.setupAudioScreen(), self.setupVideoPoster(), self.preloader_do && self.main_do.addChild(self.preloader_do), self.setupSubtitle(), self.setupClickScreen(), self.setupPopupAds(), self.data.showLogo_bl && self.setupLogo(), self.addDoubleClickSupport(), self.setupVideoHider(), self.setupAnnotations(), self.data.showController_bl && self.setupController(), self.setupAdsStart(), self.data.showPlaylistButtonAndPlaylist_bl && self.setupPlaylist(), self.setupLargePlayPauseButton(), self.data.showChromecastButton_bl && self.setupChormecast(), self.data.showController_bl && self.setupHider(), self.data.showPlaylistsButtonAndPlaylists_bl && self.setupCategories(), self.setupDisableClick(), self.data.showEmbedButton_bl && self.setupEmbedWindow(), self.setupPasswordWindow(), self.data.showShareButton_bl && self.setupShareWindow(), self.setupAopw(), self.data.showInfoButton_bl && self.setupInfoWindow(), (self.data.showOpener_bl && self.displayType == FWDUVPlayer.STICKY || self.data.stickyOnScrollShowOpener_bl && self.stickyOnScroll) && self.setupOpener(), "no" == FWDUVPlayer.useYoutube && (self.isPlaylistLoadedFirstTime_bl = !0), self.addMinOnScroll(), self.isAPIReady_bl = !0, self.dispatchEvent(FWDUVPlayer.READY), self.data.addKeyboardSupport_bl && self.addKeyboardSupport())
        }, this.setupOpener = function() {
            FWDUVPOpener.setPrototype(), self.opener_do = new FWDUVPOpener(self.data, self.position_str, self.isShowed_bl), FWDUVPUtils.isIEAndLessThen9 ? self.opener_do.getStyle().zIndex = "2147483634" : self.opener_do.getStyle().zIndex = "99999999994", self.opener_do.setX(-1e4), self.isShowed_bl ? self.opener_do.showCloseButton() : self.opener_do.showOpenButton(), self.opener_do.addListener(FWDUVPOpener.SHOW, self.openerShowHandler), self.opener_do.addListener(FWDUVPOpener.HIDE, self.openerHideHandler), self.opener_do.addListener(FWDUVPController.PLAY, self.controllerOnPlayHandler), self.opener_do.addListener(FWDUVPController.PAUSE, self.controllerOnPauseHandler), self.stageContainer.appendChild(self.opener_do.screen), self.stickyOnScroll && (self.opener_do.getStyle().position = "fixed", document.documentElement.appendChild(self.opener_do.screen))
        }, this.openerShowHandler = function() {
            self.showPlayer()
        }, this.openerHideHandler = function() {
            self.hidePlayer()
        }, this.setupPreloader = function() {
            FWDUVPPreloader.setPrototype(), self.preloader_do = new FWDUVPPreloader(self, "center", 10, self.preloaderBackgroundColor, self.preloaderFillColor, 3, .8), self.preloader_do.show(!1), self.showPreloader_bl && (self.displayType == FWDUVPlayer.STICKY ? document.documentElement.appendChild(self.preloader_do.screen) : self.main_do.addChild(self.preloader_do))
        }, this.positionPreloader = function() {
            function e() {
                var e;
                e = self.isPlaylistLoaded_bl ? self.tempVidStageWidth : self.stageWidth, self.preloader_do.setX(parseInt((e - self.preloader_do.w) / 2)), self.preloader_do.setY(parseInt((self.tempVidStageHeight - self.preloader_do.h) / 2))
            }
            self.displayType == FWDUVPlayer.STICKY ? self.main_do.contains(self.preloader_do) ? e() : (self.preloader_do.setX(Math.round((self.ws.w - self.preloader_do.w) / 2)), self.position_str == FWDUVPlayer.POSITION_BOTTOM ? self.preloader_do.setY(Math.round(self.ws.h - self.preloader_do.h - 10) + FWDUVPUtils.getScrollOffsets().y) : self.preloader_do.setY(10)) : e()
        }, this.setupCategories = function() {
            FWDUVPCategories.setPrototype(), self.categories_do = new FWDUVPCategories(self.data, self), self.categories_do.getStyle().zIndex = "2147483647", self.categories_do.addListener(FWDUVPCategories.HIDE_COMPLETE, self.categoriesHideCompleteHandler), self.data.showPlaylistsByDefault_bl && (self.showCatWidthDelayId_to = setTimeout(function() {
                self.showCategories()
            }, 1400))
        }, this.categoriesHideCompleteHandler = function(e) {
            if (self.controller_do && (self.controller_do.setCategoriesButtonState("unselected"), self.controller_do.categoriesButton_do.setNormalState(!0)), self.useDeepLinking_bl) {
                if (self.categories_do.id != self.catId) return self.catId = self.categories_do.id, self.id = 0, void FWDUVPAddress.setValue("?playlistId=" + self.catId + "&videoId=" + self.id)
            } else {
                if (self.catId == self.categories_do.id) return;
                self.catId = self.categories_do.id, self.id = 0, self.loadInternalPlaylist(self.catId)
            }
            self.isVideoPlayingWhenOpenWindows_bl && self.resume()
        }, this.setupVideoPoster = function() {
            FWDUVPPoster.setPrototype(), self.videoPoster_do = new FWDUVPPoster(self, self.data.show, self.data.posterBackgroundColor_str), self.videoHolder_do.addChild(self.videoPoster_do)
        }, this.setupInfoWindow = function() {
            FWDUVPInfoWindow.setPrototype(), self.infoWindow_do = new FWDUVPInfoWindow(self, self.data), self.infoWindow_do.addListener(FWDUVPInfoWindow.HIDE_COMPLETE, self.infoWindowHideCompleteHandler), self.main_do.addChild(self.infoWindow_do)
        }, this.infoWindowHideCompleteHandler = function() {
            self.isVideoPlayingWhenOpenWindows_bl && self.resume(), self.controller_do && !self.isMobile_bl && (self.controller_do.infoButton_do.isDisabled_bl = !1, self.controller_do.infoButton_do.setNormalState(!0))
        }, this.setupChormecast = function() {
            self.data.showController_bl && (FWDUVPCC.setPrototype(), self.cc = new FWDUVPCC(self.controller_do))
        }, this.setupLargePlayPauseButton = function() {
            self.data.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), self.largePlayButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<div class='table-fwduvp-button'><span class='table-cell-fwduvp-button icon-play'></span></div>", void 0, "UVPLargePlayButtonNormalState", "UVPLargePlayButtonSelectedState")) : (FWDUVPSimpleButton.setPrototype(), -1 != this.skinPath_str.indexOf("hex_white") ? self.largePlayButton_do = new FWDUVPSimpleButton(self.data.largePlayN_img, self.data.largePlayS_str, void 0, !0, self.data.useHEXColorsForSkin_bl, self.data.normalButtonsColor_str, "#FFFFFF") : self.largePlayButton_do = new FWDUVPSimpleButton(self.data.largePlayN_img, self.data.largePlayS_str, void 0, !0, self.data.useHEXColorsForSkin_bl, self.data.normalButtonsColor_str, self.data.selectedButtonsColor_str)), self.largePlayButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, self.largePlayButtonUpHandler), self.largePlayButton_do.setOverflow("visible"), self.largePlayButton_do.hide(!1), self.main_do.addChild(self.largePlayButton_do)
        }, this.largePlayButtonUpHandler = function() {
            self.disableClick(), self.largePlayButton_do.hide(), self.play(), self.data.goFullScreenOnPlay_bl && self.goFullScreen()
        }, this.positionLargePlayButton = function() {
            self.largePlayButton_do.setX(parseInt((self.tempVidStageWidth - self.largePlayButton_do.w) / 2)), self.largePlayButton_do.setY(parseInt((self.tempVidStageHeight - self.largePlayButton_do.h) / 2))
        }, this.setupLogo = function() {
            FWDUVPLogo.setPrototype(), self.logo_do = new FWDUVPLogo(self, self.data.logoPath_str, self.data.logoPosition_str, self.data.logoMargins), self.main_do.addChild(self.logo_do)
        }, this.setupPlaylist = function() {
            FWDUVPPlaylist.setPrototype(), self.playlist_do = new FWDUVPPlaylist(self, self.data), self.playlist_do.addListener(FWDUVPPlaylist.THUMB_MOUSE_UP, self.playlistThumbMouseUpHandler), self.playlist_do.addListener(FWDUVPPlaylist.PLAY_PREV_VIDEO, self.playPrevVideoHandler), self.playlist_do.addListener(FWDUVPPlaylist.PLAY_NEXT_VIDEO, self.playNextVideoHandler), self.playlist_do.addListener(FWDUVPPlaylist.ENABLE_SHUFFLE, self.enableShuffleHandler), self.playlist_do.addListener(FWDUVPPlaylist.DISABLE_SHUFFLE, self.disableShuffleHandler), self.playlist_do.addListener(FWDUVPPlaylist.ENABLE_LOOP, self.enableLoopHandler), self.playlist_do.addListener(FWDUVPPlaylist.DISABLE_LOOP, self.disableLoopHandler), self.playlist_do.addListener(FWDUVPPlaylist.CHANGE_PLAYLIST, self.changePlaylistHandler), self.main_do.addChildAt(self.playlist_do, 0), self.data.useVectorIcons_bl && setTimeout(function() {
                self.playlist_do.resizeAndPosition(!0)
            }, 340)
        }, this.changePlaylistHandler = function(e) {
            self.loadPlaylist(e.id)
        }, this.playlistThumbMouseUpHandler = function(e) {
            self.disableClick_bl || (self.data.playlist_ar && (self.videoNameGa = self.data.playlist_ar[self.id].gaStr, self.videoCat = self.data.cats_ar[self.catId].playlistName), self.useDeepLinking_bl && self.id != e.id ? (FWDUVPAddress.setValue("?playlistId=" + self.catId + "&videoId=" + e.id), self.id = e.id, self.isThumbClick_bl = !0) : (self.id = e.id, self.changeHLS_bl = !0, self.isThumbClick_bl = !0, self.isAdd_bl = !1, self.updateAds(0)))
        }, this.playPrevVideoHandler = function() {
            self.isThumbClick_bl = !0, self.data.shuffle_bl ? self.playShuffle() : self.playPrev()
        }, this.playNextVideoHandler = function() {
            self.isThumbClick_bl = !0, self.data.shuffle_bl ? self.playShuffle() : self.playNext()
        }, this.enableShuffleHandler = function(e) {
            self.data.shuffle_bl = !0, self.data.loop_bl = !1, self.playlist_do.setShuffleButtonState("selected"), self.playlist_do.setLoopStateButton("unselected")
        }, this.disableShuffleHandler = function(e) {
            self.data.shuffle_bl = !1, self.playlist_do.setShuffleButtonState("unselected")
        }, this.enableLoopHandler = function(e) {
            self.data.loop_bl = !0, self.data.shuffle_bl = !1, self.playlist_do.setLoopStateButton("selected"), self.playlist_do.setShuffleButtonState("unselected")
        }, this.disableLoopHandler = function(e) {
            self.data.loop_bl = !1, self.playlist_do.setLoopStateButton("unselected")
        }, this.setupPopupAds = function() {
            FWDUVPPupupAds.setPrototype(), self.popupAds_do = new FWDUVPPupupAds(self, self.data), self.videoHolder_do.addChild(self.popupAds_do)
        }, this.setupSubtitle = function() {
            FWDUVPSubtitle.setPrototype(), self.subtitle_do = new FWDUVPSubtitle(self, self.data), self.subtitle_do.addListener(FWDUVPSubtitle.LOAD_COMPLETE, self.subtitleLoadComplete)
        }, this.subtitleLoadComplete = function() {
            self.subtitle_do.show(), self.controller_do && self.controller_do.enableSubtitleButton()
        }, this.loadSubtitle = function(e) {
            self.isCasting ? self.cc.loadSubtitle() : (self.controller_do && self.controller_do.disableSubtitleButton(), e && (self.subtitle_do.loadSubtitle(e), self.videoHolder_do.addChildAt(self.subtitle_do, self.videoHolder_do.getChildIndex(self.dumyClick_do) - 1)))
        }, this.setupController = function() {
            FWDUVPController.setPrototype(), self.controller_do = new FWDUVPController(self.data, self), self.controller_do.addListener(FWDUVPData.LOAD_ERROR, self.controllerErrorHandler), self.controller_do.addListener(FWDUVPController.REWIND, self.rewindHandler), self.controller_do.addListener(FWDUVPController.CHANGE_PLAYBACK_RATES, self.changePlaybackRateHandler), self.controller_do.addListener(FWDUVPController.CHANGE_SUBTITLE, self.changeSubtitileHandler), self.controller_do.addListener(FWDUVPController.SHOW_CATEGORIES, self.showCategoriesHandler), self.controller_do.addListener(FWDUVPController.SHOW_PLAYLIST, self.showPlaylistHandler), self.controller_do.addListener(FWDUVPController.HIDE_PLAYLIST, self.hidePlaylistHandler), self.controller_do.addListener(FWDUVPController.PLAY, self.controllerOnPlayHandler), self.controller_do.addListener(FWDUVPController.PAUSE, self.controllerOnPauseHandler), self.controller_do.addListener(FWDUVPController.START_TO_SCRUB, self.controllerStartToScrubbHandler), self.controller_do.addListener(FWDUVPController.SCRUB, self.controllerScrubbHandler), self.controller_do.addListener(FWDUVPController.STOP_TO_SCRUB, self.controllerStopToScrubbHandler), self.controller_do.addListener(FWDUVPController.CHANGE_VOLUME, self.controllerChangeVolumeHandler), self.controller_do.addListener(FWDUVPController.DOWNLOAD_VIDEO, self.controllerDownloadVideoHandler), self.controller_do.addListener(FWDUVPController.CHANGE_YOUTUBE_QUALITY, self.controllerChangeYoutubeQualityHandler), self.controller_do.addListener(FWDUVPController.FULL_SCREEN, self.controllerFullScreenHandler), self.controller_do.addListener(FWDUVPController.NORMAL_SCREEN, self.controllerNormalScreenHandler), self.controller_do.addListener(FWDUVPPlaylist.PLAY_PREV_VIDEO, self.playPrevVideoHandler), self.controller_do.addListener(FWDUVPPlaylist.PLAY_NEXT_VIDEO, self.playNextVideoHandler), self.controller_do.addListener(FWDUVPController.SHOW_EMBED_WINDOW, self.showEmbedWindowHandler), self.controller_do.addListener(FWDUVPController.SHOW_INFO_WINDOW, self.showInfoWindowHandler), self.controller_do.addListener(FWDUVPController.SHOW_SHARE_WINDOW, self.controllerShareHandler), self.controller_do.addListener(FWDUVPController.SHOW_SUBTITLE, self.showSubtitleHandler), self.controller_do.addListener(FWDUVPController.HIDE_SUBTITLE, self.hideSubtitleHandler), self.videoHolder_do.addChild(self.controller_do)
        }, this.controllerErrorHandler = function(e) {
            self.main_do.addChild(self.info_do), self.info_do.showText(e.text)
        }, this.rewindHandler = function() {
            self.rewind(10)
        }, this.rewind = function(e) {
            var t = self.getCurrentTime();
            5 == t.length && (t = "00:" + t), 7 == t.length && (t = "0" + t), t = FWDUVPUtils.getSecondsFromString(t), t -= e, 5 == (t = FWDUVPUtils.formatTime(t)).length && (t = "00:" + t), 7 == t.length && (t = "0" + t), self.scrubbAtTime(t)
        }, this.changePlaybackRateHandler = function(e) {
            self.setPlaybackRate(e.rate)
        }, this.changeSubtitileHandler = function(e) {
            self.data.playlist_ar[self.id].startAtSubtitle = e.id, self.controller_do.updateSubtitleButtons(self.data.playlist_ar[self.id].subtitleSource, self.data.playlist_ar[self.id].startAtSubtitle), self.ccSS = Number(self.data.playlist_ar[self.id].subtitleSource.length - e.id), self.isAdd_bl || self.loadSubtitle(self.data.playlist_ar[self.id].subtitleSource[self.data.playlist_ar[self.id].subtitleSource.length - 1 - self.data.playlist_ar[self.id].startAtSubtitle].source)
        }, this.showSubtitleHandler = function() {
            self.subtitle_do.show(), self.subtitle_do.isShowed_bl = !0
        }, this.hideSubtitleHandler = function() {
            self.subtitle_do.isShowed_bl = !1, self.subtitle_do.hide()
        }, this.showCategoriesHandler = function(e) {
            self.showCategories(), self.controller_do && self.controller_do.setCategoriesButtonState("selected")
        }, this.showPlaylistHandler = function(e) {
            self.disableClick(), self.showPlaylist()
        }, this.hidePlaylistHandler = function(e) {
            self.disableClick(), self.hidePlaylist()
        }, this.controllerOnPlayHandler = function(e) {
            self.play(), self.data.goFullScreenOnPlay_bl && self.goFullScreen()
        }, this.controllerOnPauseHandler = function(e) {
            self.pause()
        }, this.controllerStartToScrubbHandler = function(e) {
            self.isCasting ? self.cc.startToScrub() : self.startToScrub()
        }, this.controllerScrubbHandler = function(e) {
            self.isCasting ? self.cc.seek(e.percent) : self.scrub(e.percent)
        }, this.controllerStopToScrubbHandler = function(e) {
            self.isCasting ? self.cc.stopToScrub() : self.stopToScrub()
        }, this.controllerChangeVolumeHandler = function(e) {
            self.setVolume(e.percent)
        }, this.controllerDownloadVideoHandler = function() {
            self.downloadVideo()
        }, this.controllerShareHandler = function(e) {
            self.isCasting ? self.isVideoPlayingWhenOpenWindows_bl = "PLAYING" == self.cc.playerState : self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do ? self.isVideoPlayingWhenOpenWindows_bl = self.ytb_do.isPlaying_bl : self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do ? self.isVideoPlayingWhenOpenWindows_bl = self.vimeo_do.isPlaying_bl : FWDUVPlayer.hasHTML5Video && self.videoScreen_do && (self.isVideoPlayingWhenOpenWindows_bl = self.videoScreen_do.isPlaying_bl), self.pause(), self.shareWindow_do.show(), self.controller_do && !self.isMobile_bl && (self.controller_do.shareButton_do.setSelectedState(), self.controller_do.shareButton_do.isDisabled_bl = !0)
        }, this.controllerChangeYoutubeQualityHandler = function(e) {
            self.videoType_str == FWDUVPlayer.YOUTUBE ? self.ytb_do.setQuality(e.quality) : (self.data.playlist_ar[self.id].startAtVideo = self.data.playlist_ar[self.id].videoSource.length - 1 - e.id, self.setSource(self.data.playlist_ar[self.id].videoSource[self.data.playlist_ar[self.id].startAtVideo].source, !1, self.data.playlist_ar[self.id].videoSource[self.data.playlist_ar[self.id].startAtVideo].is360), self.isQualityChanging_bl = !0, self.play())
        }, this.controllerFullScreenHandler = function() {
            self.goFullScreen()
        }, this.controllerNormalScreenHandler = function() {
            self.goNormalScreen()
        }, this.showEmbedWindowHandler = function() {
            self.isCasting ? self.isVideoPlayingWhenOpenWindows_bl = "PLAYING" == self.cc.playerState : self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do ? self.isVideoPlayingWhenOpenWindows_bl = self.ytb_do.isPlaying_bl : self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do ? self.isVideoPlayingWhenOpenWindows_bl = self.vimeo_do.isPlaying_bl : FWDUVPlayer.hasHTML5Video && self.videoScreen_do && (self.isVideoPlayingWhenOpenWindows_bl = self.videoScreen_do.isPlaying_bl), self.pause(), self.embedWindow_do.show(), self.controller_do && !self.isMobile_bl && (self.controller_do.embedButton_do.setSelectedState(), self.controller_do.embedButton_do.isDisabled_bl = !0)
        }, this.showInfoWindowHandler = function() {
            self.isCasting ? self.isVideoPlayingWhenOpenWindows_bl = "PLAYING" == self.cc.playerState : self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do ? self.isVideoPlayingWhenOpenWindows_bl = self.ytb_do.isPlaying_bl : self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do ? self.isVideoPlayingWhenOpenWindows_bl = self.vimeo_do.isPlaying_bl : FWDUVPlayer.hasHTML5Video && self.videoScreen_do && (self.isVideoPlayingWhenOpenWindows_bl = self.videoScreen_do.isPlaying_bl), self.pause(), self.infoWindow_do.show(self.data.playlist_ar[self.id].desc), self.controller_do && !self.isMobile_bl && (self.controller_do.infoButton_do.setSelectedState(), self.controller_do.infoButton_do.isDisabled_bl = !0)
        }, this.setupAudioScreen = function() {
            self.audioScreen_do || (FWDUVPAudioScreen.setPrototype(), self.audioScreen_do = new FWDUVPAudioScreen(self, self.data.volume), self.audioScreen_do.addListener(FWDUVPAudioScreen.ERROR, self.videoScreenErrorHandler), self.audioScreen_do.addListener(FWDUVPAudioScreen.SAFE_TO_SCRUBB, self.videoScreenSafeToScrubbHandler), self.audioScreen_do.addListener(FWDUVPAudioScreen.STOP, self.videoScreenStopHandler), self.audioScreen_do.addListener(FWDUVPAudioScreen.PLAY, self.videoScreenPlayHandler), self.audioScreen_do.addListener(FWDUVPAudioScreen.PAUSE, self.videoScreenPauseHandler), self.audioScreen_do.addListener(FWDUVPAudioScreen.UPDATE, self.videoScreenUpdateHandler), self.audioScreen_do.addListener(FWDUVPAudioScreen.UPDATE_TIME, self.videoScreenUpdateTimeHandler), self.audioScreen_do.addListener(FWDUVPAudioScreen.LOAD_PROGRESS, self.videoScreenLoadProgressHandler), self.audioScreen_do.addListener(FWDUVPVideoScreen.START_TO_BUFFER, self.videoScreenStartToBuferHandler), self.audioScreen_do.addListener(FWDUVPVideoScreen.STOP_TO_BUFFER, self.videoScreenStopToBuferHandler), self.audioScreen_do.addListener(FWDUVPAudioScreen.PLAY_COMPLETE, self.videoScreenPlayCompleteHandler), self.audioScreen_do.addListener(FWDUVPAudioScreen.UPDATE_SUBTITLE, self.videoScreenUpdateSubtitleHandler), self.videoHolder_do.addChild(self.audioScreen_do))
        }, this.setupVideoScreen = function() {
            FWDUVPVideoScreen.setPrototype(), self.videoScreen_do = new FWDUVPVideoScreen(self, self.data.volume), self.videoScreen_do.addListener(FWDUVPVideoScreen.ERROR, self.videoScreenErrorHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.SAFE_TO_SCRUBB, self.videoScreenSafeToScrubbHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.STOP, self.videoScreenStopHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.PLAY, self.videoScreenPlayHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.PAUSE, self.videoScreenPauseHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.UPDATE, self.videoScreenUpdateHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.UPDATE_TIME, self.videoScreenUpdateTimeHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.LOAD_PROGRESS, self.videoScreenLoadProgressHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.START_TO_BUFFER, self.videoScreenStartToBuferHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.STOP_TO_BUFFER, self.videoScreenStopToBuferHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.PLAY_COMPLETE, self.videoScreenPlayCompleteHandler), self.videoScreen_do.addListener(FWDUVPVideoScreen.UPDATE_SUBTITLE, self.videoScreenUpdateSubtitleHandler), self.videoHolder_do.addChild(self.videoScreen_do)
        }, this.videoScreenErrorHandler = function(e) {
            var t;
            self.isPlaying_bl = !1, FWDUVPlayer.hasHTML5Video || self.videoType_str == FWDUVPlayer.YOUTUBE ? (t = e.text, window.console && console.log(e.text), self.main_do && self.main_do.addChild(self.info_do), self.info_do && self.info_do.showText(t), self.controller_do && (self.controller_do.disableMainScrubber(), self.controller_do.disablePlayButton(), self.data.showControllerWhenVideoIsStopped_bl || self.controller_do.hide(!self.isMobile_bl), self.largePlayButton_do.hide(), self.hideClickScreen(), self.hider && self.hider.stop())) : (t = e, self.main_do && self.main_do.addChild(self.info_do), self.info_do && self.info_do.showText(t)), self.logo_do && self.logo_do.hide(!1), self.preloader_do && self.preloader_do.hide(!1), self.showCursor(), self.dispatchEvent(FWDUVPlayer.ERROR, {
                error: t
            })
        }, this.videoScreenSafeToScrubbHandler = function() {
            if (self.controller_do && (self.isAdd_bl ? (self.controller_do.disableMainScrubber(), 0 != self.data.timeToHoldAds && self.adsStart_do.show(!0), self.data.adsThumbnailPath_str && "none" != self.data.adsThumbnailPath_str && self.adsStart_do.loadThumbnail(self.data.adsThumbnailPath_str), self.positionAds()) : self.controller_do.enableMainScrubber(), self.controller_do.enablePlayButton(), self.controller_do.show(!0), !self.isAdd_bl && self.controller_do.ytbQualityButton_do && (self.controller_do.ytbQualityButton_do.enable(), self.controller_do.enablePlaybackRateButton()), !self.isAdd_bl && self.controller_do.playbackRateButton_do && self.controller_do.enablePlaybackRateButton(), !self.isAdd_bl && self.controller_do && (self.controller_do.downloadButton_do && self.controller_do.downloadButton_do.enable(), self.controller_do.rewindButton_do && self.controller_do.rewindButton_do.enable()), self.fillEntireVideoScreen_bl && self.resizeHandler(), self.hider && self.hider.start()), !self.isAdd_bl && self.data.playlist_ar[self.id].subtitleSource && self.loadSubtitle(self.data.playlist_ar[self.id].subtitleSource[self.data.playlist_ar[self.id].subtitleSource.length - 1 - self.data.playlist_ar[self.id].startAtSubtitle].source), self.isAdd_bl || (self.customContextMenu_do && self.customContextMenu_do.enable(), self.controller_do && self.controller_do.thumbnailsPreview_do && self.hasThumbnailsPreview && self.controller_do.thumbnailsPreview_do.load(self.data.playlist_ar[self.id].thumbnailsPreview)), self.controller_do && (self.isQualityChanging_bl || self.controller_do.disableSubtitleButton(), self.controller_do.enableAtbButton()), self.isMobile_bl && self.adsSkip_do.hide(!1), self.callVastEvent("start"), self.executeVastEvent(self.Impression), self.videoType_str != FWDUVPlayer.VIMEO && self.showClickScreen(), setTimeout(function() {
                    self.totalDuration && self.controller_do && self.controller_do.positionAdsLines(self.totalDuration)
                }, 1500), self.dispatchEvent(FWDUVPlayer.SAFE_TO_SCRUB), "00:00:00" != self.getStartTimeStamp("t") && (args.uvpi ? args.uvpi == self.instanceName_str && self.scrubbAtTime(self.getStartTimeStamp("t")) : self.scrubbAtTime(self.getStartTimeStamp("t"))), document.cookie && self.data.useResumeOnPlay_bl && FWDUVPUtils.getCookie("fwduvp_video_path") && FWDUVPUtils.getCookie("fwduvp_time") && FWDUVPUtils.getCookie("fwduvp_video_path") == self.videoSourcePath_str && !self.isAdd_bl) {
                FWDUVPUtils.getCookie("fwduvp_time");
                self.rmsPlayed_bl || self.scrubbAtTime(FWDUVPUtils.getCookie("fwduvp_time"))
            }
            self.rmsPlayed_bl = !0
        }, this.videoScreenUpdateSubtitleHandler = function(e) {
            self.subtitle_do && !self.isAdd_bl && self.subtitle_do.updateSubtitle(e.curTime)
        }, this.videoScreenStopHandler = function(e) {
            self.main_do && self.main_do.contains(self.info_do) && self.main_do.removeChild(self.info_do), self.videoPoster_do.allowToShow_bl = !0, self.isPlaying_bl = !1, self.controller_do && (self.controller_do.disableMainScrubber(), self.controller_do.showPlayButton(), self.data.showControllerWhenVideoIsStopped_bl ? self.controller_do.show(!self.isMobile_bl) : self.controller_do.hide(!self.isMobile_bl), self.hider && self.hider.stop()), self.useYoutube_bl && self.ytb_do && (self.isMobile_bl ? self.ytb_do.destroyYoutube() : self.ytb_do.stopVideo()), self.logo_do && self.logo_do.hide(!0), self.hideClickScreen(), self.isMobile_bl && self.videoType_str == FWDUVPlayer.YOUTUBE && (self.videoPoster_do.hide(), self.largePlayButton_do.hide()), self.isMobile_bl && (self.adsSkip_do.hide(!1), self.adsStart_do.hide(!1)), self.showCursor(), self.dispatchEvent(FWDUVPlayer.STOP)
        }, this.videoScreenPlayHandler = function() {
            self.is360 && (self.dumyClick_do.getStyle().cursor = "url(" + self.data.handPath_str + "), default"), (FWDUVPlayer.keyboardCurInstance = self).data.aom_bl = !1, self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do && self.ytb_do.isStopped_bl || (self.callVastEvent("resume"), self.isMobile_bl ? FWDUVPlayer.videoStartBehaviour == FWDUVPlayer.STOP_ALL_VIDEOS && FWDUVPlayer.stopAllVideos(self) : FWDUVPlayer.videoStartBehaviour == FWDUVPlayer.PAUSE_ALL_VIDEOS && FWDUVPlayer.pauseAllVideos(self), self.isPlaying_bl = !0, self.isThumbClick_bl = !1, self.loadAddFirstTime_bl = !1, self.logo_do && self.logo_do.show(!0), self.controller_do && (self.controller_do.showPauseButton(), self.controller_do.show(!0)), self.playAtTime_bl = !1, self.hasHlsPlayedOnce_bl = !0, self.largePlayButton_do && self.largePlayButton_do.hide(), self.hider && self.hider.start(), self.showCursor(), self.popw_do && self.popw_do.hide(), self.isQualityChanging_bl && (self.scrubbAtTime(self.curDurration), self.curDurration = 0, self.isQualityChanging_bl = !1), self.wasAdd_bl && (FWDUVPUtils.isIOS ? setTimeout(function() {
                self.scrubbAtTime(self.scrubAfterAddDuration)
            }, 500) : self.videoType_str == FWDUVPlayer.VIMEO ? setTimeout(function() {
                self.scrubbAtTime(self.scrubAfterAddDuration)
            }, 500) : self.scrubbAtTime(self.scrubAfterAddDuration), self.wasAdd_bl = !1), self.hasStartedToPlay_bl || !self.data.playlist_ar[self.id].startAtTime || self.isAdd_bl || self.scrubbAtTime(self.data.playlist_ar[self.id].startAtTime), self.hasStartedToPlay_bl || !self.castStartAtTime || self.isAdd_bl || (self.scrubbAtTime(self.castStartAtTime), self.castStartAtTime = void 0), self.hasStartedToPlay_bl = !0, self.opener_do && self.opener_do.showPauseButton(), self.dispatchEvent(FWDUVPlayer.PLAY))
        }, this.videoScreenPauseHandler = function() {
            if (!(self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do && self.ytb_do.isStopped_bl || self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do && self.vimeo_do.isStopped_bl)) {
                self.callVastEvent("pause"), self.preloader_do && self.preloader_do.hide(), self.isPlaying_bl = !1, self.controller_do && (self.controller_do.showPlayButton(), self.controller_do.show(!0));
                var e = self.shareWindow_do && self.shareWindow_do.isShowed_bl,
                    t = self.embedWindow_do && self.embedWindow_do.isShowed_bl;
                e || t || self.showPopW_bl && self.popw_do.show(self.popwSource), self.largePlayButton_do && !self.data.showAnnotationsPositionTool_bl && self.largePlayButton_do.show(), self.hider && (self.hider.reset(), self.hider.stop()), self.videoType_str != FWDUVPlayer.VIMEO && self.showClickScreen(), self.showCursor(), self.opener_do && self.opener_do.showPlayButton(), self.dispatchEvent(FWDUVPlayer.PAUSE)
            }
        }, this.videoScreenUpdateHandler = function(e) {
            var t;
            FWDUVPlayer.hasHTML5Video || self.videoType_str == FWDUVPlayer.YOUTUBE ? t = e.percent : (t = e, console.log(e)), self.controller_do && self.controller_do.updateMainScrubber(t), self.dispatchEvent(FWDUVPlayer.UPDATE, {
                percent: t
            })
        }, this.videoScreenUpdateTimeHandler = function(e, e2, e3) {
            if (self.prevSeconds != e.seconds && (self.totalTimePlayed += 1), self.totalTimeInSeconds = e.totalTimeInSeconds, self.curTimeInSecond = e.seconds, self.totalTime = e.totalTime, self.curTime = e.curTime, self.prevSeconds = e.seconds, self.totalPercentPlayed = self.totalTimePlayed / e.totalTimeInSeconds, isFinite(self.totalPercentPlayed) || (self.totalPercentPlayed = 0), FWDUVPUtils.getSecondsFromString(self.getStartTimeStamp("e")) && self.curTimeInSecond >= parseInt(FWDUVPUtils.getSecondsFromString(self.getStartTimeStamp("e"))) && self.stop(), self.controller_do && !self.controller_do.isMainScrubberScrubbing_bl && self.controller_do.atb && self.controller_do.atb.isShowed_bl && !self.controller_do.atb.scrub) {
                var a = self.totalTimeInSeconds * self.controller_do.atb.pa,
                    b = self.totalTimeInSeconds * self.controller_do.atb.pb;
                self.prevCurTimeInSeconds != self.curTimeInSecond && (self.prevCurTimeInSeconds = self.curTimeInSecond, self.curTimeInSecond < a ? self.scrub(self.controller_do.atb.pa) : self.curTimeInSecond > b && self.scrub(self.controller_do.atb.pa))
            }
            var time, seconds;
            if (self.isAdd_bl && (.25 <= self.totalPercentPlayed && self.callFirstQuartile ? (self.callVastEvent("firstQuartile"), self.callFirstQuartile = !1) : .5 <= self.totalPercentPlayed && self.callMidpoint ? (self.callVastEvent("midpoint"), self.callMidpoint = !1) : .75 <= self.totalPercentPlayed && self.callThirdQuartile && (self.callVastEvent("thirdQuartile"), self.callThirdQuartile = !1)), seconds = FWDUVPlayer.hasHTML5Video || self.videoType_str == FWDUVPlayer.YOUTUBE || self.videoType_str == FWDUVPlayer.VIMEO ? (self.curTime = e.curTime, self.totalTime = e.totalTime, time = self.curTime + "/" + self.totalTime, e.seconds) : (self.curTime = e, self.totalTime = e2, time = self.curTime + "/" + self.totalTime, null != e && null != e2 || (time = "00:00/00:00"), e3), self.controller_do && self.controller_do.updateTime(time), self.currentSecconds = e.seconds, self.popupAds_do && !self.isAdd_bl && self.popupAds_do.update(parseInt(e.seconds)), self.annotations_do && !self.isAdd_bl && self.annotations_do.update(parseInt(e.seconds)), self.cuePointsSource_ar && !self.isAdd_bl)
                for (var i = 0; i < self.cuePointsSource_ar.length; i++) {
                    var cuePoint = self.cuePointsSource_ar[i];
                    cuePoint.timeStart == e.seconds && (self.data.executeCuepointsOnlyOnce_bl && cuePoint.isPlayed_bl || eval(cuePoint.javascriptCall), cuePoint.isPlayed_bl = !0)
                }
            self.isAdd_bl || (5 < self.totalTime.length ? self.totalDuration = FWDUVPUtils.getSecondsFromString(self.totalTime) : self.totalDuration = FWDUVPUtils.getSecondsFromString("00:" + self.totalTime)), self.isAdd_bl ? self.data.timeToHoldAds > seconds ? (self.adsStart_do.updateText(self.data.skipToVideoText_str + Math.abs(self.data.timeToHoldAds - seconds)), self.isMobile_bl && self.adsSkip_do.hide(!1), self.videoType_str == FWDUVPlayer.IMAGE && self.adsStart_do.show(!0)) : self.isPlaying_bl && (self.adsStart_do.hide(!0), 0 != self.data.timeToHoldAds && self.adsSkip_do.show(!0)) : (self.adsStart_do.hide(!0), self.adsSkip_do.hide(!0)), 0 != seconds && (self.curDurration = seconds, self.updateAds(seconds)), self.isPlaying_bl && FWDUVPUtils.getSecondsFromString(self.data.playlist_ar[self.id].stopAtTime) <= e.seconds && (self.data.playAfterVideoStop_bl ? self.data.stopAfterLastVideoHasPlayed_bl && self.data.playlist_ar.length - 1 == self.id ? self.stop() : self.playNext() : self.data.stopAfterLastVideoHasPlayed_bl || self.data.playlist_ar.length - 1 != self.id ? self.stop() : self.playNext()), self.dispatchEvent(FWDUVPlayer.UPDATE_TIME, {
                currentTime: self.curTime,
                totalTime: self.totalTime
            })
        }, this.videoScreenLoadProgressHandler = function(e) {
            FWDUVPlayer.hasHTML5Video || self.videoType_str == FWDUVPlayer.YOUTUBE ? self.controller_do && self.controller_do.updatePreloaderBar(e.percent) : self.controller_do && self.controller_do.updatePreloaderBar(e)
        }, this.videoScreenStartToBuferHandler = function() {
            self.preloader_do && self.preloader_do.show(!1)
        }, this.videoScreenStopToBuferHandler = function() {
            self.preloader_do && self.preloader_do.hide(!0)
        }, this.videoScreenPlayCompleteHandler = function(e, t) {
            self.data.playlist_ar && (self.videoNameGa = self.data.playlist_ar[self.id].gaStr, self.videoCat = self.data.cats_ar[self.catId].playlistName), self.callVastEvent("complete"), !self.isAdd_bl && self.data.playlist_ar[self.id].redirectURL && ("_self" == self.data.playlist_ar[self.id].redirectTarget ? location.replace(self.data.playlist_ar[self.id].redirectURL) : window.open(self.data.playlist_ar[self.id].redirectURL, self.data.playlist_ar[self.id].redirectTarget));
            var o = self.isAdd_bl;
            self.isAdd_bl && (self.isThumbClick_bl = !0, self.data.openNewPageAtTheEndOfTheAds_bl && "none" != self.data.adsPageToOpenURL_str && !t && ("_self" == self.data.adsPageToOpenTarget_str ? location.href = self.data.adsPageToOpenURL_str : window.open(self.data.adsPageToOpenURL_str, self.data.adsPageToOpenTarget_str)), self.isAdd_bl = !1, self.updateAds(0), self.wasAdd_bl = !0, t && self.videoType_str == FWDUVPlayer.VIDEO ? self.play() : self.isMobile_bl || self.play()), o || (self.data.stopVideoWhenPlayComplete_bl || 1 == self.data.playlist_ar.length || self.data.stopAfterLastVideoHasPlayed_bl && self.data.playlist_ar.length - 1 == self.id ? self.stop() : self.data.loop_bl ? "hls_flash" == self.videoType_str ? setTimeout(function() {
                self.scrub(0), self.resume()
            }, 50) : (self.scrub(0), self.play()) : (self.data.shuffle_bl ? self.playShuffle() : self.playNext(), self.isMobile_bl && self.stop())), self.hider && self.hider.reset(), self.dispatchEvent(FWDUVPlayer.PLAY_COMPLETE)
        }, this.setupAnnotations = function() {
            FWDUVPAnnotations.setPrototype(), self.annotations_do = new FWDUVPAnnotations(self, self.data), self.videoHolder_do.addChild(self.annotations_do)
        }, this.setupAdsStart = function() {
            FWDUVPAdsStart.setPrototype(), self.adsStart_do = new FWDUVPAdsStart(self.data.adsButtonsPosition_str, self.data.adsBorderNormalColor_str, "", self.data.adsBackgroundPath_str, self.data.adsTextNormalColor), FWDUVPAdsButton.setPrototype(), self.adsSkip_do = new FWDUVPAdsButton(self.data.skipIconPath_img, self.data.skipIconSPath_str, self.data.skipToVideoButtonText_str, self.data.adsButtonsPosition_str, self.data.adsBorderNormalColor_str, self.data.adsBorderSelectedColor_str, self.data.adsBackgroundPath_str, self.data.adsTextNormalColor, self.data.adsTextSelectedColor, self.data.useHEXColorsForSkin_bl, self.data.normalButtonsColor_str, self.data.selectedButtonsColor_str), self.adsSkip_do.addListener(FWDUVPAdsButton.MOUSE_UP, self.skipAdsMouseUpHandler), self.videoHolder_do.addChild(self.adsSkip_do), self.videoHolder_do.addChild(self.adsStart_do)
        }, this.skipAdsMouseUpHandler = function() {
            self.isThumbClick_bl = !0, self.callVastEvent("skip"), self.videoScreenPlayCompleteHandler(null, !0)
        }, this.positionAds = function(e) {
            var t, o;
            t = "left" == self.data.adsButtonsPosition_str ? 0 : self.tempVidStageWidth, o = self.controller_do ? self.controller_do.isShowed_bl ? self.tempVidStageHeight - self.adsStart_do.h - self.data.controllerHeight - 30 : self.tempVidStageHeight - self.adsStart_do.h - self.data.controllerHeight : self.tempVidStageHeight - self.adsStart_do.h, FWDAnimation.killTweensOf(this.adsStart_do), e ? FWDAnimation.to(this.adsStart_do, .8, {
                y: o,
                ease: Expo.easeInOut
            }) : this.adsStart_do.setY(o), self.adsStart_do.setX(t), t = "left" == self.data.adsButtonsPosition_str ? 0 : self.tempVidStageWidth, o = self.controller_do ? self.controller_do.isShowed_bl ? self.tempVidStageHeight - self.adsSkip_do.h - self.data.controllerHeight - 30 : self.tempVidStageHeight - self.adsSkip_do.h - self.data.controllerHeight : self.tempVidStageHeight - self.adsSkip_do.h, FWDAnimation.killTweensOf(this.adsSkip_do), e ? FWDAnimation.to(this.adsSkip_do, .8, {
                y: o,
                ease: Expo.easeInOut
            }) : this.adsSkip_do.setY(o), self.adsSkip_do.setX(t)
        }, this.setupShareWindow = function() {
            FWDUVPShareWindow.setPrototype(), self.shareWindow_do = new FWDUVPShareWindow(self.data, self), self.shareWindow_do.addListener(FWDUVPShareWindow.HIDE_COMPLETE, self.shareWindowHideCompleteHandler)
        }, this.shareWindowHideCompleteHandler = function() {
            self.isVideoPlayingWhenOpenWindows_bl && self.resume(), self.controller_do && !self.isMobile_bl && (self.controller_do.shareButton_do.isDisabled_bl = !1, self.controller_do.shareButton_do.setNormalState(!0))
        }, this.setupPasswordWindow = function() {
            FWDUVPPassword.setPrototype(), self.passWindow_do = new FWDUVPPassword(self.data, self), self.passWindow_do.addListener(FWDUVPPassword.CORRECT, self.passordCorrect)
        }, this.passordCorrect = function() {
            self.passWindow_do.hide(), self.hasPassedPassowrd_bl = !0, self.play()
        }, this.setupEmbedWindow = function() {
            FWDUVPEmbedWindow.setPrototype(), self.embedWindow_do = new FWDUVPEmbedWindow(self.data, self), self.embedWindow_do.addListener(FWDUVPEmbedWindow.ERROR, self.embedWindowErrorHandler), self.embedWindow_do.addListener(FWDUVPEmbedWindow.HIDE_COMPLETE, self.embedWindowHideCompleteHandler)
        }, this.embedWindowErrorHandler = function(e) {
            self.main_do.addChild(self.info_do), self.info_do.showText(e.error)
        }, this.embedWindowHideCompleteHandler = function() {
            self.isVideoPlayingWhenOpenWindows_bl && self.resume(), self.controller_do && !self.isMobile_bl && (self.controller_do.embedButton_do.isDisabled_bl = !1, self.controller_do.embedButton_do.setNormalState(!0))
        }, this.copyLinkButtonOnMouseOver = function() {
            self.embedWindow_do.copyLinkButton_do.setSelectedState()
        }, this.copyLinkButtonOnMouseOut = function() {
            self.embedWindow_do.copyLinkButton_do.setNormalState()
        }, this.getLinkCopyPath = function() {
            return self.embedWindow_do.linkToVideo_str
        }, this.embedkButtonOnMouseOver = function() {
            self.embedWindow_do.copyEmbedButton_do.setSelectedState()
        }, this.embedButtonOnMouseOut = function() {
            self.embedWindow_do.copyEmbedButton_do.setNormalState()
        }, this.getEmbedCopyPath = function() {
            return self.embedWindow_do.finalEmbedCode_str
        }, this.setInputs = function() {
            for (var e = document.querySelectorAll("input"), t = 0; t < e.length; t++) self.hasPointerEvent_bl ? e[t].addEventListener("pointerdown", self.inputFocusInHandler) : e[t].addEventListener && (e[t].addEventListener("mousedown", self.inputFocusInHandler), e[t].addEventListener("touchstart", self.inputFocusInHandler))
        }, this.inputFocusInHandler = function(e) {
            self.curInput = e.target, setTimeout(function() {
                self.hasPointerEvent_bl ? window.addEventListener("pointerdown", self.inputFocusOutHandler) : window.addEventListener && (window.addEventListener("mousedown", self.inputFocusOutHandler), window.addEventListener("touchstart", self.inputFocusOutHandler)), FWDUVPlayer.isSearchedFocused_bl = !0
            }, 50)
        }, this.inputFocusOutHandler = function(e) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            if (!FWDUVPUtils.hitTest(self.curInput, t.screenX, t.screenY)) return self.hasPointerEvent_bl ? window.removeEventListener("pointerdown", self.inputFocusOutHandler) : window.removeEventListener && (window.removeEventListener("mousedown", self.inputFocusOutHandler), window.removeEventListener("touchstart", self.inputFocusOutHandler)), void(FWDUVPlayer.isSearchedFocused_bl = !1)
        }, this.addKeyboardSupport = function() {
            self.setInputs(), document.addEventListener("keydown", this.onKeyDownHandler), document.addEventListener("keyup", this.onKeyUpHandler)
        }, this.onKeyDownHandler = function(e) {
            if ((!self.isSpaceDown_bl && self.hasStartedToPlay_bl && !FWDUVPlayer.isSearchedFocused_bl || self.isCasting) && (self.isSpaceDown_bl = !0, e.preventDefault && e.preventDefault(), self == FWDUVPlayer.keyboardCurInstance || "pause" != FWDUVPlayer.videoStartBehaviour && "none" != FWDUVPlayer.videoStartBehaviour)) {
                if (32 == e.keyCode) {
                    if (self.stickOnCurrentInstanceKey_bl = !0, self.isCasting) self.cc.togglePlayPause();
                    else if (self.videoType_str == FWDUVPlayer.IMAGE || self.videoType_str == FWDUVPlayer.IFRAME) self.isImageAdsPlaying_bl ? self.stopUpdateImageInterval() : self.startUpdateImageInterval();
                    else if (self.videoType_str == FWDUVPlayer.YOUTUBE) {
                        if (!self.ytb_do.isSafeToBeControlled_bl) return;
                        self.ytb_do.togglePlayPause()
                    } else if (self.videoType_str == FWDUVPlayer.VIMEO) {
                        if (!self.vimeo_do.isSafeToBeControlled_bl) return;
                        self.vimeo_do.togglePlayPause()
                    } else if (self.videoType_str == FWDUVPlayer.MP3) {
                        if (!self.audioScreen_do.isSafeToBeControlled_bl) return;
                        self.audioScreen_do.togglePlayPause()
                    } else if (FWDUVPlayer.hasHTML5Video) {
                        if (!self.videoScreen_do.isSafeToBeControlled_bl) return;
                        self.videoScreen_do && self.videoScreen_do.togglePlayPause()
                    } else self.isFlashScreenReady_bl && self.flashObject.togglePlayPause();
                    return e.preventDefault && e.preventDefault(), !1
                }
                if (70 == e.keyCode) self.isFullScreen_bl ? self.goNormalScreen() : self.goFullScreen();
                else if (77 == e.keyCode) 0 != self.volume && (self.lastVolume = self.volume), 0 != self.volume ? self.volume = 0 : self.volume = self.lastVolume, self.setVolume(self.volume);
                else if (38 == e.keyCode) self.volume += .1, 1 < self.volume && (self.volume = 1), self.setVolume(self.volume);
                else if (40 == e.keyCode) self.volume -= .1, self.volume < 0 && (self.volume = 0), self.setVolume(self.volume);
                else if (77 == e.keyCode) self.volume < 0 && (self.volume = 0), self.setVolume(self.volume);
                else if (39 != e.keyCode || self.isAdd_bl) {
                    if (37 == e.keyCode && !self.isAdd_bl) {
                        5 == (t = self.getCurrentTime()).length && (t = "00:" + t), 7 == t.length && (t = "0" + t), t = FWDUVPUtils.getSecondsFromString(t), t -= 5, 5 == (t = FWDUVPUtils.formatTime(t)).length && (t = "00:" + t), 7 == t.length && (t = "0" + t), self.scrubbAtTime(t)
                    }
                } else {
                    var t;
                    5 == (t = self.getCurrentTime()).length && (t = "00:" + t), 7 == t.length && (t = "0" + t), t = FWDUVPUtils.getSecondsFromString(t), t += 5, 5 == (t = FWDUVPUtils.formatTime(t)).length && (t = "00:" + t), 7 == t.length && (t = "0" + t), self.scrubbAtTime(t)
                }
            }
        }, this.onKeyUpHandler = function(e) {
            self.isSpaceDown_bl = !1
        }, this.setupAopw = function() {
            FWDUVPOPWindow.setPrototype(), self.popw_do = new FWDUVPOPWindow(self.data, self)
        }, this.setupHider = function() {
            FWDUVPHider.setPrototype(), self.hider = new FWDUVPHider(self.main_do, self.controller_do, self.data.controllerHideDelay), self.hider.addListener(FWDUVPHider.SHOW, self.hiderShowHandler), self.hider.addListener(FWDUVPHider.HIDE, self.hiderHideHandler), self.hider.addListener(FWDUVPHider.HIDE_COMPLETE, self.hiderHideCompleteHandler)
        }, this.hiderShowHandler = function() {
            self.controller_do && self.controller_do.show(!0), self.logo_do && self.data.hideLogoWithController_bl && self.isPlaying_bl && self.logo_do.show(!0), self.showCursor(), self.isAdd_bl && (self.positionAds(!0), self.adsStart_do.showWithOpacity(), self.adsSkip_do.showWithOpacity()), self.subtitle_do && self.subtitle_do.position(!0), self.popupAds_do && self.popupAds_do.position(!0)
        }, this.hiderHideHandler = function() {
            self.videoType_str != FWDUVPlayer.VIMEO ? self.controller_do.volumeScrubber_do && self.controller_do.isVolumeScrubberShowed_bl ? self.hider.reset() : self.controller_do.atb && self.controller_do.atb.isShowed_bl && FWDUVPUtils.hitTest(self.controller_do.atb.mainHolder_do.screen, self.hider.globalX, self.hider.globalY) ? self.hider.reset() : self.data.showYoutubeQualityButton_bl && FWDUVPUtils.hitTest(self.controller_do.ytbButtonsHolder_do.screen, self.hider.globalX, self.hider.globalY) ? self.hider.reset() : self.data.showPlaybackRateButton_bl && self.controller_do && FWDUVPUtils.hitTest(self.controller_do.playbackRatesButtonsHolder_do.screen, self.hider.globalX, self.hider.globalY) ? self.hider.reset() : self.controller_do && self.data.showSubtitleButton_bl && FWDUVPUtils.hitTest(self.controller_do.subtitlesButtonsHolder_do.screen, self.hider.globalX, self.hider.globalY) ? self.hider.reset() : FWDUVPUtils.hitTest(self.controller_do.screen, self.hider.globalX, self.hider.globalY) ? self.hider.reset() : FWDUVPUtils.hitTest(self.controller_do.mainScrubber_do.screen, self.hider.globalX, self.hider.globalY) ? self.hider.reset() : (self.controller_do.hide(!0), self.logo_do && self.data.hideLogoWithController_bl && self.logo_do.hide(!0), self.isFullScreen_bl && self.hideCursor(), self.isAdd_bl && (self.positionAds(!0), self.adsStart_do.hideWithOpacity(), self.adsSkip_do.hideWithOpacity()), self.subtitle_do.position(!0), self.popupAds_do && self.popupAds_do.position(!0)) : self.hider.reset()
        }, this.hiderHideCompleteHandler = function() {
            self.controller_do.positionScrollBarOnTopOfTheController()
        }, this.play = function() {
            if (self.isAPIReady_bl)
                if (self.isCasting) self.cc.play();
                else if (!self.isMobile_bl || self.videoType_str != FWDUVPlayer.YOUTUBE || !self.ytb_do || self.ytb_do.isSafeToBeControlled_bl || self.data.aom_bl) {
                if (self.videoType_str == FWDUVPlayer.HLS_JS && 0 <= location.protocol.indexOf("file:")) return self.main_do.addChild(self.info_do), void self.info_do.showText("HLS m3u8 videos can't be played local on this browser, please test it online!.");
                if (!self.isAdd_bl && self.data.playlist_ar[self.id].isPrivate && !self.hasPassedPassowrd_bl && self.passWindow_do) return self.largePlayButton_do && self.largePlayButton_do.show(), void self.passWindow_do.show();
                self.hasPassedPassowrd_bl = !0, self.isMobile_bl ? FWDUVPlayer.stopAllVideos(self) : FWDUVPlayer.videoStartBehaviour == FWDUVPlayer.PAUSE_ALL_VIDEOS || FWDUVPlayer.videoStartBehaviour == FWDUVPlayer.STOP_ALL_VIDEOS && FWDUVPlayer.stopAllVideos(self), self.videoType_str == FWDUVPlayer.IMAGE ? self.startUpdateImageInterval() : self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do ? self.ytb_do.play() : self.videoType_str == FWDUVPlayer.MP3 ? (self.audioScreen_do && self.audioScreen_do.play(), FWDUVPUtils.isLocal || self.audioScreen_do.setupSpectrum()) : self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do ? self.vimeo_do.play() : FWDUVPlayer.hasHTML5Video ? self.videoType_str != FWDUVPlayer.HLS_JS || self.isHLSManifestReady_bl ? self.videoScreen_do && self.videoScreen_do.play() : (self.videoScreen_do.initVideo(), self.setupHLS(), self.hlsJS.loadSource(self.videoSourcePath_str), self.hlsJS.attachMedia(self.videoScreen_do.video_el), self.hlsJS.on(Hls.Events.MANIFEST_PARSED, function(e) {
                    self.isHLSManifestReady_bl = !0, self.videoType_str == FWDUVPlayer.HLS_JS && self.play()
                })) : self.isFlashScreenReady_bl && (self.flashObject.playVideo(), self.scrub(0)), (FWDUVPlayer.keyboardCurInstance = self).videoPoster_do.allowToShow_bl = !1, self.largePlayButton_do.hide(), self.videoPoster_do.hide()
            }
        }, this.pause = function() {
            self.isAPIReady_bl && (self.isCasting ? self.cc.pause() : self.videoType_str == FWDUVPlayer.IMAGE ? self.stopUpdateImageInterval() : self.videoType_str == FWDUVPlayer.YOUTUBE ? self.ytb_do.pause() : self.videoType_str == FWDUVPlayer.MP3 ? self.audioScreen_do && self.audioScreen_do.pause() : self.videoType_str == FWDUVPlayer.VIMEO ? self.vimeo_do.pause() : FWDUVPlayer.hasHTML5Video ? self.videoScreen_do && self.videoScreen_do.pause() : self.isFlashScreenReady_bl && self.flashObject.pauseVideo())
        }, this.resume = function() {
            self.isAPIReady_bl && (self.isCasting ? self.cc.play() : self.videoType_str == FWDUVPlayer.IMAGE ? self.startUpdateImageInterval() : self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do ? self.ytb_do.resume() : self.videoType_str == FWDUVPlayer.MP3 ? self.audioScreen_do && self.audioScreen_do.resume() : self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do ? self.vimeo_do.resume() : FWDUVPlayer.hasHTML5Video ? self.videoScreen_do && self.videoScreen_do.resume() : self.isFlashScreenReady_bl && self.flashObject.resume())
        }, this.sendPlayEvent = function() {}, this.sendGAPlayedEvent = function() {
            if (!isNaN(self.totalPercentPlayed) && window.ga && Math.round(100 * self.totalPercentPlayed)) {
                var e = "videoName:" + self.videoNameGa + ", percentPlayed:" + Math.round(100 * self.totalPercentPlayed) + ", stoppedAtTime:" + self.getCurrentTime() + ", fullScreen:" + self.isFullScreen_bl;
                ga("send", {
                    hitType: "event",
                    eventCategory: self.videoCat,
                    eventAction: "played",
                    eventLabel: e,
                    nonInteraction: !0
                }), self.totalTimePlayed = 0, self.totalPercentPlayed = 0
            }
        }, this.stop = function(e) {
            self.isAPIReady_bl && (self.sendGAPlayedEvent(), self.isCasting && self.cc.stop(), self.totalTimePlayed = 0, self.hasPassedPassowrd_bl = !1, self.isHLSManifestReady_bl = !1, clearInterval(self.tryHLS_int), clearInterval(self.checkIfYoutubePlayerIsReadyId_int), clearInterval(self.keepCheckingYoutubeAPI_int), self.destroyHLS(), self.isPlaying_bl = !1, self.customContextMenu_do && self.customContextMenu_do.disable(), self.videoType_str == FWDUVPlayer.IMAGE ? self.stopUpdateImageInterval() : self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do ? self.ytb_do.stop() : self.videoType_str == FWDUVPlayer.MP3 ? self.audioScreen_do && self.audioScreen_do.stop() : self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do ? self.vimeo_do.stop() : FWDUVPlayer.hasHTML5Video && self.videoScreen_do.stop(), clearTimeout(self.playVimeoWhenLoadedId_to), self.popw_do && self.popw_do.hide(), self.setPosterSource(self.posterPath_str), self.isMobile_bl ? (self.data.showControllerWhenVideoIsStopped_bl && self.controller_do && self.controller_do.show(!0), e || self.videoType_str == FWDUVPlayer.YOUTUBE ? self.useYoutube_bl && self.ytb_do && !self.ytb_do.ytb && self.ytb_do.setupVideo() : (self.videoPoster_do.show(), self.videoType_str != FWDUVPlayer.VIMEO && self.largePlayButton_do.show())) : self.isThumbClick_bl || self.isAdd_bl || (self.controller_do && self.data.showControllerWhenVideoIsStopped_bl && self.controller_do.show(!0), self.videoPoster_do && self.videoPoster_do.show(), self.largePlayButton_do && self.largePlayButton_do.show()), self.controller_do && (self.controller_do.atb && self.controller_do.atb.hide(!0), self.controller_do.subtitleButton_do && (self.controller_do.disableSubtitleButton(), self.subtitle_do && (self.subtitle_do.showSubtitleByDefault_bl ? self.controller_do.subtitleButton_do.setButtonState(0) : self.controller_do.subtitleButton_do.setButtonState(1))), self.controller_do.thumbnailsPreview_do && self.controller_do.thumbnailsPreview_do.remove(), self.controller_do.atbButton_do && (self.controller_do.atbButton_do.doNotallowToSetNormal = !1, self.controller_do.atbButton_do.isSelected = !1, self.controller_do.atbButton_do.setNormalState()), self.controller_do.disableAtbButton(), self.controller_do.ttm && self.controller_do.ttm.hide(), self.controller_do.ytbQualityButton_do && self.controller_do.ytbQualityButton_do.disable(), self.controller_do.playbackRateButton_do && self.controller_do.playbackRateButton_do.disable(), self.controller_do && self.controller_do.rewindButton_do && self.controller_do.rewindButton_do.disable()), self.popupAds_do && self.popupAds_do.hideAllPopupButtons(!1), self.hasHlsPlayedOnce_bl = !1, self.isSafeToScrub_bl = !1, self.hlsState = void 0, self.changeHLS_bl = !1, self.controller_do && self.controller_do.disablePlaybackRateButton(), self.subtitle_do && self.subtitle_do.hide(), self.annotations_do && self.annotations_do.update(-1), self.hider && self.hider.reset(), self.showCursor(), self.adsStart_do && self.adsStart_do.hide(!0), self.adsSkip_do && self.adsSkip_do.hide(!0), self.controller_do && self.controller_do.hideAdsLines(), self.stopVisualization(), self.totalDuration = 0, self.hasStartedToPlay_bl = !1)
        }, this.startToScrub = function() {
            self.isAPIReady_bl && (self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do && self.ytb_do.isSafeToBeControlled_bl ? self.ytb_do.startToScrub() : self.videoType_str == FWDUVPlayer.MP3 ? self.audioScreen_do && self.audioScreen_do.startToScrub() : FWDUVPlayer.hasHTML5Video ? self.videoScreen_do && self.videoScreen_do.startToScrub() : self.isFlashScreenReady_bl && self.flashObject.startToScrub())
        }, this.stopToScrub = function() {
            self.isAPIReady_bl && (self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do && self.ytb_do.isSafeToBeControlled_bl ? self.ytb_do.stopToScrub() : self.videoType_str == FWDUVPlayer.MP3 ? self.audioScreen_do && self.audioScreen_do.stopToScrub() : self.isFlashScreenReady_bl ? self.flashObject.stopToScrub() : FWDUVPlayer.hasHTML5Video && self.videoScreen_do && self.videoScreen_do.stopToScrub())
        }, this.scrubbAtTime = function(e) {
            self.isAPIReady_bl && e && (-1 != String(e).indexOf(":") && (e = FWDUVPUtils.getSecondsFromString(e)), self.isCasting ? self.cc.scrubbAtTime(e) : self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do && self.ytb_do.isSafeToBeControlled_bl ? self.ytb_do.scrubbAtTime(e) : self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do ? self.vimeo_do.scrubbAtTime(e) : self.videoType_str == FWDUVPlayer.MP3 ? self.audioScreen_do && self.audioScreen_do.scrubbAtTime(e) : FWDUVPlayer.hasHTML5Video && self.videoScreen_do && self.videoScreen_do.scrubbAtTime(e))
        }, this.scrub = function(e) {
            self.isAPIReady_bl && (isNaN(e) || (e < 0 ? e = 0 : 1 < e && (e = 1), self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do && self.ytb_do.isSafeToBeControlled_bl ? self.ytb_do.scrub(e) : self.videoType_str == FWDUVPlayer.MP3 ? self.audioScreen_do && self.audioScreen_do.scrub(e) : self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do && self.vimeo_do.isSafeToBeControlled_bl ? self.vimeo_do.scrub(e) : FWDUVPlayer.hasHTML5Video ? self.videoScreen_do && self.videoScreen_do.scrub(e) : self.isFlashScreenReady_bl && self.flashObject.scrub(e)))
        }, this.setVolume = function(e) {
            self.isAPIReady_bl && (self.volume = e, self.controller_do && self.controller_do.updateVolume(e, !0), self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do && self.ytb_do.setVolume(e), self.videoType_str == FWDUVPlayer.VIMEO && self.vimeo_do && self.vimeo_do.setVolume(e), self.audioScreen_do && self.audioScreen_do.setVolume(e), FWDUVPlayer.hasHTML5Video && self.videoScreen_do && self.videoScreen_do.setVolume(e), self.isFlashScreenReady_bl && self.flashObject.setVolume(e), self.isCasting && self.cc.setVolume(), self.dispatchEvent(FWDUVPlayer.VOLUME_SET, {
                volume: e
            }))
        }, this.showCategories = function() {
            self.isAPIReady_bl && (self.isCasting ? self.isVideoPlayingWhenOpenWindows_bl = "PLAYING" == self.cc.playerState : self.videoType_str == FWDUVPlayer.YOUTUBE && self.ytb_do ? self.isVideoPlayingWhenOpenWindows_bl = self.ytb_do.isPlaying_bl : FWDUVPlayer.hasHTML5Video && self.videoScreen_do && (self.isVideoPlayingWhenOpenWindows_bl = self.videoScreen_do.isPlaying_bl), self.categories_do && (self.categories_do.show(self.catId), self.controller_do && self.controller_do.setCategoriesButtonState("selected"), self.pause()))
        }, this.hideCategories = function() {
            self.isAPIReady_bl && self.categories_do && (self.categories_do.hide(), self.controller_do && self.controller_do.setCategoriesButtonState("unselected"))
        }, this.showPlaylist = function() {
            self.isAPIReady_bl && self.showPlaylistButtonAndPlaylist_bl && (self.isPlaylistShowed_bl = !1, self.controller_do && self.controller_do.showHidePlaylistButton(), self.playlist_do.hide(!self.isMobile_bl), self.resizeHandler(!self.isMobile_bl), self.setStageContainerFinalHeightAndPosition(self.animate_bl), FWDUVPUtils.isSafari && FWDUVPUtils.isWin ? (self.playlist_do.hide(!1), self.resizeHandler(!1)) : self.isMobile_bl || FWDAnimation.to(self, .8, {
                tempStageWidth: self.stageWidth,
                tempStageHeight: self.stageHeight,
                tempVidStageWidth: self.vidStageWidth,
                tempVidStageHeight: self.vidStageHeight,
                ease: Expo.easeInOut,
                onUpdate: self.resizeFinal
            }))
        }, this.hidePlaylist = function() {
            self.isAPIReady_bl && self.showPlaylistButtonAndPlaylist_bl && (self.isPlaylistShowed_bl = !0, self.controller_do && self.controller_do.showHidePlaylistButton(), self.controller_do && self.controller_do.showShowPlaylistButton(), self.playlist_do.show(!self.isMobile_bl), self.resizeHandler(!self.isMobile_bl), self.setStageContainerFinalHeightAndPosition(self.animate_bl), FWDUVPUtils.isSafari && FWDUVPUtils.isWin ? (self.playlist_do.show(!1), self.resizeHandler(!1)) : self.isMobile_bl || FWDAnimation.to(self, .8, {
                tempStageWidth: self.stageWidth,
                tempStageHeight: self.stageHeight,
                tempVidStageWidth: self.vidStageWidth,
                tempVidStageHeight: self.vidStageHeight,
                ease: Expo.easeInOut,
                onUpdate: self.resizeFinal
            }))
        }, this.setPosterSource = function(e) {
            if (self.isAPIReady_bl && e) {
                var t = e.split(",");
                e = self.isMobile_bl && null != t[1] ? t[1] : t[0], self.videoPoster_do && (self.posterPath_str = e, -1 == self.videoSourcePath_str.indexOf(".") && self.videoType_str == FWDUVPlayer.YOUTUBE && self.isMobile_bl || -1 == self.videoSourcePath_str.indexOf("vimeo.com") && self.videoType_str == FWDUVPlayer.VIMEO && self.isMobile_bl ? self.videoPoster_do.setPoster("youtubemobile") : (self.videoPoster_do.setPoster(self.posterPath_str), self.prUVPosterSource_str != e && self.dispatchEvent(FWDUVPlayer.UPDATE_POSTER_SOURCE)), self.prUVPosterSource_str = e)
            }
        }, this.updateAds = function(e, t) {
            if (self.data.playlist_ar[self.id])
                if (!self.data.playlist_ar[self.id].vastURL || self.data.playlist_ar[self.id].ads_ar) {
                    if (self.curAddData = self.data.playlist_ar[self.id].ads_ar, this.isAdd_bl || (self.TrackingEvents = void 0, self.Impression = void 0, self.ClickTracking = void 0, self.curAddData && (self.callFirstQuartile = !0, self.callMidpoint = !0, self.callThirdQuartile = !0)), !this.isAdd_bl && self.curAddData) {
                        self.curSource = self.data.playlist_ar[self.id].videoSource[self.data.playlist_ar[self.id].startAtVideo].source;
                        for (var o = 0; o < self.data.playlist_ar[self.id].ads_ar.length; o++) e >= self.curAddData[o].timeStart && e <= self.curAddData[o].timeStart + 1 && (self.addSource_str = self.curAddData[o].source);
                        for (o = 0; o < self.curAddData.length; o++)
                            if (e >= self.curAddData[o].timeStart && e <= self.curAddData[o].timeStart + 1 && !self.curAddData[o].played_bl && self.addSource_str != self.prvAdSource) return self.addId = o, 0 == self.curAddData[o].timeStart && (t = !1), self.isAdd_bl = !0, self.addSource_str = self.curAddData[o].source, self.curAddData[self.addId].played_bl = !0, self.curAddData && (self.curAddData[self.addId].played_bl = !0), setTimeout(function() {
                                self.curAddData && (self.curAddData[self.addId].played_bl = !0)
                            }, 50), self.data.adsThumbnailPath_str = self.curAddData[o].thumbnailSource, self.data.timeToHoldAds = self.curAddData[o].timeToHoldAds, self.data.adsPageToOpenURL_str = self.curAddData[o].link, self.data.adsPageToOpenTarget_str = self.curAddData[o].target, self.TrackingEvents = self.curAddData[o].TrackingEvents, self.Impression = self.curAddData[o].Impression, self.ClickTracking = self.curAddData[o].ClickTracking, self.scrubAfterAddDuration = self.curAddData[o].timeStart, self.curImageTotalTime = self.curAddData[o].addDuration, self.setSource(self.addSource_str), this.controller_do && this.controller_do.line_ar && this.controller_do.line_ar[o].setVisible(!1), void(self.prvAdSource = self.addSource_str)
                    } else this.isAdd_bl ? self.curSource = "FWDUVPDummy" + (new Date).getTime() : self.curSource = self.data.playlist_ar[self.id].videoSource[self.data.playlist_ar[self.id].startAtVideo].source;
                    this.controller_do && (self.controller_do.setupAdsLines(self.curAddData, self.id, self.catId), self.totalDuration && self.controller_do.positionAdsLines(self.totalDuration)), self.isLive = self.data.playlist_ar[self.id].isLive, (!this.isAdd_bl && self.prevSource != self.curSource && -1 == self.curSource.indexOf("FWDUVPDummy") || t) && (t && (this.isAdd_bl = !1, self.curSource = self.data.playlist_ar[self.id].videoSource[self.data.playlist_ar[self.id].startAtVideo].source), self.setSource(self.curSource, !1, self.data.playlist_ar[self.id].videoSource[self.data.playlist_ar[self.id].startAtVideo].is360)), this.controller_do && this.controller_do.positionAdsLines(self.curDuration), self.prevDuration = e, self.prevSource = self.curSource
                } else self.data.loadVast(self.data.playlist_ar[self.id].vastURL)
        }, this.updateImageScreen = function(e) {
            this.imageSceeenHolder_do || (this.imageSceeenHolder_do = new FWDUVPDisplayObject("div"), this.imageSceeenHolder_do.setX(0), this.imageSceeenHolder_do.setY(0), this.imageSceeenHolder_do.setBkColor("#000000")), self.videoHolder_do.addChildAt(self.imageSceeenHolder_do, self.videoHolder_do.getChildIndex(self.dumyClick_do) - 1), self.showClickScreen(), self.imageSceeenHolder_do.contains(self.imageScreen_do) && self.imageSceeenHolder_do.removeChild(this.imageScreen_do), this.imageScreen_do = null, self.imageScreen_do = new FWDUVPDisplayObject("img"), self.imageAdd_img = new Image, self.imageAdd_img.src = e, self.preloader_do && self.preloader_do.show(!1), self.largePlayButton_do && self.largePlayButton_do.hide(), self.imageAdd_img.onload = function() {
                self.imageScreen_do.setScreen(self.imageAdd_img), self.imageScreen_do.setAlpha(0), FWDAnimation.to(self.imageScreen_do, 1, {
                    alpha: 1
                }), self.imageAddOriginalWidth = self.imageAdd_img.width, self.imageAddOriginalHeight = self.imageAdd_img.height, self.preloader_do && self.preloader_do.hide(), self.imageSceeenHolder_do.addChild(self.imageScreen_do), self.positionAdsImage(), self.startToUpdateAdsButton()
            }, self.imageAdd_img.onerror = function() {
                self.main_do.addChild(self.info_do), self.info_do.showText("Advertisment image with path " + e + " can't be found"), self.preloader_do && self.preloader_do.hide()
            }
        }, this.positionAdsImage = function() {
            if (self.imageScreen_do && self.videoType_str == FWDUVPlayer.IMAGE) {
                var e = self.tempVidStageWidth / self.imageAddOriginalWidth,
                    t = self.tempVidStageHeight / self.imageAddOriginalHeight;
                totalScale = 0, t <= e ? totalScale = e : e <= t && (totalScale = t), finalW = parseInt(self.imageAddOriginalWidth * totalScale), finalH = parseInt(self.imageAddOriginalHeight * totalScale), finalX = parseInt((self.tempVidStageWidth - finalW) / 2), finalY = parseInt((self.tempVidStageHeight - finalH) / 2), self.imageScreen_do.setWidth(finalW), self.imageScreen_do.setHeight(finalH), self.imageScreen_do.setX(finalX), self.imageScreen_do.setY(finalY), self.imageSceeenHolder_do.setWidth(self.tempVidStageWidth), self.imageSceeenHolder_do.setHeight(self.tempVidStageHeight)
            }
        }, this.startToUpdateAdsButton = function() {
            self.curImageTime = 0, self.updateAdsButton(), self.stopUpdateImageInterval(), self.startUpdateImageInterval(), self.setPlayAndPauseButtonState()
        }, this.stopUpdateImageInterval = function() {
            self.isImageAdsPlaying_bl = !1, clearInterval(self.startUpdateAdsId_int), self.setPlayAndPauseButtonState(), self.isPlaying_bl = !1, self.hider.stop()
        }, this.startUpdateImageInterval = function() {
            self.isImageAdsPlaying_bl = !0, self.startUpdateAdsId_int = setInterval(self.updateAdsButton, 1e3), self.setPlayAndPauseButtonState(), self.isPlaying_bl = !0, self.hider.start()
        }, this.updateAdsButton = function() {
            self.videoScreenUpdateTimeHandler({
                curTime: FWDUVPUtils.formatTime(self.curImageTime),
                totalTime: FWDUVPUtils.formatTime(self.curImageTotalTime),
                seconds: self.curImageTime
            }), self.videoScreenUpdateHandler({
                percent: self.curImageTime / self.curImageTotalTime
            }), self.curImageTime == self.curImageTotalTime && self.videoScreenPlayCompleteHandler(), self.curImageTime += 1
        }, this.setPlayAndPauseButtonState = function() {
            this.isImageAdsPlaying_bl ? self.controller_do && self.controller_do.showPauseButton() : self.controller_do && self.controller_do.showPlayButton()
        }, this.setSource = function(t, e, o) {
            if (t && (self.source = t), self.data.playVideoOnlyWhenLoggedIn_bl && !self.data.isLoggedIn_bl) return self.main_do.addChild(self.info_do), self.info_do.showText(self.data.loggedInMessage_str), self.info_do.allowToRemove_bl = !1, void(self.largePlayButton_do && self.largePlayButton_do.show());
            if ((self.is360 = o, self.data.playlist_ar[self.id].thumbnailsPreview) && (-1 != location.protocol.indexOf("file:") && setTimeout(function() {
                    self.main_do.addChild(self.info_do), self.info_do.showText("This browser doesn't allow thumbnails preview videos local, please test online."), self.resizeHandler()
                }, 50), 2 < self.data.playlist_ar[self.id].thumbnailsPreview.length && -1 == location.protocol.indexOf("file:") && !self.thumbnailsPreviewLoaded_bl)) return (n = document.createElement("script")).src = self.mainFolderPath_str + "java/FWDUVPThumbnailsPreview.js", document.head.appendChild(n), n.onerror = function(e) {
                self.main_do.addChild(self.info_do), self.info_do.showText('The thumbnails preview javascript file named <font color="#FF0000">FWDUVPThumbnailsPreview.js</font> is not found. Please make sure that the content folder contains the java folder that contains the <font color="#FF0000">FWDUVPThumbnailsPreview.js</font> file.')
            }, void(n.onload = function() {
                self.thumbnailsPreviewLoaded_bl = !0, self.setSource(self.source)
            });
            if (self.hasThumbnailsPreview = !1, self.data.playlist_ar[self.id].thumbnailsPreview && 2 < self.data.playlist_ar[self.id].thumbnailsPreview.length && (self.hasThumbnailsPreview = !0, self.controller_do && self.controller_do.setupThumbnailsPreview()), self.isAPIReady_bl && -1 != self.id && (self.id < 0 ? self.id = 0 : self.id > self.totalVideos - 1 && (self.id = self.totalVideos - 1), null != self.data.playlist_ar[self.id])) {
                if (self.stop(t), self.controller_do && self.controller_do.setIsLive(self.isLive), self.playlist_do && self.playlist_do.curId != self.id && (self.prvAdSource = 999999999 * Math.random(), !self.data.playAdsOnlyOnce_bl))
                    for (var s = 0; s < self.data.playlist_ar.length; s++)
                        if (self.data.playlist_ar[s].ads_ar)
                            for (var i = 0; i < self.data.playlist_ar[s].ads_ar.length; i++) self.data.playlist_ar[s].ads_ar[i].played_bl = !1;
                if (-1 != t.indexOf("vimeo.com") && -1 == t.indexOf(".m3u8") && -1 == t.indexOf(".mp4") ? self.videoType_str = FWDUVPlayer.VIMEO : -1 != t.indexOf("youtube.") ? self.videoType_str = FWDUVPlayer.YOUTUBE : -1 != t.toLowerCase().indexOf(".mp3") ? (self.videoType_str = FWDUVPlayer.MP3, self.controller_do && self.controller_do.setX(0)) : -1 != t.indexOf(".jpg") || -1 != t.indexOf(".jpeg") || -1 != t.indexOf(".png") ? (self.videoType_str = FWDUVPlayer.IMAGE, self.controller_do && self.controller_do.setX(0)) : (self.controller_do && self.controller_do.setX(0), self.isMobile_bl || FWDUVPlayer.hasHTMLHLS || -1 == t.indexOf(".m3u8") ? self.videoType_str = FWDUVPlayer.VIDEO : self.videoType_str = FWDUVPlayer.HLS_JS), self.videoSourcePath_str = t, self.finalVideoPath_str = t, self.posterPath_str = self.data.playlist_ar[self.id].posterSource, self.cc && self.cc.checkButtonState(), !(self.isMobile_bl || FWDUVPlayer.hasHTMLHLS || -1 == t.indexOf(".m3u8") || self.isHLSJsLoaded_bl || FWDUVPlayer.isHLSJsLoaded_bl)) return -1 != location.protocol.indexOf("file:") ? (self.main_do.addChild(self.info_do), self.info_do.showText("This browser doesn't allow playing HLS / live streaming videos local, please test online."), void self.resizeHandler()) : ((n = document.createElement("script")).src = self.data.hlsPath_str, document.head.appendChild(n), n.onerror = function() {
                    self.main_do.addChild(self.info_do), self.info_do.showText("Error loading HLS library <font color='#FF0000'>" + self.data.hlsPath_str + "</font>."), self.preloader_do && self.preloader_do.hide()
                }, n.onload = function() {
                    self.isHLSJsLoaded_bl = !0, FWDUVPlayer.isHLSJsLoaded_bl = !0, self.setupHLS(), self.setSource(t, !1, self.is360)
                }, void(self.autoPlay_bl || self.isThumbClick_bl || (self.setPosterSource(self.posterPath_str), self.videoPoster_do && self.videoPoster_do.show(), self.largePlayButton_do && self.largePlayButton_do.show())));
                if (-1 != t.indexOf("youtube.") && !self.ytb_do) return setTimeout(function() {
                    self.showPreloader_bl && (self.main_do.addChild(self.preloader_do), self.preloader_do && self.preloader_do.show(!1), self.largePlayButton_do && self.largePlayButton_do.hide(), -1 != location.protocol.indexOf("file:") && FWDUVPUtils.isIE && self.main_do.addChild(self.info_do))
                }, 50), -1 != location.protocol.indexOf("file:") && FWDUVPUtils.isIE ? (self.main_do.addChild(self.info_do), self.info_do.showText("This browser doesn't allow the Youtube API to run local, please test it online or in another browser like Firefox or Chrome."), void self.resizeHandler()) : void self.setupYoutubeAPI();
                if (-1 != t.indexOf("vimeo.") && !self.vimeo_do && self.videoType_str == FWDUVPlayer.VIMEO) return -1 != location.protocol.indexOf("file:") ? (self.main_do.addChild(self.info_do), self.info_do.showText("This browser doesn't allow playing Vimeo videos local, please test online."), void self.resizeHandler()) : (self.showPreloader_bl && (self.main_do.addChild(self.preloader_do), self.preloader_do && self.preloader_do.show(!1)), self.largePlayButton_do && self.largePlayButton_do.hide(), void self.setupVimeoAPI());
                if (self.videoType_str != FWDUVPlayer.VIDEO && self.videoType_str != FWDUVPlayer.HLS_JS && (self.is360 = !1), self.is360 && !self.isThreeJsOrbigLoaded_bl) {
                    if (FWDUVPUtils.isLocal) return self.main_do.addChild(self.info_do), self.info_do.showText("This browser doesn't allow playing 360 videos local, please test online."), void(self.preloader_do && self.preloader_do.hide());
                    if (!FWDUVPUtils.hasWEBGL) return self.main_do.addChild(self.info_do), self.info_do.showText("Playing 360 videos in this browser is not possible because it doesn't support WEBGL."), void(self.preloader_do && self.preloader_do.hide());
                    var n;
                    if (!self.isThreeJsLoaded_bl && !FWDUVPlayer.hasThreeJsLoaded_bl) return (n = document.createElement("script")).src = self.data.threeJsPath_str, n.onerror = function() {
                        self.main_do.addChild(self.info_do), self.info_do.showText("Error loading 360 degree library <font color='#FF0000'>" + self.data.threeJsPath_str + "</font>."), self.preloader_do && self.preloader_do.hide()
                    }, n.onload = function() {
                        self.isThreeJsOrbigLoaded_bl = !0;
                        var e = document.createElement("script");
                        e.src = self.data.threeJsControlsPath_str, e.onerror = function() {
                            self.main_do.addChild(self.info_do), self.info_do.showText("Error loading three.js from <font color='#FF0000'>" + self.data.threeJsControlsPath_str + "</font>."), self.preloader_do && self.preloader_do.hide()
                        }, e.onload = function() {
                            FWDUVPlayer.hasThreeJsLoaded_bl = !0, self.isThreeJsOrbitLoaded_bl = !0, self.isThreeJsOrbigLoaded_bl && self.isThreeJsOrbitLoaded_bl && self.setSource(t, !0, !0), clearTimeout(self.load360ScriptsId_to), self.preloader_do && self.preloader_do.hide()
                        }, document.head.appendChild(e)
                    }, document.head.appendChild(n), void(this.load360ScriptsId_to = setTimeout(function() {
                        self.showPreloader_bl && self.preloader_do && self.preloader_do.show(!1)
                    }, 1e3))
                }
                if (self.is360 ? self.dumyClick_do.getStyle().cursor = "url(" + self.data.handPath_str + "), default" : self.dumyClick_do.getStyle().cursor = "auto", self.data.playlist_ar[self.id] && self.data.playlist_ar[self.id].scrubAtTimeAtFirstPlay && (self.playAtTime_bl = !0), self.controller_do && self.controller_do.rewindButton_do && self.controller_do.rewindButton_do.disable(), self.popwSource = self.data.playlist_ar[self.id].dataAdvertisementOnPauseSource, self.data.playlist_ar[self.id] && self.data.playlist_ar[self.id].dataAdvertisementOnPauseSource ? self.showPopW_bl = !0 : self.showPopW_bl = !1, self.cuePointsSource_ar = self.data.playlist_ar[self.id].cuepoints_ar, t || (t = self.data.playlist_ar[self.id].videoSource[self.data.playlist_ar[self.id].startAtVideo].source), -1 != t.indexOf("youtube.")) {
                    t = t.match(/^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/)[2]
                }
                if (self.controller_do && self.controller_do.enablePlayButton(), !(self.prevVideoSource_str = t)) return self.main_do.addChild(self.info_do), void self.info_do.showText("Video source is not defined!");
                if (self.playlist_do && (self.playlist_do.curId = self.id, self.playlist_do.checkThumbsState()), self.controller_do && self.data.playlist_ar[self.id].subtitleSource && 1 < self.data.playlist_ar[self.id].subtitleSource.length && (self.controller_do.updateSubtitleButtons(self.data.playlist_ar[self.id].subtitleSource, self.data.playlist_ar[self.id].startAtSubtitle), self.ccSS = Number(self.data.playlist_ar[self.id].subtitleSource.length - self.data.playlist_ar[self.id].startAtSubtitle)), self.controller_do && self.controller_do.updateHexColorForScrubber(self.isAdd_bl), self.annotations_ar = self.data.playlist_ar[self.id].annotations_ar, self.annotations_do.setupAnnotations(self.annotations_ar), self.popupAds_do && (self.data.playlist_ar[self.id].popupAds_ar ? (self.popupAds_do.resetPopups(self.data.playlist_ar[self.id].popupAds_ar), self.popupAds_do.id = self.curId) : self.popupAds_do.hideAllPopupButtons(!0)), self.startAtPlaybackIndex = self.data.startAtPlaybackIndex, "0.25" == self.data.playlist_ar[self.id].dataPlaybackRate ? self.startAtPlaybackIndex = 5 : "0.5" == self.data.playlist_ar[self.id].dataPlaybackRate ? self.startAtPlaybackIndex = 4 : "1" == self.data.playlist_ar[self.id].dataPlaybackRate ? self.startAtPlaybackIndex = 3 : "1.25" == self.data.playlist_ar[self.id].dataPlaybackRate ? self.startAtPlaybackIndex = 2 : "1.5" == self.data.playlist_ar[self.id].dataPlaybackRate ? self.startAtPlaybackIndex = 1 : "2" == self.data.playlist_ar[self.id].dataPlaybackRate && (self.startAtPlaybackIndex = 0), self.prevVideoSourcePath_str = self.videoSourcePath_str, self.resizeHandler(!1, !0), self.videoType_str == FWDUVPlayer.IMAGE) return self.updateImageScreen(self.videoSourcePath_str), void(self.videoPoster_do && self.videoPoster_do.setX(-5e3));
                if (self.videoHolder_do.contains(self.imageSceeenHolder_do) && self.videoHolder_do.removeChild(self.imageSceeenHolder_do), self.videoPoster_do && self.videoPoster_do.setX(0), self.getVideoSource() && self.dispatchEvent(FWDUVPlayer.UPDATE_VIDEO_SOURCE), self.videoType_str == FWDUVPlayer.VIMEO) return self.ytb_do && self.ytb_do.setX(-5e3), self.videoScreen_do && self.videoScreen_do.setX(-5e3), 0 != self.vimeo_do.x && self.vimeo_do.setX(0), self.isAdd_bl ? self.showClickScreen() : self.hideClickScreen(), self.audioScreen_do && self.audioScreen_do.setX(-5e3), self.audioScreen_do.setVisible(!1), self.videoScreen_do && self.videoScreen_do.setVisible(!1), self.controller_do && self.controller_do.removePlaybackRateButton(), self.vimeo_do.setSource(t), self.controller_do && (self.controller_do.hideQualityButtons(!1), self.controller_do.removeYtbQualityButton()), self.isMobile_bl ? (self.videoPoster_do.hide(), self.largePlayButton_do && self.largePlayButton_do.hide(), self.data.aom_bl && (self.controller_do && self.controller_do.updateVolume(0), self.play())) : self.data.autoPlay_bl || self.isThumbClick_bl ? setTimeout(self.play, 500) : (self.setPosterSource(self.posterPath_str), self.videoPoster_do && self.videoPoster_do.show(), self.largePlayButton_do && self.largePlayButton_do.show()), self.getVideoSource() && self.dispatchEvent(FWDUVPlayer.UPDATE_VIDEO_SOURCE), void this.resizeHandler();
                if (self.videoType_str == FWDUVPlayer.YOUTUBE) return self.vimeo_do && self.vimeo_do.setX(-5e3), self.videoScreen_do.setX(-5e3), self.videoScreen_do.setVisible(!1), self.audioScreen_do && self.audioScreen_do.setX(-5e3), self.audioScreen_do.setVisible(!1), self.setPosterSource(self.posterPath_str), self.ytb_do && self.ytb_do.setX(0), self.isTempYoutubeAdd_bl = !1, self.ytb_do.setSource(t), self.isMobile_bl ? setTimeout(function() {
                    self.videoPoster_do.hide(), self.largePlayButton_do.hide(), self.data.aom_bl && (self.controller_do && self.controller_do.updateVolume(0), self.play())
                }, 100) : self.data.autoPlay_bl || self.isThumbClick_bl ? self.data.autoPlay_bl && !self.isMobile_bl && self.play() : (self.videoPoster_do && self.videoPoster_do.show(), self.largePlayButton_do && self.largePlayButton_do.show()), self.controller_do && (self.controller_do.addYtbQualityButton(), self.controller_do && (self.videoType_str == FWDUVPlayer.VIMEO || self.videoType_str == FWDUVPlayer.IMAGE ? self.controller_do.removePlaybackRateButton() : self.controller_do.addPlaybackRateButton(self.startAtPlaybackIndex))), self.isAdd_bl ? self.setPlaybackRate(1) : self.setPlaybackRate(self.data.defaultPlaybackRate_ar[self.data.startAtPlaybackIndex]), self.controller_do && self.data.showPlaybackRateButton_bl && self.controller_do.updatePlaybackRateButtons(self.startAtPlaybackIndex), self.resizeHandler(!1, !0), void(self.getVideoSource() && self.dispatchEvent(FWDUVPlayer.UPDATE_VIDEO_SOURCE));
                if (-1 == t.indexOf("google.com")) {
                    var l = t.split(",");
                    t = self.isMobile_bl && null != l[1] ? l[1] : l[0]
                }
                self.finalVideoPath_str = t, self.videoType_str == FWDUVPlayer.MP3 && (self.vimeo_do && self.vimeo_do.setX(-5e3), self.ytb_do && self.ytb_do.setX(-5e3), self.audioScreen_do && self.audioScreen_do.setX(-5e3), self.audioScreen_do.setVisible(!1), self.videoScreen_do.setVisible(!0), self.controller_do && 1 < self.data.playlist_ar[self.id].videoSource.length ? (self.controller_do.updatePreloaderBar(0), self.controller_do && self.controller_do.addYtbQualityButton(), self.controller_do.updateQuality(self.data.playlist_ar[self.id].videoLabels_ar, self.data.playlist_ar[self.id].videoLabels_ar[self.data.playlist_ar[self.id].videoLabels_ar.length - 1 - self.data.playlist_ar[self.id].startAtVideo])) : self.controller_do && self.controller_do.removeYtbQualityButton(), self.controller_do && (self.videoType_str == FWDUVPlayer.VIMEO || self.videoType_str == FWDUVPlayer.IMAGE ? self.controller_do.removePlaybackRateButton() : self.controller_do.addPlaybackRateButton(self.startAtPlaybackIndex)), self.audioScreen_do.setX(0), self.audioScreen_do.setVisible(!0), self.audioScreen_do.setSource(t), self.isCasting && self.setPosterSource(self.posterPath_str), self.data.autoPlay_bl || self.isThumbClick_bl || !self.isMobile_bl && self.isAdd_bl && !self.loadAddFirstTime_bl ? self.play() : (self.videoPoster_do && self.videoPoster_do.show(), self.largePlayButton_do && self.largePlayButton_do.show())), (FWDUVPlayer.hasHTML5Video && self.videoType_str == FWDUVPlayer.VIDEO || self.videoType_str == FWDUVPlayer.HLS_JS) && (self.vimeo_do && self.vimeo_do.setX(-5e3), self.ytb_do && self.ytb_do.setX(-5e3), self.audioScreen_do && self.audioScreen_do.setX(-5e3), self.audioScreen_do.setVisible(!1), self.videoScreen_do.setVisible(!0), self.controller_do && 1 < self.data.playlist_ar[self.id].videoSource.length ? (self.controller_do.updatePreloaderBar(0), self.controller_do && self.controller_do.addYtbQualityButton(), self.controller_do.updateQuality(self.data.playlist_ar[self.id].videoLabels_ar, self.data.playlist_ar[self.id].videoLabels_ar[self.data.playlist_ar[self.id].videoLabels_ar.length - 1 - self.data.playlist_ar[self.id].startAtVideo])) : self.controller_do && self.controller_do.removeYtbQualityButton(), self.controller_do && self.controller_do && (self.videoType_str == FWDUVPlayer.VIMEO || self.videoType_str == FWDUVPlayer.IMAGE ? self.controller_do.removePlaybackRateButton() : self.controller_do.addPlaybackRateButton(self.startAtPlaybackIndex)), self.videoType_str == FWDUVPlayer.HLS_JS ? (self.videoScreen_do.setSource(t), self.videoScreen_do.initVideo(), self.setupHLS(), self.hlsJS.loadSource(self.videoSourcePath_str), self.hlsJS.attachMedia(self.videoScreen_do.video_el), self.hlsJS.on(Hls.Events.MANIFEST_PARSED, function(e) {
                    self.videoType_str == FWDUVPlayer.HLS_JS && (self.isHLSManifestReady_bl = !0, (self.data.autoPlay_bl || self.isThumbClick_bl || !self.isMobile_bl && self.isAdd_bl && !self.loadAddFirstTime_bl) && self.play(), self.isAdd_bl ? self.setPlaybackRate(1) : self.setPlaybackRate(self.data.defaultPlaybackRate_ar[self.startAtPlaybackIndex]), self.controller_do && self.data.showPlaybackRateButton_bl && self.controller_do.updatePlaybackRateButtons(self.startAtPlaybackIndex))
                })) : (self.videoScreen_do.setSource(t), self.data.autoPlay_bl || self.data.aom_bl || self.isThumbClick_bl || !self.isMobile_bl && self.isAdd_bl && !self.loadAddFirstTime_bl ? (self.play(), self.data.aom_bl && (self.controller_do && self.controller_do.updateVolume(0), self.play()), self.isCasting && (self.setPosterSource(self.posterPath_str), self.videoPoster_do.show())) : (self.setPosterSource(self.posterPath_str), self.videoPoster_do.show(), self.largePlayButton_do.show()), self.isAdd_bl ? self.setPlaybackRate(1) : self.setPlaybackRate(self.data.defaultPlaybackRate_ar[self.startAtPlaybackIndex]), self.controller_do && self.data.showPlaybackRateButton_bl && self.controller_do.updatePlaybackRateButtons(self.startAtPlaybackIndex))), this.resizeHandler()
            }
        }, this.destroyHLS = function() {
            self.hlsJS && (self.hlsJS.destroy(), self.hlsJS = null)
        }, this.setupHLS = function() {
            self.hlsJS || (self.isHLSJsLoaded_bl = !0, self.hlsJS = new Hls, self.hlsJS.on(Hls.Events.ERROR, function(e, t) {
                switch (self.HLSError_str, t.details) {
                    case Hls.ErrorDetails.MANIFEST_LOAD_ERROR:
                        try {
                            self.HLSError_str = 'cannot load <a href="' + t.context.url + '">' + url + "</a><br>HTTP response code:" + t.response.code + " <br>" + t.response.text, 0 === t.response.code && (self.HLSError_str += 'this might be a CORS issue, consider installing <a href="https://chrome.google.com/webstore/detail/allow-control-allow-origi/nlfbmbojpeacfghkpbjhddihlkkiljbi">Allow-Control-Allow-Origin</a> Chrome Extension')
                        } catch (e) {
                            self.HLSError_str = "cannot load " + self.videoSourcePath_str
                        }
                        break;
                    case Hls.ErrorDetails.MANIFEST_LOAD_TIMEOUT:
                        self.HLSError_str = "timeout while loading manifest";
                        break;
                    case Hls.ErrorDetails.MANIFEST_PARSING_ERROR:
                        self.HLSError_str = "error while parsing manifest:" + t.reason;
                        break;
                    case Hls.ErrorDetails.LEVEL_LOAD_ERROR:
                        self.HLSError_str = "error while loading level playlist";
                        break;
                    case Hls.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                        self.HLSError_str = "timeout while loading level playlist";
                        break;
                    case Hls.ErrorDetails.LEVEL_SWITCH_ERROR:
                        self.HLSError_str = "error while trying to switch to level " + t.level;
                        break;
                    case Hls.ErrorDetails.FRAG_LOAD_ERROR:
                        self.HLSError_str = "error while loading fragment " + t.frag.url;
                        break;
                    case Hls.ErrorDetails.FRAG_LOAD_TIMEOUT:
                        self.HLSError_str = "timeout while loading fragment " + t.frag.url;
                        break;
                    case Hls.ErrorDetails.FRAG_LOOP_LOADING_ERROR:
                        self.HLSError_str = "Frag Loop Loading Error";
                        break;
                    case Hls.ErrorDetails.FRAG_DECRYPT_ERROR:
                        self.HLSError_str = "Decrypting Error:" + t.reason;
                        break;
                    case Hls.ErrorDetails.FRAG_PARSING_ERROR:
                        self.HLSError_str = "Parsing Error:" + t.reason;
                        break;
                    case Hls.ErrorDetails.KEY_LOAD_ERROR:
                        self.HLSError_str = "error while loading key " + t.frag.decryptdata.uri;
                        break;
                    case Hls.ErrorDetails.KEY_LOAD_TIMEOUT:
                        self.HLSError_str = "timeout while loading key " + t.frag.decryptdata.uri;
                        break;
                    case Hls.ErrorDetails.BUFFER_APPEND_ERROR:
                        self.HLSError_str = "Buffer Append Error";
                        break;
                    case Hls.ErrorDetails.BUFFER_ADD_CODEC_ERROR:
                        self.HLSError_str = "Buffer Add Codec Error for " + t.mimeType + ":" + t.err.message;
                        break;
                    case Hls.ErrorDetails.BUFFER_APPENDING_ERROR:
                        self.HLSError_str = "Buffer Appending Error"
                }
                self.HLSError_str && (console && console.log(self.HLSError_str), self.main_do.addChild(self.info_do), self.info_do.showText(self.HLSError_str), self.resizeHandler())
            }))
        }, this.goFullScreen = function() {
            if (self.isAPIReady_bl) {
                self.wasMin = self.isMin, self.isFullScreen_bl = !0, self.removeMinOnScroll(), document.addEventListener && (document.addEventListener("fullscreenchange", self.onFullScreenChange), document.addEventListener("mozfullscreenchange", self.onFullScreenChange), document.addEventListener("webkitfullscreenchange", self.onFullScreenChange), document.addEventListener("MSFullscreenChange", self.onFullScreenChange)), FWDUVPUtils.isSafari && FWDUVPUtils.isWin || (document.documentElement.requestFullScreen ? self.main_do.screen.requestFullScreen() : document.documentElement.mozRequestFullScreen ? self.main_do.screen.mozRequestFullScreen() : document.documentElement.webkitRequestFullScreen ? self.main_do.screen.webkitRequestFullScreen() : document.documentElement.msRequestFullscreen && self.main_do.screen.msRequestFullscreen()), self.callVastEvent("playerExpand"), self.stopVisualization(), self.disableClick(), self.isEmbedded_bl || (self.main_do.getStyle().position = "fixed", document.documentElement.style.overflow = "hidden", self.main_do.getStyle().zIndex = 9999999999998), self.controller_do && (self.controller_do.showNormalScreenButton(), self.controller_do.setNormalStateToFullScreenButton()), self.customContextMenu_do && self.customContextMenu_do.updateFullScreenButton(1);
                var e = FWDUVPUtils.getScrollOffsets();
                self.lastX = e.x, self.lastY = e.y, window.scrollTo(0, 0), self.isMobile_bl && window.addEventListener("touchmove", self.disableFullScreenOnMobileHandler), self.dispatchEvent(FWDUVPlayer.GO_FULLSCREEN), self.resizeHandler()
            }
        }, this.disableFullScreenOnMobileHandler = function(e) {
            e.preventDefault && e.preventDefault()
        }, this.goNormalScreen = function() {
            self.isAPIReady_bl && (document.cancelFullScreen ? document.cancelFullScreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitCancelFullScreen ? document.webkitCancelFullScreen() : document.msExitFullscreen && document.msExitFullscreen(), self.disableClick(), self.addMainDoToTheOriginalParent(), self.isFullScreen_bl = !1)
        }, this.addMainDoToTheOriginalParent = function() {
            self.isFullScreen_bl && (document.removeEventListener && (document.removeEventListener("fullscreenchange", self.onFullScreenChange), document.removeEventListener("mozfullscreenchange", self.onFullScreenChange), document.removeEventListener("webkitfullscreenchange", self.onFullScreenChange), document.removeEventListener("MSFullscreenChange", self.onFullScreenChange)), self.callVastEvent("playerCollapse"), self.controller_do && self.controller_do.setNormalStateToFullScreenButton(), self.isEmbedded_bl || (self.displayType == FWDUVPlayer.RESPONSIVE || self.displayType == FWDUVPlayer.AFTER_PARENT || self.displayType == FWDUVPlayer.LIGHTBOX || self.displayType == FWDUVPlayer.STICKY ? (FWDUVPUtils.isIEAndLessThen9 ? document.documentElement.style.overflow = "auto" : document.documentElement.style.overflow = "visible", self.isMin ? (self.main_do.getStyle().position = "fixed", self.main_do.getStyle().zIndex = 9999999999999) : (self.main_do.getStyle().position = "relative", self.main_do.getStyle().zIndex = 0)) : (self.main_do.getStyle().position = "absolute", self.main_do.getStyle().zIndex = 9999999999998)), self.displayType != FWDUVPlayer.FULL_SCREEN && self.controller_do.enablePlaylistButton(), self.customContextMenu_do && self.customContextMenu_do.updateFullScreenButton(0), self.controller_do.showFullScreenButton(), window.scrollTo(self.lastX, self.lastY), self.showCursor(), self.resizeHandler(), setTimeout(function() {
                self.addMinOnScroll(), self.resizeHandler()
            }, 500), window.scrollTo(self.lastX, self.lastY), FWDUVPUtils.isIE || setTimeout(function() {
                window.scrollTo(self.lastX, self.lastY)
            }, 150), self.isMobile_bl && window.removeEventListener("touchmove", self.disableFullScreenOnMobileHandler), self.dispatchEvent(FWDUVPlayer.GO_NORMALSCREEN))
        }, this.onFullScreenChange = function(e) {
            document.fullScreen || document.msFullscreenElement || document.mozFullScreen || document.webkitIsFullScreen || document.msieFullScreen || (self.controller_do.showNormalScreenButton(), self.addMainDoToTheOriginalParent(), self.isFullScreen_bl = !1)
        }, this.loadPlaylist = function(e) {
            self.isAPIReady_bl && self.isPlaylistLoaded_bl && self.data.prevId != e && (self.data.playlist_ar && (self.videoNameGa = self.data.playlist_ar[self.id].gaStr, self.videoCat = self.data.cats_ar[self.catId].playlistName), self.catId = e, self.id = 0, self.catId < 0 ? self.catId = 0 : self.catId > self.data.totalPlaylists - 1 && (self.catId = self.data.totalPlaylists - 1), self.useDeepLinking_bl ? FWDUVPAddress.setValue("?playlistId=" + self.catId + "&videoId=" + self.id) : self.loadInternalPlaylist())
        }, this.playNext = function() {
            self.isAPIReady_bl && self.isPlaylistLoaded_bl && (self.data.playlist_ar && (self.videoNameGa = self.data.playlist_ar[self.id].gaStr, self.videoCat = self.data.cats_ar[self.catId].playlistName), self.id++, self.id < 0 ? self.id = self.totalVideos - 1 : self.id > self.totalVideos - 1 && (self.id = 0), self.useDeepLinking_bl ? FWDUVPAddress.setValue("?playlistId=" + self.catId + "&videoId=" + self.id) : (self.isThumbClick_bl = !0, self.updateAds(0, !0)))
        }, this.playPrev = function() {
            self.isAPIReady_bl && self.isPlaylistLoaded_bl && (self.data.playlist_ar && (self.videoNameGa = self.data.playlist_ar[self.id].gaStr, self.videoCat = self.data.cats_ar[self.catId].playlistName), self.id--, self.id < 0 ? self.id = self.totalVideos - 1 : self.id > self.totalVideos - 1 && (self.id = 0), self.useDeepLinking_bl ? FWDUVPAddress.setValue("?playlistId=" + self.catId + "&videoId=" + self.id) : (self.isThumbClick_bl = !0, self.updateAds(0, !0)))
        }, this.playShuffle = function() {
            if (self.isAPIReady_bl && self.isPlaylistLoaded_bl) {
                self.data.playlist_ar && (self.videoNameGa = self.data.playlist_ar[self.id].gaStr, self.videoCat = self.data.cats_ar[self.catId].playlistName);
                for (var e = parseInt(Math.random() * self.totalVideos); e == self.id;) e = parseInt(Math.random() * self.totalVideos);
                self.id = e, self.id < 0 ? self.id = self.totalVideos - 1 : self.id > self.totalVideos - 1 && (self.id = 0), self.useDeepLinking_bl ? FWDUVPAddress.setValue("?playlistId=" + self.catId + "&videoId=" + self.id) : (self.isThumbClick_bl = !0, self.updateAds(0, !0))
            }
        }, this.playVideo = function(e) {
            self.isAPIReady_bl && self.isPlaylistLoaded_bl && (self.data.playlist_ar && (self.videoNameGa = self.data.playlist_ar[self.id].gaStr, self.videoCat = self.data.cats_ar[self.catId].playlistName), self.id = e, self.id < 0 ? self.id = self.totalVideos - 1 : self.id > self.totalVideos - 1 && (self.id = 0), self.useDeepLinking_bl ? FWDUVPAddress.setValue("?playlistId=" + self.catId + "&videoId=" + self.id) : (self.updateAds(0, !0), self.isMobile_bl && self.videoType_str == FWDUVPlayer.VIDEO && self.play(), self.isMobile_bl || self.play()))
        }, this.setVideoSource = function(e, t, o) {
            self.isAdd_bl = !1;
            self.isLive = o, self.setSource(e, !1, t)
        }, this.downloadVideo = function(e) {
            var t;
            null == e && (e = self.id);
            var o = self.data.playlist_ar[e].videoSource[self.data.playlist_ar[self.id].startAtVideo].source; - 1 != String(o.indexOf("encrypt:")) && (o = atob(o.substr(8))), t = -1 != o.indexOf("/") ? o.substr(o.lastIndexOf("/") + 1) : o;
            var s = "videoName:" + self.data.playlist_ar[self.id].gaStr;
            window.ga && ga("send", {
                hitType: "event",
                eventCategory: self.data.cats_ar[self.catId].playlistName,
                eventAction: "downloaded",
                eventLabel: s,
                nonInteraction: !0
            }), self.data.downloadVideo(o, t)
        }, this.share = function() {
            self.isAPIReady_bl && self.controllerShareHandler()
        }, this.getVideoSource = function() {
            if (self.isAPIReady_bl) return self.finalVideoPath_str
        }, this.getPosterSource = function() {
            if (self.isAPIReady_bl) return self.posterPath_str
        }, this.getPlaylistId = function() {
            return self.catId
        }, this.getVideoId = function() {
            return self.id
        }, this.getCurrentTime = function(e) {
            var t;
            return e || (e = "text"), "seconds" == e ? (t = self.curTimeInSecond, self.isCasting && (t = self.cc.getCurrentTime())) : (t = self.curTime ? self.curTime : "00:00", self.isCasting && (t = FWDUVPUtils.formatTime(self.cc.getCurrentTime()))), t
        }, this.getTotalTime = function(e) {
            var t;
            return e || (e = "text"), "seconds" == e ? (t = Math.round(self.totalTimeInSeconds), self.isCasting && (t = self.cc.getDuration())) : (t = self.totalTime ? self.totalTime : "00:00", self.isCasting && (t = FWDUVPUtils.formatTime(self.cc.getDuration()))), t
        }, this.setPlaybackRate = function(e) {
            self.isAPIReady_bl && (self.videoType_str == FWDUVPlayer.VIDEO && self.videoScreen_do ? self.videoScreen_do.setPlaybackRate(e) : self.videoType_str == FWDUVPlayer.YOUTUBE ? self.ytb_do.setPlaybackRate(e) : self.videoType_str == FWDUVPlayer.MP3 && self.audioScreen_do.setPlaybackRate(e))
        }, this.showLightbox = function() {
            self.lightBox_do && self.lightBox_do.show()
        }, this.fillEntireVideoScreen = function(e) {
            this.fillEntireVideoScreen_bl = e, this.resizeHandler()
        }, this.updateHEXColors = function(e, t) {
            self.isAPIReady_bl && (self.controller_do.updateHEXColors(e, t), self.largePlayButton_do && self.largePlayButton_do.updateHEXColors(e, "#FFFFFF"), self.shareWindow_do && self.shareWindow_do.updateHEXColors(e, t), self.embedWindow_do && (-1 != self.skinPath_str.indexOf("hex_white") ? self.embedWindow_do.updateHEXColors(e, "#FFFFFF") : self.embedWindow_do.updateHEXColors(e, t)), self.annotations_do && self.annotations_do.updateHEXColors(e, t), self.adsSkip_do && self.adsSkip_do.updateHEXColors(e, t), self.categories_do && self.categories_do.updateHEXColors(e, t), self.playlist_do && self.playlist_do.updateHEXColors(e, t), self.data.setYoutubePlaylistHEXColor(e), self.popupAds_do && self.popupAds_do.updateHEXColors(e, "#FFFFFF"), self.adsStart_do && self.adsStart_do.updateHEXColors(e, t))
        }, this.hideCursor = function() {
            document.documentElement.style.cursor = "none", document.getElementsByTagName("body")[0].style.cursor = "none", self.isAdd_bl || (self.dumyClick_do.getStyle().cursor = "none")
        }, this.showCursor = function() {
            document.documentElement.style.cursor = "auto", document.getElementsByTagName("body")[0].style.cursor = "auto", self.isAdd_bl ? self.dumyClick_do.setButtonMode(!0) : self.is360 ? self.dumyClick_do.getStyle().cursor = "url(" + self.data.handPath_str + "), default" : self.dumyClick_do.getStyle().cursor = "auto"
        }, this.showPlayer = function() {
            self.isAPIReady_bl && (self.isShowed_bl = !0, self.opener_do.showCloseButton(), self.setStageContainerFinalHeightAndPosition(self.animate_bl), self.isMin && (self.isMinShowed = !0, self.positionOnMin(!0)))
        }, this.hidePlayer = function() {
            self.isAPIReady_bl && (self.isShowed_bl = !1, self.opener_do.showOpenButton(), self.setStageContainerFinalHeightAndPosition(self.animate_bl), self.isMin && (self.isMinShowed = !1, self.positionOnMin(!0)))
        }, this.getStartTimeStamp = function(e) {
            var t = window.location.href; - 1 != (t = t.substr(t.indexOf(e + "=") + 2)).indexOf("&") && (t = t.substr(0, t.indexOf("&"))), -1 != t.indexOf("s&") && (t = t.substr(0, t.indexOf("s&") + 1));
            var o = /\d+h/g,
                s = t.match(o);
            try {
                s = t.match(o)[0]
            } catch (e) {}
            s && (1 == (s = s.substr(0, s.length - 1)).length && parseInt(s) < 10 && (s = "0" + s), 59 < parseInt(s) && (s = 59)), s = s || "00";
            o = /h\d+m/g;
            var i = t.match(o);
            try {
                i = t.match(o)[0].substr(1)
            } catch (e) {}
            i && (1 == (i = i.substr(0, i.length - 1)).length && parseInt(i) < 10 && (i = "0" + i), 59 < parseInt(i) && (i = 59)), i = i || "00";
            o = /\d+s/g;
            var n = t.match(o);
            try {
                n = t.match(o)[0]
            } catch (e) {}
            return n && (1 == (n = n.substr(0, n.length - 1)).length && parseInt(n) < 10 && (n = "0" + n), 59 < parseInt(n) && (n = 59)), s + ":" + i + ":" + (n = n || "00")
        }, this.addListener = function(e, t) {
            if (null == e) throw Error("type is required.");
            if ("object" == typeof e) throw Error("type must be of type String.");
            if ("function" != typeof t) throw Error("listener must be of type Function.");
            var o = {};
            o.type = e, o.listener = t, (o.target = this).listeners.events_ar.push(o)
        }, this.dispatchEvent = function(e, t) {
            if (null != this.listeners) {
                if (null == e) throw Error("type is required.");
                if ("object" == typeof e) throw Error("type must be of type String.");
                for (var o = 0, s = this.listeners.events_ar.length; o < s; o++)
                    if (this.listeners.events_ar[o].target === this && this.listeners.events_ar[o].type === e) {
                        if (t)
                            for (var i in t) this.listeners.events_ar[o][i] = t[i];
                        this.listeners.events_ar[o].listener.call(this, this.listeners.events_ar[o])
                    }
            }
        }, this.removeListener = function(e, t) {
            if (null == e) throw Error("type is required.");
            if ("object" == typeof e) throw Error("type must be of type String.");
            if ("function" != typeof t) throw Error("listener must be of type Function." + e);
            for (var o = 0, s = this.listeners.events_ar.length; o < s; o++)
                if (this.listeners.events_ar[o].target === this && this.listeners.events_ar[o].type === e && this.listeners.events_ar[o].listener === t) {
                    this.listeners.events_ar.splice(o, 1);
                    break
                }
        }, this.callVastEvent = function(e) {
            if (self.TrackingEvents) {
                for (var t, o = 0; o < self.TrackingEvents.length; o++) e == self.TrackingEvents[o].event && (t = self.TrackingEvents[o].URI);
                t && self.executeVastEvent(t)
            }
        }, this.executeVastEvent = function(e) {
            if (e) {
                var t = new XMLHttpRequest;
                t.onreadystatechange = function(e) {}, t.onerror = function(e) {
                    try {
                        window.console && console.log(e), window.console && console.log(e.message)
                    } catch (e) {}
                }, t.open("get", e, !0), t.send()
            }
        }, self.cleanMainEvents = function() {
            window.removeEventListener ? window.removeEventListener("resize", self.onResizeHandler) : window.detachEvent && window.detachEvent("onresize", self.onResizeHandler), clearTimeout(self.resizeHandlerId_to), clearTimeout(self.resizeHandler2Id_to), clearTimeout(self.hidePreloaderId_to), clearTimeout(self.orientationChangeId_to)
        };
        var args = FWDUVPUtils.getUrlArgs(window.location.search),
            embedTest = args.RVPInstanceName,
            instanceName = args.RVPInstanceName;
        if (embedTest && (self.isEmbedded_bl = props.instanceName == instanceName), self.isEmbedded_bl) {
            var ws = FWDUVPUtils.getViewportSize();
            self.embeddedPlaylistId = parseInt(args.RVPPlaylistId), self.embeddedVideoId = parseInt(args.RVPVideoId);
            var dumy_do = new FWDUVPDisplayObject("div");
            dumy_do.setBkColor(props.backgroundColor), dumy_do.setWidth(ws.w), dumy_do.setHeight(ws.h), document.documentElement.style.overflow = "hidden", document.getElementsByTagName("body")[0].style.overflow = "hidden", FWDUVPUtils.isIEAndLessThen9 ? document.getElementsByTagName("body")[0].appendChild(dumy_do.screen) : document.documentElement.appendChild(dumy_do.screen)
        }
        self.init()
    },
    rfa, sfa, tfa, ufa;
FWDUVPlayer.setPrototype = function() {
    FWDUVPlayer.prototype = new FWDUVPEventDispatcher
}, FWDUVPlayer.stopAllVideos = function(e) {
    for (var t, o = FWDUVPlayer.instaces_ar.length, s = 0; s < o; s++)(t = FWDUVPlayer.instaces_ar[s]) != e && t.stop()
}, FWDUVPlayer.pauseAllVideos = function(e) {
    for (var t, o = FWDUVPlayer.instaces_ar.length, s = 0; s < o; s++)(t = FWDUVPlayer.instaces_ar[s]) != e && t.pause()
}, FWDUVPlayer.hasHTML5VideoTestIsDone = !1, FWDUVPlayer.hasHTML5VideoTestIsDone || (FWDUVPlayer.hasHTML5Video = (rfa = document.createElement("video"), sfa = !1, rfa.canPlayType && (sfa = Boolean("probably" == rfa.canPlayType("video/mp4") || "maybe" == rfa.canPlayType("video/mp4")), FWDUVPlayer.canPlayMp4 = Boolean("probably" == rfa.canPlayType("video/mp4") || "maybe" == rfa.canPlayType("video/mp4")), FWDUVPlayer.canPlayOgg = Boolean("probably" == rfa.canPlayType("video/ogg") || "maybe" == rfa.canPlayType("video/ogg")), FWDUVPlayer.canPlayWebm = Boolean("probably" == rfa.canPlayType("video/webm") || "maybe" == rfa.canPlayType("video/webm"))), !!self.isMobile_bl || (FWDUVPlayer.hasHTML5VideoTestIsDone = !0, sfa))), FWDUVPlayer.hasCanvas = Boolean(document.createElement("canvas")), FWDUVPlayer.instaces_ar = [], FWDUVPlayer.hasHTMLHLS = (tfa = document.createElement("video"), ufa = !1, tfa.canPlayType && (ufa = Boolean("probably" === tfa.canPlayType("application/vnd.apple.mpegurl") || "maybe" === tfa.canPlayType("application/vnd.apple.mpegurl"))), ufa), FWDUVPlayer.areMainInstancesInitialized_bl = !1, FWDUVPlayer.curInstance = null, FWDUVPlayer.keyboardCurInstance = null, FWDUVPlayer.isYoutubeAPICreated_bl = !1, FWDUVPlayer.HLS_JS = "HLS", FWDUVPlayer.PAUSE_ALL_VIDEOS = "pause", FWDUVPlayer.STOP_ALL_VIDEOS = "stop", FWDUVPlayer.DO_NOTHING = "none", FWDUVPlayer.YOUTUBE = "youtube", FWDUVPlayer.VIMEO = "vimeo", FWDUVPlayer.VIDEO = "video", FWDUVPlayer.atLeastOnePlayerHasDeeplinking_bl = !1, FWDUVPlayer.MP3 = "mp3", FWDUVPlayer.CENTER = "center", FWDUVPlayer.RIGHT = "right", FWDUVPlayer.LEFT = "left", FWDUVPlayer.POSITION_BOTTOM = "bottom", FWDUVPlayer.POSITION_TOP = "top", FWDUVPlayer.HIDE_LIGHTBOX_COMPLETE = "lightboxHideComplete", FWDUVPlayer.START_TO_LOAD_PLAYLIST = "startToLoadPlaylist", FWDUVPlayer.LOAD_PLAYLIST_COMPLETE = "loadPlaylistComplete", FWDUVPlayer.READY = "ready", FWDUVPlayer.STOP = "stop", FWDUVPlayer.PLAY = "play", FWDUVPlayer.PAUSE = "pause", FWDUVPlayer.UPDATE = "update", FWDUVPlayer.UPDATE_TIME = "updateTime", FWDUVPlayer.UPDATE_VIDEO_SOURCE = "updateVideoSource", FWDUVPlayer.UPDATE_POSTER_SOURCE = "udpatePosterSource", FWDUVPlayer.ERROR = "error", FWDUVPlayer.PLAY_COMPLETE = "playComplete", FWDUVPlayer.VOLUME_SET = "volumeSet", FWDUVPlayer.GO_FULLSCREEN = "goFullScreen", FWDUVPlayer.GO_NORMALSCREEN = "goNormalScreen", FWDUVPlayer.IMAGE = "image", FWDUVPlayer.HLS_JS = "hls_flash", FWDUVPlayer.SAFE_TO_SCRUB = "safeToScrub", FWDUVPlayer.LIGHTBOX = "lightbox", FWDUVPlayer.STICKY = "sticky", FWDUVPlayer.RESPONSIVE = "responsive", FWDUVPlayer.FULL_SCREEN = "fullscreen", FWDUVPlayer.AFTER_PARENT = "afterparent", window.FWDUVPlayer = FWDUVPlayer
}(window),
function(e) {
var a = function(o, e, t, s, i, n) {
    var l = this;
    a.prototype;
    this.mainLightBox_do = null, this.lightBoxBackground_sdo = null, this.lightBoxGridHolder_do = null, this.closeButton_do = null, this.mainBackgroundColor_str = e, this.holderBackgroundColor_str = t, this.lightBoxBackgroundOpacity = s, this.lightBoxWidth = i, this.lightBoxHeight = n, this.setupButtonWithDelayId_to, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.closeButtonIsTweening_bl = !0, this.init = function() {
        l.getStyle().zIndex = 9999999, l.setupMainContainers()
    }, this.setupMainContainers = function() {
        l.isMobile_bl && l.hasPointerEvent_bl && (l.getStyle().msTouchAction = "none"), l.lightBoxBackground_sdo = new FWDUVPDisplayObject("div"), l.lightBoxBackground_sdo.setResizableSizeAfterParent(), l.lightBoxBackground_sdo.setBkColor(l.mainBackgroundColor_str), l.lightBoxBackground_sdo.screen.addEventListener("click", l.closeButtonOnStartHandler), l.addChild(l.lightBoxBackground_sdo), l.mainLightBox_do = new FWDUVPDisplayObject("div"), l.mainLightBox_do.setBkColor(l.holderBackgroundColor_str), l.mainLightBox_do.setWidth(1), l.mainLightBox_do.setHeight(1), l.addChild(l.mainLightBox_do), document.documentElement.appendChild(l.screen), l.setX(-1e4), l.setY(-1e4), l.setWidth(0), l.setHeight(0)
    }, this.show = function() {
        if (!l.isShowed_bl) {
            l.isShowed_bl = !0, l.closeButton_do ? (l.hideCloseButton(!1), l.showCloseButton(!0), l.closeButton_do.setX(-200)) : l.loadClsoeButtonImage();
            var e = FWDUVPUtils.getViewportSize(),
                t = FWDUVPUtils.getScrollOffsets();
            l.setWidth(e.w), l.setHeight(e.h), l.setX(t.x), l.setY(t.y), l.lightBoxBackground_sdo.setAlpha(0), FWDAnimation.to(l.lightBoxBackground_sdo, .8, {
                alpha: l.lightBoxBackgroundOpacity
            }), l.setX(t.x), l.setY(t.y), l.mainLightBox_do.setX(parseInt(e.w / 2)), l.mainLightBox_do.setY(parseInt(e.h / 2)), l.lightBoxWidth > e.w ? (l.finalLightBoxWidth = e.w, l.finalLightBoxHeight = parseInt(l.lightBoxHeight * (e.w / l.lightBoxWidth))) : (l.finalLightBoxWidth = l.lightBoxWidth, l.finalLightBoxHeight = l.lightBoxHeight), FWDAnimation.to(l.mainLightBox_do, .8, {
                w: l.finalLightBoxWidth,
                h: l.finalLightBoxHeight,
                x: parseInt((e.w - l.finalLightBoxWidth) / 2),
                y: parseInt((e.h - l.finalLightBoxHeight) / 2),
                delay: .4,
                onComplete: l.showComplete,
                ease: Expo.easeInOut
            }), o.stageContainer = l.mainLightBox_do.screen, o.main_do && (o.main_do.setX(-5e3), o.stageContainer.contains(o.main_do.screen) || o.stageContainer.appendChild(o.main_do.screen)), l.dispatchEvent(a.SHOW)
        }
    }, this.showComplete = function() {
        l.closeButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, l.closeButtonOnStartHandler), l.addKeyboardSupport(), o.startResizeHandler()
    }, this.addKeyboardSupport = function() {
        document.addEventListener("keydown", this.onKeyDownHandler)
    }, this.onKeyDownHandler = function(e) {
        27 == e.keyCode && l.closeButtonOnStartHandler()
    }, this.loadClsoeButtonImage = function() {
        l.closeN_img = new Image, l.closeN_img.onload = l.setupCloseButton, l.closeN_img.src = o.mainFolderPath_str + o.skinPath_str + "embed-close-button.png", l.closeSPath_str = o.mainFolderPath_str + o.skinPath_str + "embed-close-button-over.png"
    }, this.setupCloseButton = function(e) {
        var t = FWDUVPUtils.getViewportSize();
        FWDUVPSimpleButton.setPrototype(), l.closeButton_do = new FWDUVPSimpleButton(l.closeN_img, l.closeSPath_str, void 0, !0), l.hideCloseButton(!1), l.showCloseButton(!0), l.closeButton_do.setX(t.w - l.closeButton_do.w - 4), l.closeButton_do.setY(4), l.addChild(l.closeButton_do)
    }, this.showCloseButtonComplete = function() {
        l.closeButtonIsTweening_bl = !1
    }, this.hideCloseButton = function(e) {
        FWDAnimation.killTweensOf(l.closeButton_do), e ? FWDAnimation.to(l.closeButton_do, .9, {
            alpha: 0
        }) : l.closeButton_do.setAlpha(0)
    }, this.showCloseButton = function(e) {
        FWDAnimation.killTweensOf(l.closeButton_do), e ? FWDAnimation.to(l.closeButton_do, .9, {
            alpha: 1,
            delay: .8
        }) : l.closeButton_do.setAlpha(1)
    }, this.mouseDummyHandler = function(e) {
        if (!e.preventDefault) return !1;
        e.preventDefault()
    }, this.closeButtonOnStartHandler = function(e) {
        if (l.isShowed_bl) {
            l.isShowed_bl = !1;
            var t = FWDUVPUtils.getViewportSize();
            l.closeButton_do.removeListener(FWDUVPSimpleButton.MOUSE_UP, l.closeButtonOnStartHandler), FWDAnimation.to(l.closeButton_do, .9, {
                alpha: 0
            }), FWDAnimation.to(l.mainLightBox_do, .8, {
                w: 0,
                h: 0,
                x: parseInt(t.w / 2),
                y: parseInt(t.h / 2),
                delay: .4,
                ease: Expo.easeInOut
            }), FWDAnimation.to(l.lightBoxBackground_sdo, .8, {
                alpha: 0,
                delay: .8
            }), FWDAnimation.to(o.main_do, .8, {
                x: -o.main_do.w / 2,
                y: -o.main_do.h / 2,
                ease: Expo.easeInOut,
                delay: .4
            }), l.lighboxAnimDoneId_to = setTimeout(l.lighboxHideAnimationDone, 1600), l.dispatchEvent(a.CLOSE)
        }
    }, this.lighboxHideAnimationDone = function() {
        l.setX(-1e4), l.setY(-1e4), l.setWidth(0), l.setHeight(0), l.dispatchEvent(a.HIDE_COMPLETE)
    }, this.init()
};
a.setPrototype = function() {
    a.prototype = new FWDUVPDisplayObject("div")
}, a.CLOSE = "ligtBoxClose", a.SHOW = "show", a.HIDE_COMPLETE = "hideComplete", a.prototype = null, e.FWDUVPLightBox = a
}(window),
function(n) {
var l = function(e, t, o, s) {
    var i = this;
    l.prototype;
    this.img_img = null, this.logoImage_do = null, this.position_str = o, this.source_str = t, this.logoLink_str = e.data.logoLink_str, this.margins = s, this.isShowed_bl = !0, this.allowToShow_bl = !0, this.init = function() {
        "none" == i.logoLink_str ? i.getStyle().pointerEvents = "none" : (i.setButtonMode(!0), i.screen.onclick = function() {
            n.open(i.logoLink_str, "_blank")
        }), i.logoImage_do = new FWDUVPDisplayObject("img"), i.img_img = new Image, i.img_img.onerror = null, i.img_img.onload = i.loadDone, i.img_img.src = i.source_str + "?" + (new Date).getTime(), i.hide()
    }, this.loadDone = function() {
        i.setWidth(i.img_img.width), i.setHeight(i.img_img.height), i.logoImage_do.setScreen(i.img_img), i.addChild(i.logoImage_do), i.logoImage_do.setWidth(i.img_img.width), i.logoImage_do.setHeight(i.img_img.height), i.positionAndResize()
    }, this.positionAndResize = function() {
        e.tempVidStageWidth && ("topleft" == i.position_str ? (i.finalX = i.margins, i.finalY = i.margins) : "topright" == i.position_str ? (i.finalX = e.tempVidStageWidth - i.w - i.margins, i.finalY = i.margins) : "bottomright" == i.position_str ? (i.finalX = e.tempVidStageWidth - i.w - i.margins, i.finalY = e.tempVidStageHeight - i.h - i.margins) : "bottomleft" == i.position_str && (i.finalX = i.margins, i.finalY = e.tempVidStageHeight - i.h - i.margins), i.setX(i.finalX), i.setY(i.finalY))
    }, this.show = function(e) {
        i.isShowed_bl || (i.isShowed_bl = !0, i.setVisible(!0), FWDAnimation.killTweensOf(i), e ? FWDAnimation.to(i, .8, {
            alpha: 1,
            ease: Expo.easeInOut
        }) : i.setAlpha(1))
    }, this.hide = function(e, t) {
        (i.isShowed_bl || t) && (i.isShowed_bl = !1, FWDAnimation.killTweensOf(i), e ? FWDAnimation.to(i, .8, {
            alpha: 0,
            ease: Expo.easeInOut,
            onComplete: function() {
                i.setVisible(!1)
            }
        }) : (i.setAlpha(0), i.setVisible(!1)))
    }, this.init()
};
l.setPrototype = function() {
    l.prototype = new FWDUVPDisplayObject("div")
}, l.prototype = null, n.FWDUVPLogo = l
}(window),
function() {
var i = function(e, t, o) {
    var s = this;
    this.animation_img = e.openerAnimation_img, t == FWDUVPlayer.POSITION_TOP ? (this.openN_img = e.openTopN_img, this.openSPath_str = e.openTopSPath_str) : (this.openN_img = e.openBottomN_img, this.openSPath_str = e.openBottomSPath_str), this.openerPauseN_img = e.openerPauseN_img, this.openerPlayN_img = e.openerPlayN_img, this.closeN_img = e.closeN_img, s.useHEXColorsForSkin_bl = e.useHEXColorsForSkin_bl, s.normalButtonsColor_str = e.normalButtonsColor_str, s.selectedButtonsColor_str = e.selectedButtonsColor_str, this.openerPauseS_str = e.openerPauseS_str, this.openerPlaySPath_str = e.openerPlayS_str, this.closeSPath_str = e.closeSPath_str, this.animationPath_img = e.animationPath_img;
    try {
        this.totalWidth = s.openN_img.width, this.totalHeight = s.openN_img.height
    } catch (e) {}
    this.mainHolder_do = null, this.dumy_do = null, this.openN_do = null, this.openS_do = null, this.closeN_do = null, this.closeS_do = null, this.animation_do = null, this.playPauseButton_do = null, this.position_str = t, this.alignment_str = e.openerAlignment_str, this.openerEqulizerOffsetLeft = e.openerEqulizerOffsetLeft, this.openerEqulizerOffsetTop = e.openerEqulizerOffsetTop, this.showFirstTime_bl = !0, this.playerIsShowed_bl = o, this.showOpenerPlayPauseButton_bl = e.showOpenerPlayPauseButton_bl, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.init = function() {
        -1 != e.skinPath_str.indexOf("hex_white") ? s.selectedButtonsColor_str = "#FFFFFF" : s.selectedButtonsColor_str = e.selectedButtonsColor_str, s.hasTransform3d_bl = !1, s.hasTransform2d_bl = !1, s.setBackfaceVisibility(), s.getStyle().msTouchAction = "none", s.getStyle().webkitTapHighlightColor = "rgba(0, 0, 0, 0)", s.setupStuff(), s.showOpenerPlayPauseButton_bl && s.setupPlayPauseButton(), s.playerIsShowed_bl && s.showCloseButton(), s.showOpenerPlayPauseButton_bl ? s.setWidth(s.totalWidth + s.openerPauseN_img.width + 1) : s.setWidth(s.totalWidth), s.setHeight(s.totalHeight)
    }, this.setupStuff = function(e) {
        s.mainHolder_do = new FWDUVPDisplayObject("div"), s.mainHolder_do.hasTransform3d_bl = !1, s.mainHolder_do.hasTransform2d_bl = !1, s.mainHolder_do.setBackfaceVisibility(), s.showOpenerPlayPauseButton_bl ? s.mainHolder_do.setWidth(s.totalWidth + s.openerPauseN_img.width + 1) : s.mainHolder_do.setWidth(s.totalWidth), s.mainHolder_do.setHeight(s.totalHeight), s.useHEXColorsForSkin_bl ? (s.openN_do = new FWDUVPDisplayObject("div"), s.openN_canvas = FWDUVPUtils.getCanvasWithModifiedColor(s.openN_img, s.normalButtonsColor_str).canvas, s.openN_do.screen.appendChild(s.openN_canvas)) : (s.openN_do = new FWDUVPDisplayObject("img"), s.openN_do.setScreen(s.openN_img)), s.openN_do.setWidth(s.openN_img.width), s.openN_do.setHeight(s.openN_img.height), s.openS_img = new Image, s.openS_img.src = s.openSPath_str, s.useHEXColorsForSkin_bl ? (s.openS_do = new FWDUVPDisplayObject("div"), s.openS_img.onload = function() {
            s.openS_canvas = FWDUVPUtils.getCanvasWithModifiedColor(s.openS_img, s.selectedButtonsColor_str).canvas, s.openS_do.setWidth(s.openS_img.width), s.openS_do.setHeight(s.openS_img.height), s.openS_do.screen.appendChild(s.openS_canvas)
        }) : (s.openS_do = new FWDUVPDisplayObject("img"), s.openS_do.setScreen(s.openS_img)), s.openS_do.setWidth(s.openN_do.w), s.openS_do.setHeight(s.openN_do.h), s.openS_do.setAlpha(0), s.useHEXColorsForSkin_bl ? (s.closeN_do = new FWDUVPDisplayObject("div"), s.closeN_canvas = FWDUVPUtils.getCanvasWithModifiedColor(s.closeN_img, s.normalButtonsColor_str).canvas, s.closeN_do.screen.appendChild(s.closeN_canvas)) : (s.closeN_do = new FWDUVPDisplayObject("img"), s.closeN_do.setScreen(s.closeN_img)), s.closeN_do.setWidth(s.closeN_img.width), s.closeN_do.setHeight(s.closeN_img.height), s.closeN_do.hasTransform3d_bl = !1, s.closeN_do.hasTransform2d_bl = !1, s.closeN_do.setBackfaceVisibility(), s.closeS_img = new Image, s.closeS_img.src = s.closeSPath_str, s.useHEXColorsForSkin_bl ? (s.closeS_do = new FWDUVPDisplayObject("div"), s.closeS_img.onload = function() {
            s.closeS_canvas = FWDUVPUtils.getCanvasWithModifiedColor(s.closeS_img, s.selectedButtonsColor_str).canvas, s.closeS_do.setWidth(s.closeN_img.width), s.closeS_do.setHeight(s.closeN_img.height), s.closeS_do.screen.appendChild(s.closeS_canvas)
        }) : (s.closeS_do = new FWDUVPDisplayObject("img"), s.closeS_do.setScreen(s.closeS_img)), s.closeS_do.setWidth(s.closeN_img.width), s.closeS_do.setHeight(s.closeN_img.height), s.closeS_do.setAlpha(0), s.closeS_do.hasTransform3d_bl = !1, s.closeS_do.hasTransform2d_bl = !1, FWDUVPPreloader2.setPrototype(), s.animation_do = new FWDUVPPreloader2(s.animationPath_img, 29, 22, 31, 80, !0), s.animation_do.setY(s.openerEqulizerOffsetTop), s.animation_do.show(!1), s.animation_do.stop(), s.dumy_do = new FWDUVPDisplayObject("div"), s.dumy_do.setWidth(s.totalWidth), s.dumy_do.setHeight(s.totalHeight), s.dumy_do.getStyle().zIndex = 2, s.dumy_do.hasTransform3d_bl = !1, s.dumy_do.hasTransform2d_bl = !1, s.dumy_do.setBackfaceVisibility(), s.dumy_do.setButtonMode(!0), (FWDUVPUtils.isIE || FWDUVPUtils.isAndroid) && (s.dumy_do.setBkColor("#FF0000"), s.dumy_do.setAlpha(.01)), s.hasPointerEvent_bl ? (s.mainHolder_do.screen.addEventListener("pointerup", s.onMouseUp), s.mainHolder_do.screen.addEventListener("pointerover", s.onMouseOver), s.mainHolder_do.screen.addEventListener("pointerout", s.onMouseOut)) : s.screen.addEventListener && (s.isMobile_bl || (s.mainHolder_do.screen.addEventListener("mouseover", s.onMouseOver), s.mainHolder_do.screen.addEventListener("mouseout", s.onMouseOut), s.mainHolder_do.screen.addEventListener("mouseup", s.onMouseUp)), s.screen.addEventListener("touchend", s.onMouseUp)), s.mainHolder_do.addChild(s.openN_do), s.mainHolder_do.addChild(s.openS_do), s.mainHolder_do.addChild(s.closeN_do), s.mainHolder_do.addChild(s.closeS_do), s.mainHolder_do.addChild(s.animation_do), s.mainHolder_do.addChild(s.dumy_do), s.addChild(s.mainHolder_do)
    }, s.showOpener = function(e) {}, this.onMouseOver = function(e, t) {
        e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE && "mouse" != e.pointerType || s.setSelectedState()
    }, this.onMouseOut = function(e) {
        e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE && "mouse" != e.pointerType || s.setNormalState()
    }, this.onMouseUp = function(e) {
        e.preventDefault && e.preventDefault(), s.playerIsShowed_bl ? (s.playerIsShowed_bl = !1, s.dispatchEvent(i.HIDE)) : (s.playerIsShowed_bl = !0, s.dispatchEvent(i.SHOW))
    }, this.setupPlayPauseButton = function() {
        FWDUVPComplexButton.setPrototype(), s.playPauseButton_do = new FWDUVPComplexButton(s.openerPlayN_img, s.openerPlaySPath_str, s.openerPauseN_img, s.openerPauseS_str, !0, s.useHEXColorsForSkin_bl, s.normalButtonsColor_str, s.selectedButtonsColor_str), s.playPauseButton_do.addListener(FWDUVPComplexButton.MOUSE_UP, s.playButtonMouseUpHandler), s.addChild(s.playPauseButton_do)
    }, this.showPlayButton = function() {
        s.playPauseButton_do && s.playPauseButton_do.setButtonState(1), s.animation_do.stop()
    }, this.showPauseButton = function() {
        s.playPauseButton_do && s.playPauseButton_do.setButtonState(0), s.animation_do.start(0)
    }, this.playButtonMouseUpHandler = function() {
        0 == s.playPauseButton_do.currentState ? s.dispatchEvent(FWDUVPController.PAUSE) : s.dispatchEvent(FWDUVPController.PLAY)
    }, this.setNormalState = function() {
        s.isMobile_bl && !s.hasPointerEvent_bl || (FWDAnimation.killTweensOf(s.openS_do), FWDAnimation.killTweensOf(s.closeS_do), FWDAnimation.to(s.openS_do, .5, {
            alpha: 0,
            ease: Expo.easeOut
        }), FWDAnimation.to(s.closeS_do, .5, {
            alpha: 0,
            ease: Expo.easeOut
        }))
    }, this.setSelectedState = function(e) {
        FWDAnimation.killTweensOf(s.openS_do), FWDAnimation.killTweensOf(s.closeS_do), FWDAnimation.to(s.openS_do, .5, {
            alpha: 1,
            ease: Expo.easeOut
        }), FWDAnimation.to(s.closeS_do, .5, {
            alpha: 1,
            ease: Expo.easeOut
        })
    }, this.showOpenButton = function() {
        s.playerIsShowed_bl = !1, s.closeN_do.setX(150), s.closeS_do.setX(150), s.playPauseButton_do ? "right" == s.alignment_str ? (s.playPauseButton_do.setX(0), s.openN_do.setX(s.playPauseButton_do.w + 1), s.openS_do.setX(s.playPauseButton_do.w + 1), s.dumy_do.setX(s.playPauseButton_do.w + 1), s.dumy_do.setWidth(s.totalWidth), s.animation_do.setX(s.playPauseButton_do.w + 1 + s.openerEqulizerOffsetLeft)) : (s.playPauseButton_do.setX(s.openN_do.w + 1), s.openN_do.setX(0), s.openS_do.setX(0), s.dumy_do.setX(0), s.dumy_do.setWidth(s.totalWidth), s.animation_do.setX(s.openerEqulizerOffsetLeft)) : (s.openN_do.setX(0), s.openS_do.setX(0), s.dumy_do.setX(0), s.dumy_do.setWidth(s.totalWidth), s.animation_do.setX(s.openerEqulizerOffsetLeft)), s.animation_do.setVisible(!0)
    }, this.showCloseButton = function() {
        s.playerIsShowed_bl = !0, s.openN_do.setX(150), s.openS_do.setX(150), s.dumy_do.setWidth(s.closeN_do.w), "right" == s.alignment_str ? s.playPauseButton_do ? (s.closeN_do.setX(s.totalWidth + 1), s.closeS_do.setX(s.totalWidth + 1), s.dumy_do.setX(s.totalWidth + 1)) : (s.closeN_do.setX(s.totalWidth - s.closeN_do.w), s.closeS_do.setX(s.totalWidth - s.closeN_do.w), s.dumy_do.setX(s.totalWidth - s.closeN_do.w)) : (s.closeN_do.setX(0), s.closeS_do.setX(0), s.dumy_do.setX(0)), s.playPauseButton_do && s.playPauseButton_do.setX(150), s.animation_do.setX(150), s.animation_do.setVisible(!1)
    }, this.hide = function() {
        s.mainHolder_do.setX(150)
    }, this.show = function() {
        s.mainHolder_do.setX(0)
    }, s.updateHEXColors = function(e, t) {
        s.normalColor_str = e, s.selectedColor_str = t, s.playPauseButton_do.updateHEXColors(e, t), FWDUVPUtils.changeCanvasHEXColor(s.openN_img, s.openN_canvas, e), FWDUVPUtils.changeCanvasHEXColor(s.closeN_img, s.closeN_canvas, e), FWDUVPUtils.changeCanvasHEXColor(s.openS_img, s.openS_canvas, t), FWDUVPUtils.changeCanvasHEXColor(s.closeS_img, s.closeS_canvas, t)
    }, this.init()
};
i.setPrototype = function() {
    i.prototype = new FWDUVPDisplayObject("div")
}, i.SHOW = "show", i.HIDE = "hise", i.PLAY = "play", i.PAUSE = "pause", i.prototype = null, window.FWDUVPOpener = i
}(window),
function(e) {
var t = function(e, s) {
    var i = this;
    t.prototype;
    this.adHolder_do = null, this.mainHolder_do = null, this.closeButton_do = null, this.buttons_ar = [], this.maxWidth = e.aopwWidth, this.maxHeight = e.aopwHeight + e.popwColseN_img.height + 1, this.stageWidth = 0, this.stageHeight = 0, this.aopwSource = e.aopwSource, this.aopwTitle = e.aopwTitle, this.aopwTitleColor_str = e.aopwTitleColor_str, this.aopwBorderSize = e.aopwBorderSize, this.isShowed_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.init = function() {
        i.setBackfaceVisibility(), i.mainBar_do = new FWDUVPDisplayObject("div"), i.bar_do = new FWDUVPDisplayObject("div"), i.bar_do.getStyle().background = "url('" + e.popwBarBackgroundPath_str + "')", i.adHolder_do = new FWDUVPDisplayObject("div"), i.adBk_do = new FWDUVPDisplayObject("div"), i.adBk_do.getStyle().background = "url('" + e.popwWindowBackgroundPath_str + "')", FWDUVPSimpleButton.setPrototype(), i.closeButton_do = new FWDUVPSimpleButton(e.popwColseN_img, e.popwColseSPath_str, void 0, !0, e.useHEXColorsForSkin_bl, e.normalButtonsColor_str, e.selectedButtonsColor_str), i.closeButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, i.closeButtonOnMouseUpHandler), i.title_do = new FWDUVPDisplayObject("div"), i.title_do.getStyle().width = "100%", i.title_do.getStyle().textAlign = "left", i.title_do.getStyle().fontFamily = "Arial", i.title_do.getStyle().fontSize = "14px", i.title_do.getStyle().fontWeight = "100", i.title_do.getStyle().color = i.aopwTitleColor_str, i.title_do.setInnerHTML(i.aopwTitle), i.bar_do.addChild(i.title_do), i.addChild(i.adBk_do), i.mainBar_do.addChild(i.bar_do), i.mainBar_do.addChild(i.closeButton_do), i.mainBar_do.setHeight(i.closeButton_do.h), i.addChild(i.mainBar_do), i.addChild(i.adHolder_do), i.bar_do.setHeight(i.mainBar_do.h)
    }, this.closeButtonOnMouseUpHandler = function() {
        i.isShowed_bl && (i.hide(), s.play())
    }, this.positionAndResize = function() {
        i.stageWidth = Math.min(s.tempVidStageWidth, i.maxWidth), i.stageHeight = Math.min(s.tempVidStageHeight, i.maxHeight);
        var e = 1,
            t = s.tempVidStageWidth / i.maxWidth,
            o = s.tempVidStageHeight / i.maxHeight;
        t < o ? e = t : o < t && (e = o), 1 < e && (e = 1), i.stageWidth = e * i.maxWidth, i.stageHeight = e * i.maxHeight, i.setWidth(i.stageWidth), i.setHeight(i.stageHeight), i.setHeight(i.stageHeight), i.setX(Math.round((s.tempVidStageWidth - i.stageWidth) / 2)), i.setY(Math.round((s.tempVidStageHeight - i.stageHeight) / 2)), i.mainBar_do.setWidth(i.stageWidth), i.closeButton_do.setX(i.stageWidth - i.closeButton_do.w), i.bar_do.setWidth(i.stageWidth - i.closeButton_do.w - 1), i.adBk_do.setWidth(i.stageWidth), i.adBk_do.setHeight(i.stageHeight - i.mainBar_do.h - 1), i.adBk_do.setY(i.mainBar_do.h + 1), i.adHolder_do.setWidth(i.stageWidth - 2 * i.aopwBorderSize), i.adHolder_do.setX(i.aopwBorderSize), i.adHolder_do.setY(i.mainBar_do.h + i.aopwBorderSize + 1), i.adHolder_do.setHeight(i.stageHeight - i.mainBar_do.h - 2 * i.aopwBorderSize - 1)
    }, this.show = function(e) {
        i.isShowed_bl || (i.isShowed_bl = !0, e && (i.aopwSource = e), s.main_do.addChild(i), i.adHolder_do.setInnerHTML("<iframe width='100%' height='100%' scrolling='no' frameBorder='0' src=" + i.aopwSource + "></iframe>"), i.positionAndResize(), i.title_do.setX(8), i.title_do.setY(Math.round((i.bar_do.h - i.title_do.getHeight()) / 2)))
    }, this.showCompleteHandler = function() {}, this.hide = function() {
        i.isShowed_bl && (i.isShowed_bl = !1, s.main_do.contains(i) && s.main_do.removeChild(i))
    }, this.hideCompleteHandler = function() {
        s.main_do.removeChild(i), i.dispatchEvent(t.HIDE_COMPLETE)
    }, this.updateHEXColors = function(e, t) {
        i.closeButton_do.updateHEXColors(e, t)
    }, this.init()
};
t.setPrototype = function() {
    t.prototype = new FWDUVPDisplayObject("div")
}, t.HIDE_COMPLETE = "hideComplete", t.prototype = null, e.FWDUVPOPWindow = t
}(window),
function(e) {
var o = function(e, t) {
    var s = this;
    o.prototype;
    this.xhr = null, this.passColoseN_img = e.passColoseN_img, this.privateVideoPassword_str = e.privateVideoPassword_str, this.bk_do = null, this.mainHolder_do = null, this.passMainHolder_do = null, this.passMainHolderBk_do = null, this.passMainLabel_do = null, this.passLabel_do = null, this.passInput_do = null, this.closeButton_do = null, this.embedWindowBackground_str = e.embedWindowBackground_str, this.secondaryLabelsColor_str = e.secondaryLabelsColor_str, this.inputColor_str = e.inputColor_str, this.mainLabelsColor_str = e.mainLabelsColor_str, this.passButtonNPath_str = e.passButtonNPath_str, this.passButtonSPath_str = e.passButtonSPath_str, this.inputBackgroundColor_str = e.inputBackgroundColor_str, this.borderColor_str = e.borderColor_str, this.maxTextWidth = 0, this.totalWidth = 0, this.stageWidth = 0, this.stageHeight = 0, this.buttonWidth = 28, this.buttonHeight = 19, this.embedWindowCloseButtonMargins = e.embedWindowCloseButtonMargins, this.finalEmbedPath_str = null, this.isShowed_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.init = function() {
        s.setBackfaceVisibility(), s.mainHolder_do = new FWDUVPDisplayObject("div"), s.mainHolder_do.hasTransform3d_bl = !1, s.mainHolder_do.hasTransform2d_bl = !1, s.mainHolder_do.setBackfaceVisibility(), s.bk_do = new FWDUVPDisplayObject("div"), s.bk_do.getStyle().width = "100%", s.bk_do.getStyle().height = "100%", s.bk_do.setAlpha(.9), s.bk_do.getStyle().background = "url('" + s.embedWindowBackground_str + "')", s.passMainHolder_do = new FWDUVPDisplayObject("div"), s.passMainHolderBk_do = new FWDUVPDisplayObject("div"), s.passMainHolderBk_do.getStyle().background = "url('" + s.embedWindowBackground_str + "')", s.passMainHolderBk_do.getStyle().borderStyle = "solid", s.passMainHolderBk_do.getStyle().borderWidth = "1px", s.passMainHolderBk_do.getStyle().borderColor = s.borderColor_str, s.passMainLabel_do = new FWDUVPDisplayObject("div"), s.passMainLabel_do.setBackfaceVisibility(), s.passMainLabel_do.getStyle().fontFamily = "Arial", s.passMainLabel_do.getStyle().fontSize = "12px", s.passMainLabel_do.getStyle().color = s.mainLabelsColor_str, s.passMainLabel_do.getStyle().whiteSpace = "nowrap", s.passMainLabel_do.getStyle().fontSmoothing = "antialiased", s.passMainLabel_do.getStyle().webkitFontSmoothing = "antialiased", s.passMainLabel_do.getStyle().textRendering = "optimizeLegibility", s.passMainLabel_do.getStyle().padding = "0px", s.passMainLabel_do.setInnerHTML("PRIVATE VIDEO"), s.passLabel_do = new FWDUVPDisplayObject("div"), s.passLabel_do.setBackfaceVisibility(), s.passLabel_do.getStyle().fontFamily = "Arial", s.passLabel_do.getStyle().fontSize = "12px", s.passLabel_do.getStyle().color = s.secondaryLabelsColor_str, s.passLabel_do.getStyle().whiteSpace = "nowrap", s.passLabel_do.getStyle().fontSmoothing = "antialiased", s.passLabel_do.getStyle().webkitFontSmoothing = "antialiased", s.passLabel_do.getStyle().textRendering = "optimizeLegibility", s.passLabel_do.getStyle().padding = "0px", s.passLabel_do.setInnerHTML("Please enter password:"), s.passInput_do = new FWDUVPDisplayObject("input"), s.passInput_do.setBackfaceVisibility(), s.passInput_do.getStyle().fontFamily = "Arial", s.passInput_do.getStyle().fontSize = "12px", s.passInput_do.getStyle().backgroundColor = s.inputBackgroundColor_str, s.passInput_do.getStyle().color = s.inputColor_str, s.passInput_do.getStyle().outline = 0, s.passInput_do.getStyle().whiteSpace = "nowrap", s.passInput_do.getStyle().fontSmoothing = "antialiased", s.passInput_do.getStyle().webkitFontSmoothing = "antialiased", s.passInput_do.getStyle().textRendering = "optimizeLegibility", s.passInput_do.getStyle().padding = "6px", s.passInput_do.getStyle().paddingTop = "4px", s.passInput_do.getStyle().paddingBottom = "4px", s.passInput_do.screen.setAttribute("type", "password"), FWDUVPSimpleSizeButton.setPrototype(), s.passButton_do = new FWDUVPSimpleSizeButton(s.passButtonNPath_str, s.passButtonSPath_str, s.buttonWidth, s.buttonHeight, e.useHEXColorsForSkin_bl, e.normalButtonsColor_str, e.selectedButtonsColor_str), s.passButton_do.addListener(FWDUVPSimpleSizeButton.MOUSE_UP, s.passClickHandler), s.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), s.closeButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<div class='table-fwduvp-button'><span class='table-cell-fwduvp-button icon-close'></span></div>", void 0, "UVPCloseButtonNormalState", "UVPCloseButtonSelectedState")) : (FWDUVPSimpleButton.setPrototype(), s.closeButton_do = new FWDUVPSimpleButton(s.passColoseN_img, e.embedWindowClosePathS_str, void 0, !0, e.useHEXColorsForSkin_bl, e.normalButtonsColor_str, e.selectedButtonsColor_str)), s.closeButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, s.closeButtonOnMouseUpHandler), s.addChild(s.mainHolder_do), s.mainHolder_do.addChild(s.bk_do), s.passMainHolder_do.addChild(s.passMainHolderBk_do), s.passMainHolder_do.addChild(s.passMainLabel_do), s.passMainHolder_do.addChild(s.passLabel_do), s.passMainHolder_do.addChild(s.passInput_do), s.passMainHolder_do.addChild(s.passButton_do), s.mainHolder_do.addChild(s.passMainHolder_do), s.mainHolder_do.addChild(s.closeButton_do)
    }, this.closeButtonOnMouseUpHandler = function() {
        s.isShowed_bl && s.hide()
    }, this.positionAndResize = function() {
        s.stageWidth = t.stageWidth, s.stageHeight = t.stageHeight, s.maxTextWidth = Math.min(s.stageWidth - 150, 300), s.totalWidth = s.maxTextWidth + s.buttonWidth, s.positionFinal(), s.closeButton_do.setX(s.stageWidth - s.closeButton_do.w - s.embedWindowCloseButtonMargins), s.closeButton_do.setY(s.embedWindowCloseButtonMargins), s.setWidth(s.stageWidth), s.setHeight(s.stageHeight), s.mainHolder_do.setWidth(s.stageWidth), s.mainHolder_do.setHeight(s.stageHeight)
    }, this.positionFinal = function() {
        var e, t, o = s.passLabel_do.getHeight();
        t = s.passMainLabel_do.getHeight(), s.passMainLabel_do.setX(16), s.passLabel_do.setX(16), s.passLabel_do.setY(t + 14), s.passInput_do.setX(10), s.passInput_do.setWidth(parseInt(s.totalWidth - 40 - s.buttonWidth)), s.passInput_do.setY(s.passLabel_do.y + o + 5), s.passButton_do.setX(10 + s.passInput_do.w + 20), s.passButton_do.setY(s.passLabel_do.y + o + 6), s.passMainHolderBk_do.setY(s.passLabel_do.y - 9), s.passMainHolderBk_do.setWidth(s.totalWidth - 2), s.passMainHolderBk_do.setHeight(s.passButton_do.y + s.passButton_do.h - 9), s.passMainHolder_do.setWidth(s.totalWidth), s.passMainHolder_do.setHeight(s.passButton_do.y + s.passButton_do.h + 14), s.passMainHolder_do.setX(Math.round((s.stageWidth - s.totalWidth) / 2)), e = s.passMainHolderBk_do.getHeight(), s.passMainHolder_do.setY(Math.round((s.stageHeight - e) / 2) - 10)
    }, this.passClickHandler = function() {
        s.privateVideoPassword_str = e.privateVideoPassword_str, e.playlist_ar[t.id].privateVideoPassword_str && (s.privateVideoPassword_str = e.playlist_ar[t.id].privateVideoPassword_str), s.privateVideoPassword_str == FWDUVPUtils.MD5(s.passInput_do.screen.value) ? s.dispatchEvent(o.CORRECT) : FWDAnimation.isTweening(s.passInput_do.screen) || FWDAnimation.to(s.passInput_do.screen, .1, {
            css: {
                backgroundColor: "#FF0000"
            },
            yoyo: !0,
            repeat: 3
        })
    }, this.updateHEXColors = function(e, t) {
        s.passButton_do.updateHEXColors(e, t), s.closeButton_do.updateHEXColors(e, t)
    }, this.showInfo = function(e, t) {
        s.infoText_do.setInnerHTML(e), s.passMainHolder_do.addChild(s.infoText_do), s.infoText_do.setWidth(s.buttonWidth), s.infoText_do.setHeight(s.buttonHeight - 4), s.infoText_do.setX(s.passButton_do.x), s.infoText_do.setY(s.passButton_do.y - 23), s.infoText_do.setAlpha(0), s.infoText_do.getStyle().color = t ? "#FF0000" : s.mainLabelsColor_str, FWDAnimation.killTweensOf(s.infoText_do), FWDAnimation.to(s.infoText_do, .16, {
            alpha: 1,
            yoyo: !0,
            repeat: 7
        })
    }, this.show = function(e) {
        s.isShowed_bl || (s.isShowed_bl = !0, t.main_do.addChild(s), s.passButton_do.setSelectedState(), s.passInput_do.setInnerHTML(""), (!FWDUVPUtils.isMobile || FWDUVPUtils.isMobile && FWDUVPUtils.hasPointerEvent) && t.main_do.setSelectable(!0), s.positionAndResize(), clearTimeout(s.hideCompleteId_to), clearTimeout(s.showCompleteId_to), s.mainHolder_do.setY(-s.stageHeight), s.showCompleteId_to = setTimeout(s.showCompleteHandler, 900), setTimeout(function() {
            FWDAnimation.to(s.mainHolder_do, .8, {
                y: 0,
                delay: .1,
                ease: Expo.easeInOut
            })
        }, 100))
    }, this.showCompleteHandler = function() {}, this.hide = function() {
        s.isShowed_bl && (s.isShowed_bl = !1, t.customContextMenu_do && t.customContextMenu_do.enable(), s.positionAndResize(), clearTimeout(s.hideCompleteId_to), clearTimeout(s.showCompleteId_to), (!FWDUVPUtils.isMobile || FWDUVPUtils.isMobile && FWDUVPUtils.hasPointerEvent) && t.main_do.setSelectable(!1), s.hideCompleteId_to = setTimeout(s.hideCompleteHandler, 800), FWDAnimation.killTweensOf(s.mainHolder_do), FWDAnimation.to(s.mainHolder_do, .8, {
            y: -s.stageHeight,
            ease: Expo.easeInOut
        }))
    }, this.hideCompleteHandler = function() {
        t.main_do.removeChild(s), s.dispatchEvent(o.HIDE_COMPLETE)
    }, this.init()
};
o.setPrototype = function() {
    o.prototype = new FWDUVPDisplayObject("div")
}, o.ERROR = "error", o.CORRECT = "correct", o.HIDE_COMPLETE = "hideComplete", o.prototype = null, e.FWDUVPPassword = o
}(window),
function(o) {
var t = function(i, n) {
    var a = this;
    t.prototype;
    this.moveEvent = null, this.parent = i, this.data = n, this.image_img = null, this.prevN_img = n.prevN_img, this.nextN_img = n.nextN_img, this.replayN_img = n.replayN_img, this.shuffleN_img = n.shuffleN_img, this.scrBkTop_img = n.scrBkTop_img, this.scrDragTop_img = n.scrDragTop_img, this.scrLinesN_img = n.scrLinesN_img, this.playlist_ar = null, this.buttons_ar = [], this.thumbs_ar = null, this.playlistNameHolder_do = null, this.playlistName_do = null, this.scrMainHolder_do = null, this.scrTrack_do = null, this.scrTrackTop_do = null, this.scrTrackMiddle_do = null, this.scrTrackBottom_do = null, this.scrHandler_do = null, this.scrHandlerTop_do = null, this.scrHandlerMiddle_do = null, this.scrHandlerBottom_do = null, this.scrHandlerLines_do = null, this.scrHandlerLinesN_do = null, this.scrHandlerLinesS_do = null, this.mainHolder_do = null, this.mainThumbsHolder_do = null, this.controllBar_do = null, this.input_do = null, this.inputArrow_do = null, this.bk_do = null, this.thumbsHolder_do = null, this.nextButton_do = null, this.prevButton_do = null, this.toolTip_do = null, this.shuffleButton_do = null, this.loopButton_do = null, this.prevButtonToolTip_do = null, this.loopButtonToolTip_do = null, this.shuffleButtonToolTip_do = null, this.nextButtonToolTip_do = null, this.noSearchFound_do = null, a.useHEXColorsForSkin_bl = n.useHEXColorsForSkin_bl, a.normalButtonsColor_str = n.normalButtonsColor_str, a.selectedButtonsColor_str = n.selectedButtonsColor_str, this.bkPath_str = n.controllerBkPath_str, this.position_str = i.playlistPosition_str, this.playlistBackgroundColor_str = n.playlistBackgroundColor_str, this.inputBackgroundColor_str = n.searchInputBackgroundColor_str, this.inputColor_str = n.searchInputColor_str, this.prevInputValue_str = "none", this.scrWidth = a.scrBkTop_img.width, this.mouseX = 0, this.mouseY = 0, this.catId = -1, this.dif = 0, this.countLoadedThumbs = 0, this.curId = -1, this.finalX = 0, this.finalY = 0, this.controlBarHeight = n.controllerHeight, this.totalThumbs = 0, this.totalWidth = i.playlistWidth, this.totalHeight = i.playlistHeight, this.thumbImageW = n.thumbnailWidth, this.thumbImageH = n.thumbnailHeight, this.thumbInPadding = 2, this.spaceBetweenThumbnails = n.spaceBetweenThumbnails, this.startSpaceBetweenButtons = n.startSpaceBetweenButtons, this.spaceBetweenButtons = n.spaceBetweenButtons, this.totalButtons = 0, this.buttonsToolTipHideDelay = n.buttonsToolTipHideDelay, this.removeFromThumbsHolderHeight = 0, this.totalThumbsHeight = 0, this.scrollBarHandlerFinalY = 0, this.stageWidth = a.totalWidth, this.stageHeight = a.totalHeight, this.scrollbarOffestWidth = n.scrollbarOffestWidth, this.lastThumbnailFinalY = -1, this.thumbnailsFinalY = 0, this.scollbarSpeedSensitivity = n.scollbarSpeedSensitivity, this.vy = 0, this.vy2 = 0, this.friction = .9, this.loadWithDelayId_to, this.showToolTipId_to, this.disableThumbsId_to, this.disableMouseWheelId_to, this.thumbnailsAnimDoneId_to, this.disableForAWhileAfterThumbClickId_to, this.updateMobileScrollBarId_int, this.showThumbnail_bl = n.showThumbnail_bl, this.disableForAWhileAfterThumbClick_bl = !1, this.showPlaylistName_bl = n.showPlaylistName_bl, this.isShowNothingFound_bl = !1, this.hasInputFocus_bl = !1, this.showController_bl = n.showSearchInput_bl || n.showNextAndPrevButtons_bl || n.showLoopButton_bl || n.showShuffleButton_bl, this.loop_bl = n.loop_bl, this.shuffle_bl = n.shuffle_bl, this.showSearchInput_bl = n.showSearchInput_bl, this.allowToScrollAndScrollBarIsActive_bl = !0, this.showPlaylistToolTips_bl = n.showPlaylistToolTips_bl, this.hasPlaylist_bl = !1, this.showPlaylistByDefault_bl = n.showPlaylistByDefault_bl, this.repeatBackground_bl = n.repeatBackground_bl, this.addMouseWheelSupport_bl = n.addMouseWheelSupport_bl, this.showNextAndPrevButtons_bl = n.showNextAndPrevButtons_bl, this.showShuffleButton_bl = n.showShuffleButton_bl, this.showLoopButton_bl = n.showLoopButton_bl, this.showButtonsToolTip_bl = n.showButtonsToolTip_bl, this.isShowed_bl = !0, this.allowToSwipe_bl = !1, this.disableThumbs_bl = !1, this.disableMouseWheel_bl = !1, this.usePlaylistsSelectBox_bl = n.usePlaylistsSelectBox_bl, this.isMobile_bl = FWDUVPUtils.isMobile, this.isDragging_bl = !1, this.isSearched_bl = !1, this.addScrOnMM_bl = n.addScrOnMM_bl, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.useVectorIcons_bl = n.useVectorIcons_bl, this.init = function() {
        if (a.mainHolder_do = new FWDUVPDisplayObject("div"), a.mainHolder_do.setBkColor(a.playlistBackgroundColor_str), a.mainThumbsHolder_do = new FWDUVPDisplayObject("div"), a.thumbsHolder_do = new FWDUVPDisplayObject("div"), a.thumbsHolder_do.setOverflow("visible"), a.mainThumbsHolder_do.addChild(a.thumbsHolder_do), a.mainHolder_do.addChild(a.mainThumbsHolder_do), a.addChild(a.mainHolder_do), a.showController_bl) {
            if (a.controllBar_do = new FWDUVPDisplayObject("div"), a.repeatBackground_bl) a.controllerBk_do = new FWDUVPDisplayObject("div"), a.controllerBk_do.getStyle().background = "url('" + a.bkPath_str + "')";
            else {
                a.controllerBk_do = new FWDUVPDisplayObject("img");
                var e = new Image;
                e.src = a.bkPath_str, a.controllerBk_do.setScreen(e)
            }
            a.controllerBk_do.setHeight(a.controlBarHeight), a.controllerBk_do.getStyle().width = "100%", a.controllBar_do.addChild(a.controllerBk_do), a.controllBar_do.setHeight(a.controlBarHeight), a.mainHolder_do.addChild(a.controllBar_do)
        }
        a.showShuffleButton_bl && a.setupShuffleButton(), a.showLoopButton_bl && a.setupLoopButton(), a.showNextAndPrevButtons_bl && (a.setupPrevButton(), a.setupNextButton()), a.showButtonsToolTip_bl && a.setupToolTips(), a.totalButtons = a.buttons_ar.length, a.showSearchInput_bl && a.showController_bl && a.setupInput(), a.showController_bl && (a.removeFromThumbsHolderHeight = a.controllBar_do.h + a.spaceBetweenThumbnails), a.setupMobileScrollbar(), a.isMobile_bl || a.setupScrollbar(), a.addMouseWheelSupport_bl && a.addMouseWheelSupport(), a.showPlaylistName_bl && (a.setupPlaylistName(), a.removeFromThumbsHolderHeight += a.controlBarHeight + a.spaceBetweenThumbnails, a.mainThumbsHolder_do.setY(a.controlBarHeight + a.spaceBetweenThumbnails), a.scrMainHolder_do && a.scrMainHolder_do.setY(a.mainThumbsHolder_do.y)), a.showPlaylistByDefault_bl ? a.hideAndShow() : a.hide()
    }, this.resizeAndPosition = function(e) {
        i.stageWidth && ("bottom" == a.position_str ? (a.stageWidth = i.stageWidth, a.stageHeight = i.playlistHeight, a.finalX = 0, a.finalY = i.tempVidStageHeight + i.spaceBetweenControllerAndPlaylist) : (a.stageWidth = a.totalWidth, a.stageHeight = i.stageHeight, a.finalX = i.stageWidth - a.totalWidth, a.finalY = 0), a.comboBox_do && a.comboBox_do.resizeAndPosition(), a.bk_do && (a.bk_do.setWidth(a.stageWidth), a.bk_do.setHeight(a.stageHeight)), a.positionThumbs(e), a.allowToScrollAndScrollBarIsActive_bl && a.scrMainHolder_do ? a.mainThumbsHolder_do.setWidth(a.stageWidth - a.scrollbarOffestWidth) : a.mainThumbsHolder_do.setWidth(a.stageWidth), a.mainThumbsHolder_do.setHeight(a.stageHeight - a.removeFromThumbsHolderHeight), a.scrHandler_do && a.updateScrollBarSizeActiveAndDeactivate(), a.controllBar_do && a.positionControllBar(), a.updateScrollBarHandlerAndContent(e), a.setX(a.finalX), a.setY(a.finalY), a.mainHolder_do.setWidth(a.stageWidth), a.mainHolder_do.setHeight(a.stageHeight))
    }, this.updatePlaylist = function(e, t, o, s) {
        a.catId != t && (clearTimeout(a.populateNextItemId_to), a.hasPlaylist_bl = !0, a.catId = t, a.curId = o, a.playlist_ar = e, a.countLoadedThumbs = 0, a.allowToScrollAndScrollBarIsActive_bl = !1, a.input_do && (a.hasInputFocus_bl = !1, a.input_do.screen.value = "search for video"), a.setupThumbnails(), a.updatePlaylistName(s), a.showThumbnail_bl && a.loadImages(), a.comboBox_do && a.comboBox_do.setButtonsStateBasedOnId(a.catId), FWDAnimation.to(a.mainHolder_do, .8, {
            x: 0,
            y: 0,
            ease: Expo.easeInOut
        }), a.resizeAndPosition(), a.scrHandler_do && (a.updateScrollBarSizeActiveAndDeactivate(), a.updateScrollBarHandlerAndContent(!1, !0)), e[0] && "..." == e[0].titleText && a.loadId3())
    }, this.loadId3 = function() {
        clearTimeout(a.populateNextItemId_to);
        for (var e = 0; e < a.totalPlayListItems; e++)
            if ("..." != a.playlist_ar[e].title) return void(a.countID3 = 2001);
        a.countID3 = 0, a.countVideo = 1, a.loadID3AndPopulate()
    }, this.loadID3AndPopulate = function() {
        if (a.thumbs_ar && a.playlist_ar[a.countID3]) {
            var t = "",
                o = a.thumbs_ar[a.countID3],
                s = a.playlist_ar[a.countID3].videoSource[0].source + "?rand=" + parseInt(99999999 * Math.random()),
                i = a.playlist_ar[a.countID3];
            if (-1 != s.toLowerCase().indexOf(".mp4")) a.countVideo < 10 ? "0" + a.countVideo : a.countVideo, a.countVideo++, a.playlist_ar[a.countID3].titleText = o.titleText, a.playlist_ar[a.countID3].title = o.title, a.playlist_ar[a.countID3].gaStr = o.title, o.updateText(o.titleText_str);
            else ID3.loadTags(s, function() {
                if (a.countID3 > a.playlist_ar.length || 2001 == a.countID3) clearTimeout(a.populateNextItemId_to);
                else {
                    var e = ID3.getAllTags(s);
                    e.artist && (i.titleText_str = e.artist, n.showTracksNumbers_bl ? (a.countTrack < 9 && (t = "0"), t = t + (a.countTrack + 1) + ". ", i.title = t + i.titleText_str) : i.title = i.titleText_str, a.countTrack++), o.title_str = i.title, o.titleText_str = "<p style='color:" + a.data.youtubeAndFolderVideoTitleColor_str + ";margin:0px;padding:0px;margin-top:2px;margin-bottom:0x;line-height:16px;'>" + i.titleText_str + "</p><p style='color:" + a.data.folderAudioSecondTitleColor_str + ";margin:0px;padding:0px;margin-top:2px;margin-bottom:0x;line-height:16px;'>" + e.title + "</p>", o.updateText(o.titleText_str)
                }
            });
            a.populateNextItemId_to = setTimeout(a.loadID3AndPopulate, 150), a.countID3++
        }
    }, this.destroyPlaylist = function() {
        if (a.thumbs_ar) {
            var e;
            a.hasPlaylist_bl = !1, a.image_img && (a.image_img.onerror = null, a.image_img.onload = null), FWDAnimation.killTweensOf(a.mainHolder_do), "bottom" == a.position_str ? a.mainHolder_do.setY(-a.stageHeight - 5) : a.mainHolder_do.setX(-a.stageWidth - 5), clearTimeout(a.loadWithDelayId_to);
            for (var t = 0; t < a.totalThumbs; t++) e = a.thumbs_ar[t], a.thumbsHolder_do.removeChild(e), e.destroy();
            a.thumbs_ar = null
        }
    }, this.setupcomboBox = function() {
        a.labels_ar = [];
        for (var e = 0; e < n.cats_ar.length; e++) a.labels_ar[e] = n.cats_ar[e].playlistName;
        var t = {
            categories_ar: a.labels_ar,
            selectorLabel: a.labels_ar[0],
            selectorBackgroundNormalColor: n.mainSelectorBackgroundSelectedColor,
            selectorTextNormalColor: n.mainSelectorTextNormalColor,
            selectorTextSelectedColor: n.mainSelectorTextSelectedColor,
            buttonBackgroundNormalColor: n.mainButtonBackgroundNormalColor,
            buttonBackgroundSelectedColor: n.mainButtonBackgroundSelectedColor,
            buttonTextNormalColor: n.mainButtonTextNormalColor,
            buttonTextSelectedColor: n.mainButtonTextSelectedColor,
            buttonHeight: a.controlBarHeight,
            arrowN_str: n.arrowN_str,
            arrowS_str: n.arrowS_str,
            arrowW: 11,
            arrowH: 6
        };
        FWDUVPComboBox.setPrototype(), a.comboBox_do = new FWDUVPComboBox(a, t), a.comboBox_do.addListener(FWDUVPComboBox.BUTTON_PRESSED, a.changePlaylistOnClick), a.mainHolder_do.addChild(a.comboBox_do)
    }, a.changePlaylistOnClick = function(e) {
        a.dispatchEvent(t.CHANGE_PLAYLIST, {
            id: e.id
        })
    }, this.setupPlaylistName = function() {
        if (a.playlistNameHolder_do = new FWDUVPDisplayObject("div"), a.playlistNameHolder_do.setHeight(a.controlBarHeight), a.playlistNameHolder_do.getStyle().width = "100%", a.repeatBackground_bl) a.playlistNameBk_do = new FWDUVPDisplayObject("div"), a.playlistNameBk_do.getStyle().background = "url('" + a.bkPath_str + "')";
        else {
            a.playlistNameBk_do = new FWDUVPDisplayObject("img");
            var e = new Image;
            e.src = a.bkPath_str, a.playlistNameBk_do.setScreen(e)
        }
        a.playlistNameBk_do.getStyle().width = "100%", a.playlistNameBk_do.getStyle().height = "100%", a.playlistName_do = new FWDUVPDisplayObject("div"), a.playlistName_do.getStyle().width = "100%", a.playlistName_do.getStyle().textAlign = "center", a.playlistName_do.getStyle().fontSmoothing = "antialiased", a.playlistName_do.getStyle().webkitFontSmoothing = "antialiased", a.playlistName_do.getStyle().textRendering = "optimizeLegibility", a.playlistName_do.getStyle().fontFamily = "Arial", a.playlistName_do.getStyle().fontSize = "14px", a.playlistName_do.getStyle().color = n.playlistNameColor_str, a.playlistNameHolder_do.addChild(a.playlistNameBk_do), a.usePlaylistsSelectBox_bl || a.playlistNameHolder_do.addChild(a.playlistName_do), a.mainHolder_do.addChild(a.playlistNameHolder_do), a.usePlaylistsSelectBox_bl && a.setupcomboBox()
    }, this.updatePlaylistName = function(e) {
        a.playlistName_do && (a.playlistName_do.setInnerHTML(e), setTimeout(function() {
            a.playlistName_do.setY(parseInt((a.playlistNameHolder_do.h - a.playlistName_do.getHeight()) / 2) + 1)
        }, 50))
    }, this.setupInput = function() {
        a.input_do = new FWDUVPDisplayObject("input"), a.input_do.screen.maxLength = 20, a.input_do.getStyle().textAlign = "left", a.input_do.getStyle().outline = "none", a.input_do.getStyle().boxShadow = "none", a.input_do.getStyle().fontSmoothing = "antialiased", a.input_do.getStyle().webkitFontSmoothing = "antialiased", a.input_do.getStyle().textRendering = "optimizeLegibility", a.input_do.getStyle().fontFamily = "Arial", a.input_do.getStyle().fontSize = "12px", a.input_do.getStyle().padding = "6px", FWDUVPUtils.isIEAndLessThen9 || (a.input_do.getStyle().paddingRight = "-6px"), a.input_do.getStyle().paddingTop = "2px", a.input_do.getStyle().paddingBottom = "3px", a.input_do.getStyle().backgroundColor = a.inputBackgroundColor_str, a.input_do.getStyle().color = a.inputColor_str, a.input_do.screen.value = "search for video", a.noSearchFound_do = new FWDUVPDisplayObject("div"), a.noSearchFound_do.setX(0), a.noSearchFound_do.getStyle().textAlign = "center", a.noSearchFound_do.getStyle().width = "100%", a.noSearchFound_do.getStyle().fontSmoothing = "antialiased", a.noSearchFound_do.getStyle().webkitFontSmoothing = "antialiased", a.noSearchFound_do.getStyle().textRendering = "optimizeLegibility", a.noSearchFound_do.getStyle().fontFamily = "Arial", a.noSearchFound_do.getStyle().fontSize = "12px", a.noSearchFound_do.getStyle().color = a.inputColor_str, a.noSearchFound_do.setInnerHTML("NOTHING FOUND!"), a.noSearchFound_do.setVisible(!1), a.mainHolder_do.addChild(a.noSearchFound_do), a.hasPointerEvent_bl ? a.input_do.screen.addEventListener("pointerdown", a.inputFocusInHandler) : a.input_do.screen.addEventListener && (a.input_do.screen.addEventListener("mousedown", a.inputFocusInHandler), a.input_do.screen.addEventListener("touchstart", a.inputFocusInHandler)), a.input_do.screen.addEventListener("keyup", a.keyUpHandler);
        var e = new Image;
        e.src = n.inputArrowPath_str, a.inputArrow_do = new FWDUVPDisplayObject("img"), a.inputArrow_do.setScreen(e), a.inputArrow_do.setWidth(9), a.inputArrow_do.setHeight(10), a.controllBar_do.addChild(a.inputArrow_do), a.controllBar_do.addChild(a.input_do)
    }, this.inputFocusInHandler = function() {
        a.hasInputFocus_bl || (a.hasInputFocus_bl = !0, "search for video" == a.input_do.screen.value && (a.input_do.screen.value = ""), a.input_do.screen.focus(), setTimeout(function() {
            a.hasPointerEvent_bl ? o.addEventListener("pointerdown", a.inputFocusOutHandler) : o.addEventListener && (o.addEventListener("mousedown", a.inputFocusOutHandler), o.addEventListener("touchstart", a.inputFocusOutHandler)), FWDUVPlayer.isSearchedFocused_bl = !0
        }, 50))
    }, this.inputFocusOutHandler = function(e) {
        if (FWDUVPlayer.isSearchedFocused_bl = !1, a.hasInputFocus_bl) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            return FWDUVPUtils.hitTest(a.input_do.screen, t.screenX, t.screenY) ? void 0 : (a.hasInputFocus_bl = !1, void("" == a.input_do.screen.value && (a.input_do.screen.value = "search for video", a.hasPointerEvent_bl ? o.removeEventListener("pointerdown", a.inputFocusOutHandler) : o.removeEventListener && (o.removeEventListener("mousedown", a.inputFocusOutHandler), o.removeEventListener("touchstart", a.inputFocusOutHandler)))))
        }
    }, this.keyUpHandler = function(e) {
        e.stopPropagation && e.stopPropagation(), a.prevInputValue_str != a.input_do.screen.value && (a.isMobile_bl ? (a.positionThumbs(!1), a.thumbnailsFinalY = -1 * Math.round(a.curId / (a.totalThumbs - 1) * (a.totalThumbsHeight - a.mainThumbsHolder_do.h))) : a.positionThumbs(!0)), a.prevInputValue_str = a.input_do.screen.value, a.scrHandler_do && (a.updateScrollBarSizeActiveAndDeactivate(), a.updateScrollBarHandlerAndContent(!0, !0))
    }, this.showNothingFound = function() {
        a.isShowNothingFound_bl || (a.isShowNothingFound_bl = !0, a.noSearchFound_do.setVisible(!0), a.noSearchFound_do.setY(parseInt((a.stageHeight - a.noSearchFound_do.getHeight()) / 2)), a.noSearchFound_do.setAlpha(0), FWDAnimation.to(a.noSearchFound_do, .1, {
            alpha: 1,
            yoyo: !0,
            repeat: 4
        }))
    }, this.hideNothingFound = function() {
        a.isShowNothingFound_bl && (a.isShowNothingFound_bl = !1, FWDAnimation.killTweensOf(a.noSearchFound_do), a.noSearchFound_do.setVisible(!1))
    }, this.positionControllBar = function() {
        var e, t, o;
        if (a.input_do && a.stageWidth <= 340) {
            e = a.stageWidth - 2 * a.startSpaceBetweenButtons - a.inputArrow_do.w - a.spaceBetweenButtons, a.nextButton_do && (e -= a.nextButton_do.w + a.spaceBetweenButtons), a.prevButton_do && (e -= a.prevButton_do.w + a.spaceBetweenButtons), a.shuffleButton_do && (e -= a.shuffleButton_do.w + a.spaceBetweenButtons), a.loopButton_do && (e -= a.loopButton_do.w + a.spaceBetweenButtons);
            for (var s = 0; s < a.totalButtons; s++) t = a.buttons_ar[a.totalButtons - 1 - s], o = a.buttons_ar[a.totalButtons - s], 0 == s ? t.setX(a.stageWidth - t.w - a.startSpaceBetweenButtons) : t.setX(o.x - o.w - a.spaceBetweenButtons), t.setY(parseInt((a.controllBar_do.h - t.h) / 2))
        } else if (a.input_do && 340 < a.stageWidth) {
            350 < (e = a.stageWidth - 2 * a.startSpaceBetweenButtons - a.inputArrow_do.w - 12) && (e = 350), a.nextButton_do && (e -= a.nextButton_do.w + a.spaceBetweenButtons), a.prevButton_do && (e -= a.prevButton_do.w + a.spaceBetweenButtons), a.shuffleButton_do && (e -= a.shuffleButton_do.w + a.spaceBetweenButtons), a.loopButton_do && (e -= a.loopButton_do.w + a.spaceBetweenButtons);
            for (s = 0; s < a.totalButtons; s++) t = a.buttons_ar[a.totalButtons - 1 - s], o = a.buttons_ar[a.totalButtons - s], 0 == s ? t.setX(a.stageWidth - t.w - a.startSpaceBetweenButtons) : t.setX(o.x - o.w - a.spaceBetweenButtons), t.setY(parseInt((a.controllBar_do.h - t.h) / 2))
        } else a.shuffleButton_do ? (a.shuffleButton_do.setX(a.spaceBetweenButtons), a.shuffleButton_do.setY(parseInt((a.controllBar_do.h - a.shuffleButton_do.h) / 2)), a.loopButton_do && (a.loopButton_do.setX(a.shuffleButton_do.x + a.shuffleButton_do.w + a.spaceBetweenButtons), a.loopButton_do.setY(parseInt((a.controllBar_do.h - a.shuffleButton_do.h) / 2)))) : a.loopButton_do && (a.loopButton_do.setX(a.spaceBetweenButtons), a.loopButton_do.setY(parseInt((a.controllBar_do.h - a.loopButton_do.h) / 2))), a.nextButton_do && (a.nextButton_do.setX(a.stageWidth - a.nextButton_do.w - a.startSpaceBetweenButtons), a.nextButton_do.setY(parseInt((a.controllBar_do.h - a.nextButton_do.h) / 2)), a.prevButton_do.setX(a.nextButton_do.x - a.nextButton_do.w - a.spaceBetweenButtons), a.prevButton_do.setY(parseInt((a.controllBar_do.h - a.prevButton_do.h) / 2)));
        a.input_do && (a.input_do.setWidth(e), a.input_do.setX(a.startSpaceBetweenButtons), a.input_do.setY(parseInt((a.controllBar_do.h - a.input_do.getHeight()) / 2) + 1), a.inputArrow_do.setX(parseInt(a.input_do.x + a.input_do.getWidth()) + 1), a.inputArrow_do.setY(parseInt((a.controllBar_do.h - a.inputArrow_do.h) / 2) + 1)), a.controllBar_do.setWidth(a.stageWidth), a.controllBar_do.setY(a.stageHeight - a.controllBar_do.h)
    }, this.setupPrevButton = function() {
        a.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), a.prevButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-FF-left'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), a.prevButton_do = new FWDUVPSimpleButton(a.prevN_img, n.prevSPath_str, void 0, !0, n.useHEXColorsForSkin_bl, n.normalButtonsColor_str, n.selectedButtonsColor_str)), a.prevButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, a.prevButtonShowTooltipHandler), a.prevButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, a.prevButtonOnMouseUpHandler), a.buttons_ar.push(a.prevButton_do), a.controllBar_do.addChild(a.prevButton_do)
    }, this.prevButtonShowTooltipHandler = function(e) {
        a.showToolTip(a.prevButton_do, a.prevButtonToolTip_do, e.e)
    }, this.prevButtonOnMouseUpHandler = function() {
        a.dispatchEvent(t.PLAY_PREV_VIDEO)
    }, this.setupNextButton = function() {
        a.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), a.nextButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-FF-right'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), a.nextButton_do = new FWDUVPSimpleButton(a.nextN_img, n.nextSPath_str, void 0, !0, n.useHEXColorsForSkin_bl, n.normalButtonsColor_str, n.selectedButtonsColor_str)), a.nextButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, a.nextButtonShowTooltipHandler), a.nextButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, a.nextButtonOnMouseUpHandler), a.buttons_ar.push(a.nextButton_do), a.controllBar_do.addChild(a.nextButton_do)
    }, this.nextButtonShowTooltipHandler = function(e) {
        a.showToolTip(a.nextButton_do, a.nextButtonToolTip_do, e.e)
    }, this.nextButtonOnMouseUpHandler = function() {
        a.dispatchEvent(t.PLAY_NEXT_VIDEO)
    }, this.setupShuffleButton = function() {
        a.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), a.shuffleButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-shuffle'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), a.shuffleButton_do = new FWDUVPSimpleButton(a.shuffleN_img, n.shufflePathS_str, void 0, !0, n.useHEXColorsForSkin_bl, n.normalButtonsColor_str, n.selectedButtonsColor_str)), a.shuffleButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, a.shuffleButtonShowToolTipHandler), a.shuffleButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, a.shuffleButtonOnMouseUpHandler), a.buttons_ar.push(a.shuffleButton_do), a.controllBar_do.addChild(a.shuffleButton_do), !a.loop_bl && a.shuffle_bl && a.setShuffleButtonState("selected")
    }, this.shuffleButtonShowToolTipHandler = function(e) {
        a.showToolTip(a.shuffleButton_do, a.shuffleButtonToolTip_do, e.e)
    }, this.shuffleButtonOnMouseUpHandler = function() {
        a.shuffleButton_do.isSelectedFinal_bl ? a.dispatchEvent(t.DISABLE_SHUFFLE) : a.dispatchEvent(t.ENABLE_SHUFFLE)
    }, this.setShuffleButtonState = function(e) {
        a.shuffleButton_do && ("selected" == e ? a.shuffleButton_do.setSelected() : "unselected" == e && a.shuffleButton_do.setUnselected())
    }, this.setupLoopButton = function() {
        a.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), a.loopButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-loop'></span>", void 0, "UVPMainButtonsNormalState", "UVPMainButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), a.loopButton_do = new FWDUVPSimpleButton(a.replayN_img, n.replaySPath_str, void 0, !0, n.useHEXColorsForSkin_bl, n.normalButtonsColor_str, n.selectedButtonsColor_str)), a.loopButton_do.addListener(FWDUVPSimpleButton.SHOW_TOOLTIP, a.loopButtonShowTooltipHandler), a.loopButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, a.loopButtonOnMouseUpHandler), a.buttons_ar.push(a.loopButton_do), a.controllBar_do.addChild(a.loopButton_do), a.loop_bl && a.setLoopStateButton("selected")
    }, this.loopButtonShowTooltipHandler = function(e) {
        a.showToolTip(a.loopButton_do, a.loopButtonToolTip_do, e.e)
    }, this.loopButtonOnMouseUpHandler = function() {
        a.loopButton_do.isSelectedFinal_bl ? a.dispatchEvent(t.DISABLE_LOOP) : a.dispatchEvent(t.ENABLE_LOOP)
    }, this.setLoopStateButton = function(e) {
        a.loopButton_do && ("selected" == e ? a.loopButton_do.setSelected() : "unselected" == e && a.loopButton_do.setUnselected())
    }, this.setupToolTips = function() {
        a.showNextAndPrevButtons_bl && (FWDUVPToolTip.setPrototype(), a.prevButtonToolTip_do = new FWDUVPToolTip(a.prevButton_do, n.toopTipBk_str, n.toopTipPointer_str, "previous video", a.buttonsToolTipFontColor_str, a.buttonsToolTipHideDelay), document.documentElement.appendChild(a.prevButtonToolTip_do.screen), FWDUVPToolTip.setPrototype(), a.nextButtonToolTip_do = new FWDUVPToolTip(a.nextButton_do, n.toopTipBk_str, n.toopTipPointer_str, "next video", a.buttonsToolTipFontColor_str, a.buttonsToolTipHideDelay), document.documentElement.appendChild(a.nextButtonToolTip_do.screen)), a.showShuffleButton_bl && (FWDUVPToolTip.setPrototype(), a.shuffleButtonToolTip_do = new FWDUVPToolTip(a.shuffleButton_do, n.toopTipBk_str, n.toopTipPointer_str, "shuffle", a.buttonsToolTipFontColor_str, a.buttonsToolTipHideDelay), document.documentElement.appendChild(a.shuffleButtonToolTip_do.screen)), a.showLoopButton_bl && (FWDUVPToolTip.setPrototype(), a.loopButtonToolTip_do = new FWDUVPToolTip(a.loopButton_do, n.toopTipBk_str, n.toopTipPointer_str, "loop", a.buttonsToolTipFontColor_str, a.buttonsToolTipHideDelay), document.documentElement.appendChild(a.loopButtonToolTip_do.screen))
    }, this.showToolTip = function(e, t, o) {
        if (a.showButtonsToolTip_bl) {
            var s, i, n = FWDUVPUtils.getViewportSize();
            FWDUVPUtils.getViewportMouseCoordinates(o);
            i = e.screen.offsetWidth < 3 ? (s = parseInt(100 * e.getGlobalX() + e.w / 2 - t.w / 2), parseInt(100 * e.getGlobalY() - t.h - 8)) : (s = parseInt(e.getGlobalX() + e.w / 2 - t.w / 2), parseInt(e.getGlobalY() - t.h - 8));
            var l = 0;
            s < 0 ? (l = s, s = 0) : s + t.w > n.w && (s += -1 * (l = -1 * (n.w - (s + t.w)))), t.positionPointer(l, !1), t.setX(s), t.setY(i), t.show()
        }
    }, this.setupThumbnails = function() {
        var e;
        a.totalThumbs = a.playlist_ar.length, a.thumbs_ar = [];
        for (var t = 0; t < a.totalThumbs; t++) FWDUVPPlaylistThumb.setPrototype(), e = new FWDUVPPlaylistThumb(a, t, n.playlistThumbnailsBkPath_str, n.thumbnailNormalBackgroundColor_str, n.thumbnailHoverBackgroundColor_str, n.thumbnailDisabledBackgroundColor_str, a.thumbImageW, a.thumbImageH, a.thumbInPadding, a.playlist_ar[t].title, a.playlist_ar[t].titleText, a.showThumbnail_bl), (a.thumbs_ar[t] = e).addListener(FWDUVPPlaylistThumb.MOUSE_UP, a.thumbMouseUpHandler), a.thumbsHolder_do.addChild(e)
    }, this.thumbMouseUpHandler = function(e) {
        a.disableThumbs_bl || (a.disableForAWhileAfterThumbClick_bl = !0, clearTimeout(a.disableForAWhileAfterThumbClickId_to), a.disableForAWhileAfterThumbClickId_to = setTimeout(function() {
            a.disableForAWhileAfterThumbClick_bl = !1
        }, 50), a.dispatchEvent(t.THUMB_MOUSE_UP, {
            id: e.id
        }))
    }, this.loadImages = function() {
        a.playlist_ar[a.countLoadedThumbs] && (a.image_img && (a.image_img.onload = null, a.image_img.onerror = null), a.image_img = new Image, a.image_img.onerror = a.onImageLoadError, a.image_img.onload = a.onImageLoadComplete, a.image_img.src = a.playlist_ar[a.countLoadedThumbs].thumbSource)
    }, this.onImageLoadError = function(e) {}, this.onImageLoadComplete = function(e) {
        a.thumbs_ar[a.countLoadedThumbs].setImage(a.image_img), a.countLoadedThumbs++, a.loadWithDelayId_to = setTimeout(a.loadImages, 40)
    }, this.checkThumbsState = function() {
        if (a.thumbs_ar)
            for (var e, t = 0; t < a.totalThumbs; t++) e = a.thumbs_ar[t], t == a.curId ? e.disable() : e.enable()
    }, this.positionThumbs = function(e) {
        if (a.thumbs_ar) {
            a.stageWidth;
            var t, o, s = [].concat(a.thumbs_ar);
            if (a.isSearched_bl = !1, a.input_do && "search for video" != (o = a.input_do.screen.value.toLowerCase()))
                for (var i = 0; i < s.length; i++) - 1 == (t = s[i]).htmlText_str.indexOf(o) && (FWDAnimation.killTweensOf(t), t.setX(-t.w - 20), s.splice(i, 1), i--);
            var n = s.length;
            a.totalThumbs != n && (a.isSearched_bl = !0);
            for (i = 0; i < n; i++)(t = s[i]).finalW = a.stageWidth, t.finalX = 0, t.finalY = i * (t.finalH + a.spaceBetweenThumbnails), t.resizeAndPosition(e);
            0 == n ? a.showNothingFound() : a.hideNothingFound(), t && (a.totalThumbsHeight = Math.max(0, n * (t.h + a.spaceBetweenThumbnails) - a.spaceBetweenThumbnails), a.totalThumbsHeight > a.stageHeight - a.removeFromThumbsHolderHeight ? a.allowToScrollAndScrollBarIsActive_bl = !0 : a.allowToScrollAndScrollBarIsActive_bl = !1)
        }
    }, this.setupMobileScrollbar = function() {
        a.hasPointerEvent_bl ? a.mainThumbsHolder_do.screen.addEventListener("pointerdown", a.scrollBarTouchStartHandler) : a.mainThumbsHolder_do.screen.addEventListener("touchstart", a.scrollBarTouchStartHandler), a.isMobile_bl && (a.updateMobileScrollBarId_int = setInterval(a.updateMobileScrollBar, 16))
    }, this.scrollBarTouchStartHandler = function(e) {
        e.preventDefault && e.preventDefault(), a.isScrollingOnMove_bl = !1, FWDAnimation.killTweensOf(a.thumbsHolder_do);
        var t = FWDUVPUtils.getViewportMouseCoordinates(e);
        a.isDragging_bl = !0, a.lastPresedY = t.screenY, a.checkLastPresedY = t.screenY, a.hasPointerEvent_bl ? (o.addEventListener("pointerup", a.scrollBarTouchEndHandler), o.addEventListener("pointermove", a.scrollBarTouchMoveHandler)) : (o.addEventListener("touchend", a.scrollBarTouchEndHandler), o.addEventListener("touchmove", a.scrollBarTouchMoveHandler)), clearInterval(a.updateMoveMobileScrollbarId_int), a.updateMoveMobileScrollbarId_int = setInterval(a.updateMoveMobileScrollbar, 20)
    }, this.scrollBarTouchMoveHandler = function(e) {
        if (e.preventDefault && e.preventDefault(), e.stopImmediatePropagation(), !(a.totalThumbsHeight < a.mainThumbsHolder_do.h || a.comboBox_do && a.comboBox_do.isShowed_bl)) {
            i.showDisable();
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            (t.screenY >= a.checkLastPresedY + 6 || t.screenY <= a.checkLastPresedY - 6) && (a.isScrollingOnMove_bl = !0);
            var o = t.screenY - a.lastPresedY;
            if (a.thumbnailsFinalY += o, a.thumbnailsFinalY = Math.round(a.thumbnailsFinalY), a.lastPresedY = t.screenY, a.vy = 2 * o, !a.isMobile) {
                0 < a.thumbnailsFinalY ? a.thumbnailsFinalY = 0 : a.thumbnailsFinalY < a.mainThumbsHolder_do.h - a.totalThumbsHeight && (a.thumbnailsFinalY = a.mainThumbsHolder_do.h - a.totalThumbsHeight);
                var s = Math.max(0, a.thumbnailsFinalY / (a.mainThumbsHolder_do.h - a.totalThumbsHeight));
                a.scrMainHolder_do && (a.scrollBarHandlerFinalY = Math.round((a.scrMainHolder_do.h - a.scrHandler_do.h) * s), a.scrollBarHandlerFinalY < 0 ? a.scrollBarHandlerFinalY = 0 : a.scrollBarHandlerFinalY > a.scrMainHolder_do.h - a.scrHandler_do.h - 1 && (a.scrollBarHandlerFinalY = a.scrMainHolder_do.h - a.scrHandler_do.h - 1), FWDAnimation.killTweensOf(a.scrHandler_do), FWDAnimation.killTweensOf(a.scrHandlerLines_do), a.scrHandler_do.setY(a.scrollBarHandlerFinalY), a.scrHandlerLines_do.setY(a.scrollBarHandlerFinalY + parseInt((a.scrHandler_do.h - a.scrHandlerLinesN_do.h) / 2)))
            }
        }
    }, this.scrollBarTouchEndHandler = function(e) {
        a.isDragging_bl = !1, clearInterval(a.updateMoveMobileScrollbarId_int), clearTimeout(a.disableOnMoveId_to), a.disableOnMoveId_to = setTimeout(function() {
            i.hideDisable()
        }, 100), a.hasPointerEvent_bl ? (o.removeEventListener("pointerup", a.scrollBarTouchEndHandler), o.removeEventListener("pointermove", a.scrollBarTouchMoveHandler)) : (o.removeEventListener("touchend", a.scrollBarTouchEndHandler), o.removeEventListener("touchmove", a.scrollBarTouchMoveHandler))
    }, this.updateMoveMobileScrollbar = function() {
        a.thumbsHolder_do.setY(a.thumbnailsFinalY)
    }, this.updateMobileScrollBar = function(e) {
        a.isDragging_bl || (a.isSearched_bl && (a.thumbnailsFinalY = 0), a.totalThumbsHeight < a.mainThumbsHolder_do.h && (a.thumbnailsFinalY = .01), a.vy *= a.friction, a.thumbnailsFinalY += a.vy, 0 < a.thumbnailsFinalY ? (a.vy2 = .3 * (0 - a.thumbnailsFinalY), a.vy *= a.friction, a.thumbnailsFinalY += a.vy2) : a.thumbnailsFinalY < a.mainThumbsHolder_do.h - a.totalThumbsHeight && (a.vy2 = .3 * (a.mainThumbsHolder_do.h - a.totalThumbsHeight - a.thumbnailsFinalY), a.vy *= a.friction, a.thumbnailsFinalY += a.vy2), a.thumbsHolder_do.setY(Math.round(a.thumbnailsFinalY)))
    }, this.setupScrollbar = function() {
        a.scrMainHolder_do = new FWDUVPDisplayObject("div"), a.scrMainHolder_do.setWidth(a.scrWidth), a.scrTrack_do = new FWDUVPDisplayObject("div"), a.scrTrack_do.setWidth(a.scrWidth), a.scrTrackTop_do = new FWDUVPDisplayObject("img"), a.scrTrackTop_do.setScreen(a.scrBkTop_img), a.scrTrackMiddle_do = new FWDUVPDisplayObject("div"), a.scrTrackMiddle_do.getStyle().background = "url('" + n.scrBkMiddlePath_str + "')", a.scrTrackMiddle_do.setWidth(a.scrWidth), a.scrTrackMiddle_do.setY(a.scrTrackTop_do.h);
        var e = new Image;
        e.src = n.scrBkBottomPath_str, a.scrTrackBottom_do = new FWDUVPDisplayObject("img"), a.scrTrackBottom_do.setScreen(e), a.scrTrackBottom_do.setWidth(a.scrTrackTop_do.w), a.scrTrackBottom_do.setHeight(a.scrTrackTop_do.h), a.scrHandler_do = new FWDUVPDisplayObject("div"), a.scrHandler_do.setWidth(a.scrWidth), a.scrHandlerTop_do = new FWDUVPDisplayObject("img"), a.useHEXColorsForSkin_bl ? (a.scrHandlerTop_do = new FWDUVPDisplayObject("div"), a.scrHandlerTop_do.setWidth(a.scrDragTop_img.width), a.scrHandlerTop_do.setHeight(a.scrDragTop_img.height), a.mainScrubberDragTop_canvas = FWDUVPUtils.getCanvasWithModifiedColor(a.scrDragTop_img, a.normalButtonsColor_str).canvas, a.scrHandlerTop_do.screen.appendChild(a.mainScrubberDragTop_canvas)) : (a.scrHandlerTop_do = new FWDUVPDisplayObject("img"), a.scrHandlerTop_do.setScreen(a.scrDragTop_img)), a.scrHandlerMiddle_do = new FWDUVPDisplayObject("div"), a.middleImage = new Image, a.middleImage.src = n.scrDragMiddlePath_str, a.useHEXColorsForSkin_bl ? a.middleImage.onload = function() {
            a.scrubberDragMiddle_canvas = FWDUVPUtils.getCanvasWithModifiedColor(a.middleImage, a.normalButtonsColor_str, !0), a.scrubberDragImage_img = a.scrubberDragMiddle_canvas.image, a.scrHandlerMiddle_do.getStyle().background = "url('" + a.scrubberDragImage_img.src + "') repeat-y"
        } : a.scrHandlerMiddle_do.getStyle().background = "url('" + n.scrDragMiddlePath_str + "')", a.scrHandlerMiddle_do.setWidth(a.scrWidth), a.scrHandlerMiddle_do.setY(a.scrHandlerTop_do.h), a.scrHandlerBottom_do = new FWDUVPDisplayObject("div"), a.bottomImage = new Image, a.bottomImage.src = n.scrDragMiddlePath_str, a.useHEXColorsForSkin_bl ? a.bottomImage.onload = function() {
            a.scrubberDragBottom_canvas = FWDUVPUtils.getCanvasWithModifiedColor(a.bottomImage, a.normalButtonsColor_str, !0), a.scrubberDragBottomImage_img = a.scrubberDragBottom_canvas.image, a.scrHandlerBottom_do.getStyle().background = "url('" + a.scrubberDragBottomImage_img.src + "') repeat-y"
        } : a.scrHandlerBottom_do.getStyle().background = "url('" + n.scrDragBottomPath_str + "')", a.scrHandlerBottom_do.setWidth(a.scrWidth), a.scrHandlerBottom_do.setY(a.scrHandlerTop_do.h), a.scrHandlerBottom_do.setWidth(a.scrHandlerTop_do.w), a.scrHandlerBottom_do.setHeight(a.scrHandlerTop_do.h), a.useHEXColorsForSkin_bl ? (a.scrHandlerLinesN_do = new FWDUVPDisplayObject("div"), a.scrHandlerLinesN_do.setWidth(a.scrLinesN_img.width), a.scrHandlerLinesN_do.setHeight(a.scrLinesN_img.height), a.mainhandlerN_canvas = FWDUVPUtils.getCanvasWithModifiedColor(a.scrLinesN_img, a.selectedButtonsColor_str).canvas, a.scrHandlerLinesN_do.screen.appendChild(a.mainhandlerN_canvas)) : (a.scrHandlerLinesN_do = new FWDUVPDisplayObject("img"), a.scrHandlerLinesN_do.setScreen(a.scrLinesN_img)), a.scrHandlerLinesS_img = new Image, a.scrHandlerLinesS_img.src = n.scrLinesSPath_str, a.useHEXColorsForSkin_bl ? (a.scrHandlerLinesS_do = new FWDUVPDisplayObject("div"), a.scrHandlerLinesS_img.onload = function() {
            a.scrHandlerLinesS_do.setWidth(a.scrHandlerLinesN_do.w), a.scrHandlerLinesS_do.setHeight(a.scrHandlerLinesN_do.h), a.scrubberLines_s_canvas = FWDUVPUtils.getCanvasWithModifiedColor(a.scrHandlerLinesS_img, a.selectedButtonsColor_str, !0), a.scrubbelinesSImage_img = a.scrubberLines_s_canvas.image, a.scrHandlerLinesS_do.getStyle().background = "url('" + a.scrubbelinesSImage_img.src + "') repeat-y"
        }) : (a.scrHandlerLinesS_do = new FWDUVPDisplayObject("img"), a.scrHandlerLinesS_do.setScreen(a.scrHandlerLinesS_img), a.scrHandlerLinesS_do.setWidth(a.scrHandlerLinesN_do.w), a.scrHandlerLinesS_do.setHeight(a.scrHandlerLinesN_do.h)), a.scrHandlerLinesS_do.setAlpha(0), a.scrHandlerLines_do = new FWDUVPDisplayObject("div"), a.scrHandlerLines_do.setWidth(a.scrHandlerLinesN_do.w), a.scrHandlerLines_do.setHeight(a.scrHandlerLinesN_do.h), a.scrTrack_do.addChild(a.scrTrackTop_do), a.scrTrack_do.addChild(a.scrTrackMiddle_do), a.scrTrack_do.addChild(a.scrTrackBottom_do), a.scrHandler_do.addChild(a.scrHandlerTop_do), a.scrHandler_do.addChild(a.scrHandlerMiddle_do), a.scrHandler_do.addChild(a.scrHandlerBottom_do), a.scrHandlerLines_do.addChild(a.scrHandlerLinesN_do), a.scrHandlerLines_do.addChild(a.scrHandlerLinesS_do), a.scrMainHolder_do.addChild(a.scrTrack_do), a.scrMainHolder_do.addChild(a.scrHandler_do), a.scrMainHolder_do.addChild(a.scrHandlerLines_do), a.mainHolder_do.addChild(a.scrMainHolder_do), a.scrHandler_do.screen.addEventListener ? (a.scrHandler_do.screen.addEventListener("mouseover", a.scrollBarHandlerOnMouseOver), a.scrHandler_do.screen.addEventListener("mouseout", a.scrollBarHandlerOnMouseOut), a.scrHandler_do.screen.addEventListener("mousedown", a.scrollBarHandlerOnMouseDown), a.scrHandlerLines_do.screen.addEventListener("mouseover", a.scrollBarHandlerOnMouseOver), a.scrHandlerLines_do.screen.addEventListener("mouseout", a.scrollBarHandlerOnMouseOut), a.scrHandlerLines_do.screen.addEventListener("mousedown", a.scrollBarHandlerOnMouseDown)) : a.scrHandler_do.screen.attachEvent && (a.scrHandler_do.screen.attachEvent("onmouseover", a.scrollBarHandlerOnMouseOver), a.scrHandler_do.screen.attachEvent("onmouseout", a.scrollBarHandlerOnMouseOut), a.scrHandler_do.screen.attachEvent("onmousedown", a.scrollBarHandlerOnMouseDown), a.scrHandlerLines_do.screen.attachEvent("onmouseover", a.scrollBarHandlerOnMouseOver), a.scrHandlerLines_do.screen.attachEvent("onmouseout", a.scrollBarHandlerOnMouseOut), a.scrHandlerLines_do.screen.attachEvent("onmousedown", a.scrollBarHandlerOnMouseDown)), a.addScrOnMM_bl && o.addEventListener("mousemove", a.scrOnMM)
    }, this.scrOnMM = function(e) {
        var t = FWDUVPUtils.getViewportMouseCoordinates(e);
        FWDUVPUtils.hitTest(a.mainThumbsHolder_do.screen, t.screenX, t.screenY) ? (a.isDragging_bl = !0, a.scrollBarHandlerMoveHandler(e)) : a.isDragging_bl = !1
    }, this.scrollBarHandlerOnMouseOver = function(e) {
        a.allowToScrollAndScrollBarIsActive_bl && !a.addScrOnMM_bl && (FWDAnimation.killTweensOf(a.scrHandlerLinesN_do), FWDAnimation.killTweensOf(a.scrHandlerLinesS_do), FWDAnimation.to(a.scrHandlerLinesN_do, .8, {
            alpha: 0,
            ease: Expo.easeOut
        }), FWDAnimation.to(a.scrHandlerLinesS_do, .8, {
            alpha: 1,
            ease: Expo.easeOut
        }))
    }, this.scrollBarHandlerOnMouseOut = function(e) {
        !a.isDragging_bl && a.allowToScrollAndScrollBarIsActive_bl && (FWDAnimation.killTweensOf(a.scrHandlerLinesN_do), FWDAnimation.killTweensOf(a.scrHandlerLinesS_do), FWDAnimation.to(a.scrHandlerLinesN_do, .8, {
            alpha: 1,
            ease: Expo.easeOut
        }), FWDAnimation.to(a.scrHandlerLinesS_do, .8, {
            alpha: 0,
            ease: Expo.easeOut
        }))
    }, this.scrollBarHandlerOnMouseDown = function(e) {
        if (a.allowToScrollAndScrollBarIsActive_bl && !a.addScrOnMM_bl) {
            var t = FWDUVPUtils.getViewportMouseCoordinates(e);
            a.isDragging_bl = !0, a.yPositionOnPress = a.scrHandler_do.y, a.lastPresedY = t.screenY, FWDAnimation.killTweensOf(a.scrHandler_do), i.showDisable(), o.addEventListener ? (o.addEventListener("mousemove", a.scrollBarHandlerMoveHandler), o.addEventListener("mouseup", a.scrollBarHandlerEndHandler)) : document.attachEvent && (document.attachEvent("onmousemove", a.scrollBarHandlerMoveHandler), document.attachEvent("onmouseup", a.scrollBarHandlerEndHandler))
        }
    }, this.scrollBarHandlerMoveHandler = function(e) {
        e.preventDefault && e.preventDefault();
        var t = FWDUVPUtils.getViewportMouseCoordinates(e),
            o = a.scrollBarHandlerFinalY + parseInt((a.scrHandler_do.h - a.scrHandlerLines_do.h) / 2);
        a.addScrOnMM_bl ? a.scrollBarHandlerFinalY = Math.round(t.screenY - a.mainThumbsHolder_do.getGlobalY() - a.scrHandler_do.h / 2) : a.scrollBarHandlerFinalY = Math.round(a.yPositionOnPress + t.screenY - a.lastPresedY), a.scrollBarHandlerFinalY >= a.scrTrack_do.h - a.scrHandler_do.h ? a.scrollBarHandlerFinalY = a.scrTrack_do.h - a.scrHandler_do.h : a.scrollBarHandlerFinalY <= 0 && (a.scrollBarHandlerFinalY = 0), a.scrHandler_do.setY(a.scrollBarHandlerFinalY), FWDAnimation.killTweensOf(a.scrHandler_do), FWDAnimation.to(a.scrHandlerLines_do, .8, {
            y: o,
            ease: Quart.easeOut
        }), a.updateScrollBarHandlerAndContent(!0)
    }, a.scrollBarHandlerEndHandler = function(e) {
        var t = FWDUVPUtils.getViewportMouseCoordinates(e);
        a.isDragging_bl = !1, FWDUVPUtils.hitTest(a.scrHandler_do.screen, t.screenX, t.screenY) || (FWDAnimation.killTweensOf(a.scrHandlerLinesN_do), FWDAnimation.killTweensOf(a.scrHandlerLinesS_do), FWDAnimation.to(a.scrHandlerLinesN_do, .8, {
            alpha: 1,
            ease: Expo.easeOut
        }), FWDAnimation.to(a.scrHandlerLinesS_do, .8, {
            alpha: 0,
            ease: Expo.easeOut
        })), i.hideDisable(), FWDAnimation.killTweensOf(a.scrHandler_do), FWDAnimation.to(a.scrHandler_do, .4, {
            y: a.scrollBarHandlerFinalY,
            ease: Quart.easeOut
        }), o.removeEventListener ? (o.removeEventListener("mousemove", a.scrollBarHandlerMoveHandler), o.removeEventListener("mouseup", a.scrollBarHandlerEndHandler)) : document.detachEvent && (document.detachEvent("onmousemove", a.scrollBarHandlerMoveHandler), document.detachEvent("onmouseup", a.scrollBarHandlerEndHandler))
    }, this.updateScrollBarSizeActiveAndDeactivate = function() {
        a.disableForAWhileAfterThumbClick_bl || (a.allowToScrollAndScrollBarIsActive_bl ? (a.allowToScrollAndScrollBarIsActive_bl = !0, a.scrMainHolder_do.setX(a.stageWidth - a.scrMainHolder_do.w), a.scrMainHolder_do.setHeight(a.stageHeight - a.removeFromThumbsHolderHeight), a.scrTrack_do.setHeight(a.scrMainHolder_do.h), a.scrTrackMiddle_do.setHeight(a.scrTrack_do.h - 2 * a.scrTrackTop_do.h), a.scrTrackBottom_do.setY(a.scrTrackMiddle_do.y + a.scrTrackMiddle_do.h), a.scrMainHolder_do.setAlpha(1), a.addScrOnMM_bl || (a.scrHandler_do.setButtonMode(!0), a.scrHandlerLines_do.setButtonMode(!0))) : (a.allowToScrollAndScrollBarIsActive_bl = !1, a.scrMainHolder_do.setX(a.stageWidth - a.scrMainHolder_do.w), a.scrMainHolder_do.setHeight(a.stageHeight - a.removeFromThumbsHolderHeight), a.scrTrack_do.setHeight(a.scrMainHolder_do.h), a.scrTrackMiddle_do.setHeight(a.scrTrack_do.h - 2 * a.scrTrackTop_do.h), a.scrTrackBottom_do.setY(a.scrTrackMiddle_do.y + a.scrTrackMiddle_do.h), a.scrMainHolder_do.setAlpha(.5), a.scrHandler_do.setY(0), a.scrHandler_do.setButtonMode(!1), a.scrHandlerLines_do.setButtonMode(!1)), a.scrHandler_do.setHeight(Math.max(120, Math.round(Math.min(1, a.scrMainHolder_do.h / a.totalThumbsHeight) * a.scrMainHolder_do.h))), a.scrHandlerMiddle_do.setHeight(a.scrHandler_do.h - 2 * a.scrHandlerTop_do.h), a.scrHandlerBottom_do.setY(a.scrHandlerMiddle_do.y + a.scrHandlerMiddle_do.h), FWDAnimation.killTweensOf(a.scrHandlerLines_do), a.scrHandlerLines_do.setY(a.scrollBarHandlerFinalY + parseInt((a.scrHandler_do.h - a.scrHandlerLines_do.h) / 2)), a.scrHandlerBottom_do.setY(a.scrHandler_do.h - a.scrHandlerBottom_do.h))
    }, this.updateScrollBarHandlerAndContent = function(e, t) {
        if (!a.disableForAWhileAfterThumbClick_bl && (a.allowToScrollAndScrollBarIsActive_bl || t)) {
            var o = 0;
            a.isDragging_bl && !a.isMobile_bl ? ("Infinity" == (o = a.scrollBarHandlerFinalY / (a.scrMainHolder_do.h - a.scrHandler_do.h)) ? o = 0 : 1 <= o && (scrollPercent = 1), a.thumbnailsFinalY = -1 * Math.round(o * (a.totalThumbsHeight - a.mainThumbsHolder_do.h))) : (o = a.isSearched_bl ? a.percentScrolled = 0 : a.curId / (a.totalThumbs - 1), a.thumbnailsFinalY = Math.min(0, -1 * Math.round(o * (a.totalThumbsHeight - a.mainThumbsHolder_do.h))), a.scrMainHolder_do && (a.scrollBarHandlerFinalY = Math.round((a.scrMainHolder_do.h - a.scrHandler_do.h) * o), a.scrollBarHandlerFinalY < 0 ? a.scrollBarHandlerFinalY = 0 : a.scrollBarHandlerFinalY > a.scrMainHolder_do.h - a.scrHandler_do.h - 1 && (a.scrollBarHandlerFinalY = a.scrMainHolder_do.h - a.scrHandler_do.h - 1), FWDAnimation.killTweensOf(a.scrHandler_do), FWDAnimation.killTweensOf(a.scrHandlerLines_do), e ? (FWDAnimation.to(a.scrHandler_do, .4, {
                y: a.scrollBarHandlerFinalY,
                ease: Quart.easeOut
            }), FWDAnimation.to(a.scrHandlerLines_do, .8, {
                y: a.scrollBarHandlerFinalY + parseInt((a.scrHandler_do.h - a.scrHandlerLinesN_do.h) / 2),
                ease: Quart.easeOut
            })) : (a.scrHandler_do.setY(a.scrollBarHandlerFinalY), a.scrHandlerLines_do.setY(a.scrollBarHandlerFinalY + parseInt((a.scrHandler_do.h - a.scrHandlerLinesN_do.h) / 2))))), a.lastThumbnailFinalY != a.thumbnailsFinalY && (FWDAnimation.killTweensOf(a.thumbsHolder_do), e ? FWDAnimation.to(a.thumbsHolder_do, .5, {
                y: a.thumbnailsFinalY,
                ease: Quart.easeOut
            }) : a.thumbsHolder_do.setY(a.thumbnailsFinalY)), a.lastThumbnailFinalY = a.thumbnailsFinalY
        }
    }, this.addMouseWheelSupport = function() {
        a.screen.addEventListener ? (a.screen.addEventListener("DOMMouseScroll", a.mouseWheelHandler), a.screen.addEventListener("mousewheel", a.mouseWheelHandler)) : a.screen.attachEvent && a.screen.attachEvent("onmousewheel", a.mouseWheelHandler)
    }, a.mouseWheelHandler = function(e) {
        if (e.preventDefault && e.preventDefault(), a.disableMouseWheel_bl || a.isDragging_bl) return !1;
        if (!a.comboBox_do || !a.comboBox_do.isShowed_bl) {
            var t = e.detail || e.wheelDelta;
            e.wheelDelta && (t *= -1), 0 < t ? a.scrollBarHandlerFinalY += Math.round(160 * a.scollbarSpeedSensitivity * (a.mainThumbsHolder_do.h / a.totalThumbsHeight)) : t < 0 && (a.scrollBarHandlerFinalY -= Math.round(160 * a.scollbarSpeedSensitivity * (a.mainThumbsHolder_do.h / a.totalThumbsHeight))), a.scrollBarHandlerFinalY >= a.scrTrack_do.h - a.scrHandler_do.h ? a.scrollBarHandlerFinalY = a.scrTrack_do.h - a.scrHandler_do.h : a.scrollBarHandlerFinalY <= 0 && (a.scrollBarHandlerFinalY = 0);
            var o = a.scrollBarHandlerFinalY + parseInt((a.scrHandler_do.h - a.scrHandlerLines_do.h) / 2);
            if (FWDAnimation.killTweensOf(a.scrHandler_do), FWDAnimation.killTweensOf(a.scrHandlerLines_do), FWDAnimation.to(a.scrHandlerLines_do, .8, {
                    y: o,
                    ease: Quart.easeOut
                }), FWDAnimation.to(a.scrHandler_do, .5, {
                    y: a.scrollBarHandlerFinalY,
                    ease: Quart.easeOut
                }), a.isDragging_bl = !0, a.updateScrollBarHandlerAndContent(!0), a.isDragging_bl = !1, !e.preventDefault) return !1;
            e.preventDefault()
        }
    }, this.hideAndShow = function(e) {
        "bottom" == a.position_str ? (a.mainHolder_do.setY(-a.stageHeight), FWDAnimation.to(a.mainHolder_do, .8, {
            y: 0,
            ease: Expo.easeInOut
        })) : (a.mainHolder_do.setX(-a.stageWidth), FWDAnimation.to(a.mainHolder_do, .8, {
            x: 0,
            ease: Expo.easeInOut
        }))
    }, this.hide = function(e) {
        a.isShowed_bl = !1, e ? "bottom" == a.position_str && FWDAnimation.to(a.mainHolder_do, .8, {
            y: -a.stageHeight,
            ease: Expo.easeInOut
        }) : (FWDAnimation.killTweensOf(a.mainHolder_do), "bottom" == a.position_str && a.mainHolder_do.setY(-a.stageHeight))
    }, this.show = function(e) {
        a.isShowed_bl = !0, FWDAnimation.isTweening(a.mainHolder_do) || a.hide(!1), e ? "bottom" == a.position_str ? FWDAnimation.to(a.mainHolder_do, .8, {
            y: 0,
            ease: Expo.easeInOut
        }) : a.mainHolder_do.setY(0) : (FWDAnimation.killTweensOf(a.mainHolder_do), a.mainHolder_do.setX(0), a.mainHolder_do.setY(0), clearTimeout(a.disableThumbsId_to), a.disableThumbsId_to = setTimeout(function() {
            a.disableThumbs_bl = !1
        }, 200), a.disableThumbs_bl = !0)
    }, a.updateHEXColors = function(e, t) {
        a.normalColor_str = e, a.selectedColor_str = t;
        try {
            FWDUVPUtils.changeCanvasHEXColor(a.scrLinesN_img, a.mainhandlerN_canvas, a.selectedColor_str);
            var o = FWDUVPUtils.changeCanvasHEXColor(a.scrHandlerLinesS_img, a.scrubberLines_s_canvas.canvas, a.selectedColor_str, !0);
            a.scrHandlerLinesS_do.getStyle().background = "url('" + o.src + "') repeat-x", FWDUVPUtils.changeCanvasHEXColor(a.scrDragTop_img, a.mainScrubberDragTop_canvas, a.normalColor_str);
            var s = FWDUVPUtils.changeCanvasHEXColor(a.middleImage, a.scrubberDragMiddle_canvas.canvas, a.normalColor_str, !0);
            a.scrHandlerMiddle_do.getStyle().background = "url('" + s.src + "') repeat-y";
            var i = FWDUVPUtils.changeCanvasHEXColor(a.bottomImage, a.scrubberDragBottom_canvas.canvas, a.normalColor_str, !0);
            a.scrHandlerBottom_do.getStyle().background = "url('" + i.src + "') repeat-y"
        } catch (e) {}
        a.nextButton_do && a.nextButton_do.updateHEXColors(e, t), a.prevButton_do && a.prevButton_do.updateHEXColors(e, t), a.loopButton_do && a.loopButton_do.updateHEXColors(e, t), a.shuffleButton_do && a.shuffleButton_do.updateHEXColors(e, t), a.input_do && (a.input_do.getStyle().color = a.normalColor_str), a.playlistName_do && (a.playlistName_do.getStyle().color = a.normalColor_str)
    }, this.init()
};
t.setPrototype = function() {
    t.prototype = new FWDUVPDisplayObject("div", "absolute", "visible")
}, t.THUMB_MOUSE_UP = "thumbMouseOut", t.PLAY_PREV_VIDEO = "playPrevVideo", t.PLAY_NEXT_VIDEO = "playNextVideo", t.DISABLE_LOOP = "disableLoop", t.ENABLE_LOOP = "enableLoop", t.DISABLE_SHUFFLE = "disableShuffle", t.ENABLE_SHUFFLE = "enableShuffle", t.CHANGE_PLAYLIST = "changePlaylist", t.prototype = null, o.FWDUVPPlaylist = t
}(window),
function(e) {
var _ = function(o, e, t, s, i, n, l, a, r, d, u, h) {
    var c = this;
    _.prototype;
    this.mainImageHolder_do = null, this.imageHolder_do = null, this.normalImage_do = null, this.dumy_do = null, this.text_do = null, this.backgroundImagePath_str = t, this.thumbnailNormalBackgroundColor_str = s, this.thumbnailHoverBackgroundColor_str = i, this.thumbnailDisabledBackgroundColor_str = n, this.htmlContent_str = d, this.htmlText_str = u.toLowerCase(), this.curState_str = "none", this.id = e, this.padding = r, this.imageOriginalW, this.imageOriginalH, this.finalX, this.finalY, this.thumbImageWidth = l, this.thumbImageHeight = a, this.finalW, this.finalH = 2 * c.padding + c.thumbImageHeight, this.imageFinalX, this.imageFinalY, this.imageFinalW, this.imageFinalH, this.mouseX, this.mouseY, this.showId_to, this.disableForAWhileId_to, this.hasImage_bl = !1, this.isSelected_bl = !1, this.isDisabled_bl = !1, this.disableForAWhile_bl = !1, this.hasToolTipShowed_bl = !1, this.hasCanvas_bl = FWDUVPlayer.hasCanvas, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.hasDispatchedOverEvent_bl = !1, this.showThumbnail_bl = h, this.init = function() {
        c.setupMainContainers(), c.setButtonMode(!0), c.setNormalState(), c.hasPointerEvent_bl ? (c.screen.addEventListener("pointerover", c.onMouseOver), c.screen.addEventListener("pointerout", c.onMouseOut), c.screen.addEventListener("pointerup", c.onMouseUp)) : c.screen.addEventListener && (c.screen.addEventListener("mouseover", c.onMouseOver), c.screen.addEventListener("mouseout", c.onMouseOut), c.screen.addEventListener("mouseup", c.onMouseUp), c.screen.addEventListener("touchend", c.onMouseUp))
    }, this.onMouseUp = function(e) {
        o.isScrollingOnMove_bl || c.isDisabled_bl || 2 == e.button || (e.preventDefault && e.preventDefault(), c.dispatchEvent(_.MOUSE_UP, {
            id: c.id
        }))
    }, this.onMouseOver = function(e) {
        if (!e.pointerType || e.pointerType == e.MSPOINTER_TYPE_MOUSE) {
            if (c.isDisabled_bl) return;
            c.setSelectedState(!0)
        }
    }, this.onMouseOut = function(e) {
        if (!e.pointerType || e.pointerType == e.MSPOINTER_TYPE_MOUSE) {
            if (c.isDisabled_bl) return;
            c.setNormalState(!0)
        }
    }, this.setupMainContainers = function() {
        c.mainImageHolder_do = new FWDUVPDisplayObject("div"), c.mainImageHolder_do.getStyle().background = "url('" + c.backgroundImagePath_str + "')", c.mainImageHolder_do.setX(c.padding), c.mainImageHolder_do.setY(c.padding), c.mainImageHolder_do.setWidth(c.thumbImageWidth), c.mainImageHolder_do.setHeight(c.thumbImageHeight), c.imageHolder_do = new FWDUVPDisplayObject("div"), c.text_do = new FWDUVPDisplayObject("div"), c.text_do.hasTransform3d_bl = !1, c.text_do.hasTransform2d_bl = !1, c.text_do.setHeight(c.finalH - 6), c.text_do.setBackfaceVisibility(), c.text_do.getStyle().fontFamily = "Arial", c.text_do.getStyle().fontSize = "12px", c.text_do.getStyle().color = c.fontColor_str, c.text_do.getStyle().fontSmoothing = "antialiased", c.text_do.getStyle().webkitFontSmoothing = "antialiased", c.text_do.getStyle().textRendering = "optimizeLegibility", c.showThumbnail_bl ? c.text_do.setX(2 * c.padding + c.thumbImageWidth + 4) : c.text_do.setX(2 * c.padding), c.text_do.setInnerHTML(c.htmlContent_str), c.addChild(c.text_do), c.dumy_do = new FWDUVPDisplayObject("div"), c.dumy_do.getStyle().width = "100%", c.dumy_do.getStyle().height = "100%", FWDUVPUtils.isIE && (c.dumy_do.setBkColor("#FF0000"), c.dumy_do.setAlpha(.01)), c.showThumbnail_bl && c.addChild(c.mainImageHolder_do), c.mainImageHolder_do.addChild(c.imageHolder_do), c.addChild(c.dumy_do)
    }, this.updateText = function(e) {
        try {
            c.htmlContent_str = e, c.text_do.setInnerHTML(c.htmlContent_str)
        } catch (e) {}
    }, this.setImage = function(e) {
        var t;
        (c.normalImage_do = new FWDUVPDisplayObject("img"), c.normalImage_do.setScreen(e), c.imageOriginalW = c.normalImage_do.w, c.imageOriginalH = c.normalImage_do.h, c.resizeImage(), c.imageHolder_do.setX(parseInt(c.thumbImageWidth / 2)), c.imageHolder_do.setY(parseInt(c.thumbImageHeight / 2)), c.imageHolder_do.setWidth(0), c.imageHolder_do.setHeight(0), c.normalImage_do.setX(-parseInt(c.normalImage_do.w / 2)), c.normalImage_do.setY(-parseInt(c.normalImage_do.h / 2)), FWDAnimation.to(c.imageHolder_do, .8, {
            x: 0,
            y: 0,
            w: c.thumbImageWidth,
            h: c.thumbImageHeight,
            ease: Expo.easeInOut
        }), c.normalImage_do.setAlpha(0), c.isMobile_bl) ? (t = c.id == o.curId ? .3 : 1, FWDAnimation.to(c.normalImage_do, .8, {
            alpha: t,
            x: c.imageFinalX,
            y: c.imageFinalY,
            ease: Expo.easeInOut
        })) : FWDAnimation.to(c.normalImage_do, .8, {
            alpha: 1,
            x: c.imageFinalX,
            y: c.imageFinalY,
            ease: Expo.easeInOut
        });
        c.imageHolder_do.addChild(c.normalImage_do), this.hasImage_bl = !0
    }, this.resizeAndPosition = function(e) {
        c.showThumbnail_bl ? c.text_do.setWidth(c.finalW - (2 * c.padding + c.thumbImageWidth) - 16) : c.text_do.setWidth(c.finalW - 2 * c.padding - 16), c.setWidth(c.finalW), c.setHeight(c.finalH), e ? FWDAnimation.to(c, .6, {
            x: c.finalX,
            y: c.finalY,
            ease: Expo.easeInOut
        }) : (FWDAnimation.killTweensOf(c), c.setX(c.finalX), c.setY(c.finalY)), c.resizeImage()
    }, this.resizeImage = function(e) {
        if (c.normalImage_do) {
            c.isMobile_bl ? 1 == c.normalImage_do.alpha || c.isDisabled_bl || c.normalImage_do.setAlpha(1) : 1 == c.imageHolder_do.alpha || c.isDisabled_bl || c.imageHolder_do.setAlpha(1);
            var t, o = c.thumbImageWidth / c.imageOriginalW,
                s = c.thumbImageHeight / c.imageOriginalH;
            t = o <= s ? o : s, c.imageFinalW = Math.ceil(t * c.imageOriginalW), c.imageFinalH = Math.ceil(t * c.imageOriginalH), c.imageFinalX = Math.round((c.thumbImageWidth - c.imageFinalW) / 2), c.imageFinalY = Math.round((c.thumbImageHeight - c.imageFinalH) / 2), c.normalImage_do.setX(c.imageFinalX), c.normalImage_do.setY(c.imageFinalY), c.normalImage_do.setWidth(c.imageFinalW), c.normalImage_do.setHeight(c.imageFinalH)
        }
    }, this.setNormalState = function(e) {
        "normal" != c.curState_str && (c.curState_str = "normal", e ? FWDAnimation.to(c.screen, .8, {
            css: {
                backgroundColor: c.thumbnailNormalBackgroundColor_str
            },
            ease: Expo.easeOut
        }) : (FWDAnimation.killTweensOf(c.screen), c.getStyle().backgroundColor = c.thumbnailNormalBackgroundColor_str))
    }, this.setSelectedState = function(e) {
        "selected" != c.curState_str && (c.curState_str = "selected", e ? FWDAnimation.to(c.screen, .8, {
            css: {
                backgroundColor: c.thumbnailHoverBackgroundColor_str
            },
            ease: Expo.easeOut
        }) : (FWDAnimation.killTweensOf(c.screen), c.getStyle().backgroundColor = c.thumbnailNormalBackgroundColor_str))
    }, this.setDisabledState = function(e) {
        "disabled" != c.curState_str && (c.curState_str = "disabled", e ? FWDAnimation.to(c.screen, .8, {
            css: {
                backgroundColor: c.thumbnailDisabledBackgroundColor_str
            },
            ease: Expo.easeOut
        }) : (FWDAnimation.killTweensOf(c.screen), c.getStyle().backgroundColor = c.thumbnailNormalBackgroundColor_str))
    }, this.enable = function() {
        c.isDisabled_bl && (c.isDisabled_bl = !1, c.setButtonMode(!0), c.setNormalState(!0), c.isMobile_bl ? c.normalImage_do && c.normalImage_do.setAlpha(1) : FWDAnimation.to(c.imageHolder_do, .6, {
            alpha: 1
        }))
    }, this.disable = function() {
        c.isDisabled_bl || (c.disableForAWhile_bl = !0, clearTimeout(c.disableForAWhileId_to), c.disableForAWhileId_to = setTimeout(function() {
            c.disableForAWhile_bl = !1
        }, 200), c.isDisabled_bl = !0, c.setButtonMode(!1), c.setDisabledState(!0), c.isMobile_bl ? c.normalImage_do && c.normalImage_do.setAlpha(.3) : FWDAnimation.to(c.imageHolder_do, .6, {
            alpha: .3
        }))
    }, this.destroy = function() {
        FWDAnimation.killTweensOf(c), c.normalImage_do && (FWDAnimation.killTweensOf(c.normalImage_do), c.normalImage_do.destroy()), FWDAnimation.killTweensOf(c.imageHolder_do), c.imageHolder_do.destroy(), c.dumy_do.destroy(), c.text_do.destroy(), c.backgroundImagePath_str = t, c.imageHolder_do = null, c.normalImage_do = null, c.dumy_do = null, c.text_do = null, c.htmlContent_str = null, c.htmlText_str = null, c.curState_str = null
    }, this.init()
};
_.setPrototype = function() {
    _.prototype = new FWDUVPDisplayObject("div")
}, _.SHOW_TOOL_TIP = "showToolTip", _.HIDE_TOOL_TIP = "hideToolTip", _.MOUSE_UP = "onMouseUp", _.prototype = null, e.FWDUVPPlaylistThumb = _
}(window),
function(e) {
var l = function(e, t, o, s, i) {
    var n = this;
    l.prototype;
    this.buttonRef_do = null, this.bkPath_str = e, this.pointerPath_str = t, this.text_do = null, this.pointer_do = null, this.fontColor_str = o, this.position_str = s, this.id = -1, "bottom" == this.position_str ? (this.pointerWidth = 7, this.pointerHeight = 4) : (this.pointerWidth = 4, this.pointerHeight = 7), this.maxWidth = i, this.showWithDelayId_to, this.isMobile_bl = FWDUVPUtils.isMobile, this.isShowed_bl = !0, this.init = function() {
        n.setOverflow("visible"), n.setupMainContainers(), n.hide(), n.getStyle().background = "url('" + n.bkPath_str + "')", n.getStyle().zIndex = 9999999999999
    }, this.setupMainContainers = function() {
        n.text_do = new FWDUVPDisplayObject("div"), n.text_do.hasTransform3d_bl = !1, n.text_do.hasTransform2d_bl = !1, n.text_do.setBackfaceVisibility(), n.text_do.setDisplay("inline-block"), n.text_do.getStyle().fontFamily = "Arial", n.text_do.getStyle().fontSize = "12px", n.text_do.getStyle().color = n.fontColor_str, n.text_do.getStyle().fontSmoothing = "antialiased", n.text_do.getStyle().webkitFontSmoothing = "antialiased", n.text_do.getStyle().textRendering = "optimizeLegibility", n.text_do.getStyle().lineHeight = "16px", n.text_do.getStyle().padding = "6px", n.text_do.getStyle().paddingTop = "4px", n.text_do.getStyle().paddingBottom = "4px", n.text_do.getStyle().textAlign = "center", n.addChild(n.text_do);
        var e = new Image;
        e.src = n.pointerPath_str, n.pointer_do = new FWDUVPDisplayObject("img"), n.pointer_do.setScreen(e), n.pointer_do.setWidth(n.pointerWidth), n.pointer_do.setHeight(n.pointerHeight), n.addChild(n.pointer_do)
    }, this.setLabel = function(e, t) {
        n.id != t && (n.setVisible(!1), n.text_do.getStyle().whiteSpace = "normal", n.setWidth(n.maxWidth), n.text_do.setInnerHTML(e)), setTimeout(function() {
            if (null != n) {
                var e = n.text_do.screen.getBoundingClientRect().width;
                (e = e < 8 && null != e ? (n.setHeight(Math.round(100 * n.text_do.screen.getBoundingClientRect().height)), Math.round(100 * e)) : (n.setHeight(n.text_do.screen.offsetHeight), Math.round(n.text_do.screen.offsetWidth))) < n.w - 15 && n.setWidth(e), e < n.maxWidth && (n.text_do.getStyle().whiteSpace = "nowrap"), n.positionPointer(), n.id = t
            }
        }, 60)
    }, this.positionPointer = function(e) {
        var t, o;
        e || (e = 0), o = "bottom" == n.position_str ? (t = parseInt((n.w - n.pointerWidth) / 2) + e, n.h) : (t = n.w, parseInt((n.h - n.pointerHeight) / 2)), n.pointer_do.setX(t), n.pointer_do.setY(o)
    }, this.show = function() {
        n.isShowed_bl || (n.isShowed_bl = !0, FWDAnimation.killTweensOf(n), clearTimeout(n.showWithDelayId_to), n.showWithDelayId_to = setTimeout(n.showFinal, 100))
    }, this.showFinal = function() {
        n.setVisible(!0), n.setAlpha(0), FWDAnimation.to(n, .4, {
            alpha: 1,
            onComplete: function() {
                n.setVisible(!0)
            },
            ease: Quart.easeOut
        })
    }, this.hide = function() {
        n.isShowed_bl && (clearTimeout(n.showWithDelayId_to), FWDAnimation.killTweensOf(n), n.setVisible(!1), n.isShowed_bl = !1)
    }, this.init()
};
l.setPrototype = function() {
    l.prototype = null, l.prototype = new FWDUVPDisplayObject("div", "fixed")
}, l.CLICK = "onClick", l.MOUSE_DOWN = "onMouseDown", l.prototype = null, e.FWDUVPPlaylistToolTip = l
}(window),
function() {
var p = function(i, e, t, o, s, n, l, a, r, d, u, h, c, _) {
    var f = this;
    p.prototype;
    this.closeButton_do, this.image_do, this.imageSource = e, this.link = s, this.target = n, this.start = t, this.end = o, this.google_ad_client = a, this.google_ad_slot = r, this.originalW = this.google_ad_width = d, this.originalH = this.google_ad_height = u, this.finalW = 0, this.finalH = 0, this.isImage_bl = !Boolean(this.google_ad_client), this.id = l, this.showPopupAdsCloseButton_bl = _, this.popupAddCloseNPath_str = h, this.popupAddCloseSPath_str = c, this.isClosed_bl = !1, this.isLoaded_bl = !1, this.isShowed_bl = !1, this.init = function() {
        f.setBkColor("rgba(0, 0, 0, 0.6)"), f.setX(-5e3), f.showPopupAdsCloseButton_bl && (FWDUVPSimpleSizeButton.setPrototype(), f.closeButton_do = new FWDUVPSimpleSizeButton(f.popupAddCloseNPath_str, f.popupAddCloseSPath_str, 21, 21), f.closeButton_do.addListener(FWDUVPSimpleSizeButton.MOUSE_UP, f.closeClickButtonCloseHandler)), f.isImage_bl ? (this.image = new Image, this.image.src = this.imageSource, this.image.onload = this.onLoadHandler) : (f.isLoaded_bl = !0, f.setWidth(f.originalW), f.setHeight(f.originalH)), f.closeButton_do && (f.addChild(f.closeButton_do), f.closeButton_do.setX(-300)), f.link && f.setButtonMode(!0)
    }, this.closeClickButtonCloseHandler = function() {
        f.hide(), f.isClosed_bl = !0
    }, this.clickHandler = function() {
        f.link && (i.parent.pause(), window.open(f.link, f.target))
    }, this.onLoadHandler = function() {
        f.originalW = f.image.width, f.originalH = f.image.height, f.image_do = new FWDUVPDisplayObject("img"), f.image_do.setScreen(f.image), f.image_do.setWidth(f.originalW), f.image_do.setHeight(f.originalH), f.addChild(f.image_do), f.isLoaded_bl = !0, f.closeButton_do && (f.addChild(f.closeButton_do), f.closeButton_do.setX(-300)), f.screen.addEventListener ? f.image_do.screen.addEventListener("click", f.clickHandler) : f.image_do.screen.attachEvent("onclick", f.clickHandler)
    }, this.hide = function(e) {
        if (this.isShowed_bl) {
            this.isShowed_bl = !1;
            var t = Math.min(1, i.parent.tempVidStageWidth / f.originalW);
            parseInt(t * f.originalH);
            finalY = parseInt(i.parent.tempVidStageHeight), i.setY(finalY), f.setX(-5e3), FWDAnimation.killTweensOf(i), e ? (i.removeChild(f), i.setWidth(0), i.setHeight(0)) : (f.setWidth(0), f.setHeight(0), i.setVisible(!1), f.setVisible(!1))
        }
    }, this.show = function() {
        this.isShowed_bl || this.isClosed_bl || !f.isLoaded_bl || (this.isShowed_bl = !0, f.setX(0), setTimeout(function() {
            if (FWDAnimation.killTweensOf(i), i.setVisible(!0), f.setVisible(!0), !f.isImage_bl && !f.isGooglAdCreated_bl) {
                f.isGooglAdCreated_bl = !0, window.google_ad_client = f.google_ad_client, window.google_ad_slot = f.google_ad_slot, window.google_ad_width = f.originalW, window.google_ad_height = f.originalH, f.container = new FWDUVPTransformDisplayObject("div"), f.container.setWidth(f.originalW), f.container.setHeight(f.originalH), f.addChild(f.container);
                var t = document.write;
                document.write = function(e) {
                    f.container.screen.innerHTML = e, document.write = t
                };
                var e = document.createElement("script");
                e.type = "text/javascript", -1 != location.href.indexOf("https") ? e.src = "https://pagead2.googlesyndication.com/pagead/show_ads.js" : e.src = "http://pagead2.googlesyndication.com/pagead/show_ads.js", document.body.appendChild(e), f.closeButton_do && (f.addChild(f.closeButton_do), f.closeButton_do.setX(-300))
            }
            var o = Math.min(1, i.parent.tempVidStageWidth / f.originalW),
                s = parseInt(o * f.originalH) - 2;
            i.parent.controller_do.isShowed_bl ? finalY = parseInt(i.parent.tempVidStageHeight - i.parent.controller_do.h - f.originalH * o + 2 + s) : finalY = parseInt(i.parent.tempVidStageHeight - f.originalH * o + 2 + s), i.setY(finalY), f.resizeAndPosition(!0)
        }, 100))
    }, this.resizeAndPosition = function(e) {
        if (f.isLoaded_bl && !f.isClosed_bl && f.isShowed_bl) {
            var t, o;
            FWDUVPUtils.isIEAndLessThen9;
            o = Math.min(1, i.parent.tempVidStageWidth / f.originalW), f.finalW = parseInt(o * f.originalW), f.finalH = parseInt(o * f.originalH), f.finalW == f.prevFinalW && f.finalH == f.prevFinalH || (f.setWidth(f.finalW), f.setHeight(f.finalH), f.isImage_bl ? (f.image_do.setWidth(f.finalW), f.image_do.setHeight(f.finalH)) : f.container && (f.container.setScale2(o), f.container.setX((f.finalW - f.originalW) / 2), f.container.setY((f.finalH - f.originalH) / 2)), t = i.parent.controller_do ? i.parent.controller_do.isShowed_bl ? parseInt(i.parent.tempVidStageHeight - i.parent.controller_do.h - f.originalH * o - 10) : parseInt(i.parent.tempVidStageHeight - f.originalH * o - 10) : parseInt(i.parent.tempVidStageHeight - f.originalH * o), i.setX(parseInt((i.parent.tempVidStageWidth - f.finalW) / 2)), FWDAnimation.killTweensOf(i), e ? FWDAnimation.to(i, .8, {
                y: t,
                ease: Expo.easeInOut
            }) : i.setY(t), f.closeButton_do && (f.closeButton_do.setY(2), f.closeButton_do.setX(parseInt(f.finalW - 21 - 2))), f.prevFinalW = f.finalW, f.prevFinallH = f.finalH, i.setWidth(f.finalW), i.setHeight(f.finalH))
        }
    }, f.init()
};
p.setPrototype = function() {
    p.prototype = new FWDUVPDisplayObject("div", "absolute", "visible")
}, p.MOUSE_OVER = "onMouseOver", p.MOUSE_OUT = "onMouseOut", p.CLICK = "onClick", p.prototype = null, window.FWDUVPPopupAddButton = p
}(window),
function(e) {
var o = function(s, e, t) {
    var i = this;
    o.prototype;
    this.img_img = new Image, this.img_do = null, this.imgW = 0, this.imgH = 0, this.finalW = 0, this.finalH = 0, this.finalX = 0, this.finalY = 0, this.curPath_str, this.posterBackgroundColor_str = t, this.isTransparent_bl = !1, this.showPoster_bl = e, this.showOrLoadOnMobile_bl = !1, this.isShowed_bl = !0, this.allowToShow_bl = !0, this.isMobile_bl = FWDUVPUtils.isMobile, this.init = function() {
        i.img_img = new Image, i.img_do = new FWDUVPDisplayObject("img"), i.hide()
    }, this.positionAndResize = function() {
        if (s.vidStageWidth && (i.setWidth(s.tempVidStageWidth), i.setHeight(s.tempVidStageHeight), i.imgW)) {
            var e, t = s.tempVidStageWidth / i.imgW,
                o = s.tempVidStageHeight / i.imgH;
            e = t <= o ? t : o, i.finalW = Math.round(e * i.imgW), i.finalH = Math.round(e * i.imgH), i.finalX = parseInt((s.tempVidStageWidth - i.finalW) / 2), i.finalY = parseInt((s.tempVidStageHeight - i.finalH) / 2), i.img_do.setX(i.finalX), i.img_do.setY(i.finalY), i.img_do.setWidth(i.finalW), i.img_do.setHeight(i.finalH)
        }
    }, this.setPoster = function(e) {
        if (i.curPath_str != e) {
            if (e && "" == FWDUVPUtils.trim(e) || "none" == e) return i.showOrLoadOnMobile_bl = !0, i.isTransparent_bl = !0, void i.show();
            if ("youtubemobile" == e) return i.isTransparent_bl = !1, i.showOrLoadOnMobile_bl = !1, i.img_img.src = null, void(i.imgW = 0);
            if (e == i.curPath_str ? (i.isTransparent_bl = !1, i.showOrLoadOnMobile_bl = !0) : i.isTransparent_bl = !1, i.isTransparent_bl ? i.getStyle().backgroundColor = "transparent" : i.getStyle().backgroundColor = i.posterBackgroundColor_str, i.isTransparent_bl = !1, i.showOrLoadOnMobile_bl = !0, i.curPath_str = e, i.allowToShow_bl && (i.isShowed_bl = !1), e) {
                try {
                    i.removeChild(i.img_do)
                } catch (e) {}
                i.img_img = new Image, i.img_img.onload = i.posterLoadHandler, i.img_img.src = i.curPath_str
            }
        }
    }, this.posterLoadHandler = function(e) {
        i.imgW = i.img_img.width, i.imgH = i.img_img.height, i.img_do.setScreen(i.img_img), i.addChild(i.img_do), i.isShowed_bl && (i.positionAndResize(), i.show())
    }, this.show = function(e) {
        i.allowToShow_bl && !i.isShowed_bl && i.showOrLoadOnMobile_bl && (i.isShowed_bl = !0, i.isTransparent_bl ? 0 != i.alpha && i.setAlpha(0) : 1 != i.alpha && i.setAlpha(1), i.setVisible(!0), i.isMobile_bl || i.isTransparent_bl || (FWDAnimation.killTweensOf(i), i.setAlpha(0), FWDAnimation.to(i, .6, {
            alpha: 1,
            delay: .4
        })), i.positionAndResize())
    }, this.hide = function(e) {
        (i.isShowed_bl || e) && (FWDAnimation.killTweensOf(i), i.isShowed_bl = !1, i.setVisible(!1))
    }, this.init()
};
o.setPrototype = function() {
    o.prototype = new FWDUVPDisplayObject("div")
}, o.prototype = null, e.FWDUVPPoster = o
}(window),
function(e) {
var r = function(e, t, o, s, i, n, l) {
    var a = this;
    r.prototype;
    a.main_do, a.preloaderPostion = t, a.backgroundColor = s, a.fillColor = i, a.radius = o, a.strokeSize = n, this.animDuration = l || 300, this.strtAngle = 270, this.countAnimation = 0, this.isShowed_bl = !0, this.slideshowAngle = {
        n: 0
    }, this.init = function() {
        a.main_do = new FWDUVPDisplayObject("div"), a.main_do.setOverflow("visible"), a.main_do.setWidth(2 * a.radius + a.strokeSize), a.main_do.setHeight(2 * a.radius + a.strokeSize), a.addChild(a.main_do), a.setOverflow("visible"), a.setWidth(2 * a.radius + a.strokeSize), a.setHeight(2 * a.radius + a.strokeSize), this.bkCanvas = new FWDUVPDisplayObject("canvas"), this.bkCanvasContext = this.bkCanvas.screen.getContext("2d"), this.fillCircleCanvas = new FWDUVPDisplayObject("canvas"), this.fillCircleCanvasContext = this.fillCircleCanvas.screen.getContext("2d"), a.main_do.screen.style.transformOrigin = "50% 50%", a.main_do.addChild(this.bkCanvas), a.main_do.addChild(this.fillCircleCanvas), a.drawBackground(), a.drawFill(), a.hide()
    }, this.positionAndResize = function() {
        "bottomleft" == a.preloaderPostion ? (a.setX(e.offsetPreloader), a.setY(e.stageHeight - a.h - e.offsetPreloader)) : "bottomright" == a.preloaderPostion ? (a.setX(e.stageWidth - a.w - e.offsetPreloader), a.setY(e.stageHeight - a.h - e.offsetPreloader)) : "topright" == a.preloaderPostion ? (a.setX(e.stageWidth - a.w - e.offsetPreloader), a.setY(e.offsetPreloader)) : "topleft" == a.preloaderPostion ? (a.setX(e.offsetPreloader), a.setY(e.offsetPreloader)) : "center" == a.preloaderPostion && (a.setX(Math.round(e.stageWidth - a.w) / 2), a.setY(Math.round(Math.min(e.stageHeight, e.viewportSize.h) - a.h) / 2))
    }, this.drawBackground = function() {
        this.bkCanvas.screen.width = 2 * this.radius + 2 * a.strokeSize, this.bkCanvas.screen.height = 2 * this.radius + 2 * a.strokeSize, this.bkCanvasContext.lineWidth = this.thicknessSize, this.bkCanvasContext.translate(a.strokeSize / 2, a.strokeSize / 2), this.bkCanvasContext.shadowColor = "#333333", this.bkCanvasContext.shadowBlur = 1, this.bkCanvasContext.lineWidth = a.strokeSize, this.bkCanvasContext.strokeStyle = this.backgroundColor, this.bkCanvasContext.beginPath(), this.bkCanvasContext.arc(this.radius, this.radius, this.radius, Math.PI / 180 * 0, Math.PI / 180 * 360, !1), this.bkCanvasContext.stroke(), this.bkCanvasContext.closePath()
    }, this.drawFill = function() {
        a.fillCircleCanvas.screen.width = 2 * a.radius + 2 * a.strokeSize, a.fillCircleCanvas.screen.height = 2 * a.radius + 2 * a.strokeSize, a.fillCircleCanvasContext.lineWidth = a.thicknessSize, a.fillCircleCanvasContext.translate(a.strokeSize / 2, a.strokeSize / 2), a.fillCircleCanvasContext.lineWidth = a.strokeSize, a.fillCircleCanvasContext.strokeStyle = a.fillColor, a.fillCircleCanvasContext.beginPath(), a.fillCircleCanvasContext.arc(a.radius, a.radius, a.radius, Math.PI / 180 * a.strtAngle, Math.PI / 180 * (a.strtAngle + a.slideshowAngle.n), !1), a.fillCircleCanvasContext.stroke(), a.fillCircleCanvasContext.closePath()
    }, this.startSlideshow = function() {
        null != a && (FWDAnimation.killTweensOf(a.slideshowAngle), FWDAnimation.to(a.slideshowAngle, a.animDuration, {
            n: 360,
            onUpdate: a.drawFill,
            onComplete: a.stopSlideshow
        }))
    }, this.stopSlideshow = function() {
        FWDAnimation.killTweensOf(a.slideshowAngle), FWDAnimation.to(a.slideshowAngle, .8, {
            n: 0,
            onupdate: a.drawFill,
            onUpdate: a.drawFill,
            ease: Expo.easiInOut
        })
    }, this.startPreloader = function() {
        a.stopPreloader(), a.slideshowAngle = {
            n: 0
        }, FWDAnimation.to(a.slideshowAngle, a.animDuration, {
            n: 360,
            onUpdate: a.drawFill,
            repeat: 100,
            yoyo: !0,
            ease: Expo.easInOut
        }), FWDAnimation.to(a.main_do.screen, a.animDuration, {
            rotation: 360,
            repeat: 100
        })
    }, this.stopPreloader = function() {
        FWDAnimation.killTweensOf(a.slideshowAngle), FWDAnimation.killTweensOf(a.main_do.screen), FWDAnimation.to(a.main_do.screen, 1e-5, {
            rotation: 0
        })
    }, this.show = function() {
        a.isShowed_bl || (a.setVisible(!0), FWDAnimation.killTweensOf(a), FWDAnimation.to(a, 1, {
            alpha: 1,
            delay: .2
        }), a.stopPreloader(), a.startPreloader(), a.isShowed_bl = !0)
    }, this.hide = function(e) {
        a.isShowed_bl && (FWDAnimation.killTweensOf(this), e ? FWDAnimation.to(this, .2, {
            alpha: 0,
            onComplete: a.onHideComplete
        }) : (a.setVisible(!1), a.setAlpha(0)), a.isShowed_bl = !1)
    }, this.onHideComplete = function() {
        a.setVisible(!1), a.stopPreloader(), a.dispatchEvent(r.HIDE_COMPLETE)
    }, this.init()
};
r.setPrototype = function() {
    r.prototype = new FWDUVPDisplayObject("div")
}, r.HIDE_COMPLETE = "hideComplete", r.prototype = null, e.FWDUVPPreloader = r
}(window),
function(e) {
var l = function(e, t, o, s, i) {
    var n = this;
    l.prototype;
    this.imageSource_img = e, this.image_sdo = null, this.segmentWidth = t, this.segmentHeight = o, this.totalSegments = s, this.animDelay = i || 300, this.count = 0, this.delayTimerId_int, this.isShowed_bl = !1, this.init = function() {
        n.setWidth(n.segmentWidth), n.setHeight(n.segmentHeight), n.image_sdo = new FWDUVPDisplayObject("img"), n.image_sdo.setScreen(n.imageSource_img), n.addChild(n.image_sdo), n.hide(!1)
    }, this.start = function() {
        null != n && (clearInterval(n.delayTimerId_int), n.delayTimerId_int = setInterval(n.updatePreloader, n.animDelay))
    }, this.stop = function() {
        clearInterval(n.delayTimerId_int)
    }, this.updatePreloader = function() {
        if (null != n) {
            n.count++, n.count > n.totalSegments - 1 && (n.count = 0);
            var e = n.count * n.segmentWidth;
            n.image_sdo.setX(-e)
        }
    }, this.show = function() {
        n.isShowed_bl || (n.setVisible(!0), n.start(), FWDAnimation.killTweensOf(n), FWDAnimation.to(n, 1, {
            alpha: 1,
            delay: .2
        }), n.isShowed_bl = !0)
    }, this.hide = function(e) {
        n.isShowed_bl && (FWDAnimation.killTweensOf(this), e ? FWDAnimation.to(this, 1, {
            alpha: 0,
            onComplete: n.onHideComplete
        }) : (n.setVisible(!1), n.setAlpha(0)), n.isShowed_bl = !1)
    }, this.onHideComplete = function() {
        n.setVisible(!1), n.stop(), n.dispatchEvent(l.HIDE_COMPLETE)
    }, this.init()
};
l.setPrototype = function() {
    l.prototype = new FWDUVPDisplayObject("div")
}, l.HIDE_COMPLETE = "hideComplete", l.prototype = null, e.FWDUVPPreloader2 = l
}(window),
function(e) {
var t = function(e, s) {
    var i = this;
    t.prototype;
    this.parent = e, this.main_do = null, this.reader = null, this.subtitiles_ar = null, this.totalAds = 0, i.popupAds_ar, i.popupAdsButtons_ar, this.hasText_bl = !1, this.isLoaded_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.showSubtitleByDefault_bl = s.showSubtitleByDefault_bl, i.normalButtonsColor_str = s.normalButtonsColor_str, i.selectedButtonsColor_str = s.selectedButtonsColor_str, this.setSizeOnce_bl = !1, i.init = function() {
        -1 != s.skinPath_str.indexOf("hex_white") && (i.selectedButtonsColor_str = "#FFFFFF"), i.setOverflow("visible"), i.getStyle().cursor = "default", i.setVisible(!1)
    }, this.resetPopups = function(e) {
        var t;
        i.hideAllPopupButtons(!0), i.popupAds_ar = e, i.totalAds = i.popupAds_ar.length, i.popupAdsButtons_ar = [];
        for (var o = 0; o < i.totalAds; o++) FWDUVPPopupAddButton.setPrototype(), t = new FWDUVPPopupAddButton(i, i.popupAds_ar[o].source, i.popupAds_ar[o].start, i.popupAds_ar[o].end, i.popupAds_ar[o].link, i.popupAds_ar[o].trget, o, i.popupAds_ar[o].google_ad_client, i.popupAds_ar[o].google_ad_slot, i.popupAds_ar[o].google_ad_width, i.popupAds_ar[o].google_ad_height, s.popupAddCloseNPath_str, s.popupAddCloseSPath_str, s.showPopupAdsCloseButton_bl), i.popupAdsButtons_ar[o] = t, i.addChild(t)
    }, this.update = function(e) {
        if (0 != i.totalAds)
            for (var t, o = 0; o < i.totalAds; o++) e >= (t = i.popupAdsButtons_ar[o]).start && e <= t.end ? t.show() : t.hide()
    }, this.position = function(e) {
        if (0 != i.totalAds)
            for (var t = 0; t < i.totalAds; t++) i.popupAdsButtons_ar[t].resizeAndPosition(e)
    }, this.hideAllPopupButtons = function(e) {
        if (0 != i.totalAds) {
            for (var t = 0; t < i.totalAds; t++) i.popupAdsButtons_ar[t].hide(e);
            e && (i.popupAdsButtons_ar = null, i.totalAds = 0)
        }
    }, this.updateHEXColors = function(e, t) {
        if (i.normalButtonsColor_str = e, i.selectedButtonsColor_str = t, i.popupAdsButtons_ar)
            for (var o = 0; o < i.popupAdsButtons_ar.length; o++) i.popupAdsButtons_ar[o].imageSource && i.popupAdsButtons_ar[o].updateHEXColors(e, t)
    }, i.init()
};
t.setPrototype = function() {
    t.prototype = new FWDUVPDisplayObject("div")
}, t.LOAD_ERROR = "error", t.LOAD_COMPLETE = "complete", t.prototype = null, e.FWDUVPPupupAds = t
}(window),
function(e) {
var l = function(e, t, o, s, i) {
    var n = this;
    l.prototype;
    this.buttonRef_do = e, this.bkColor = t, this.text_do = null, this.pointer_do = null, this.fontColor_str = o, this.toolTipLabel_str = s, this.toolTipsButtonsHideDelay = 1e3 * i, this.pointerWidth = 7, this.pointerHeight = 4, this.showWithDelayId_to, this.isMobile_bl = FWDUVPUtils.isMobile, this.isShowed_bl = !0, this.init = function() {
        n.setOverflow("visible"), n.setupMainContainers(), n.setLabel(s), n.hide(), n.setVisible(!1), n.getStyle().backgroundColor = n.bkColor, n.getStyle().zIndex = 9999999999999, n.getStyle().pointerEvents = "none"
    }, this.setupMainContainers = function() {
        n.pointerHolder_do = new FWDUVPDisplayObject("div"), n.pointerHolder_do.setOverflow("visible"), n.addChild(n.pointerHolder_do), n.text_do = new FWDUVPDisplayObject("div"), n.text_do.hasTransform3d_bl = !1, n.text_do.hasTransform2d_bl = !1, n.text_do.setBackfaceVisibility(), n.text_do.setDisplay("inline-block"), n.text_do.getStyle().fontFamily = "Arial", n.text_do.getStyle().fontSize = "12px", n.text_do.getStyle().color = n.fontColor_str, n.text_do.getStyle().whiteSpace = "nowrap", n.text_do.getStyle().fontSmoothing = "antialiased", n.text_do.getStyle().webkitFontSmoothing = "antialiased", n.text_do.getStyle().textRendering = "optimizeLegibility", n.text_do.getStyle().padding = "6px", n.text_do.getStyle().paddingTop = "4px", n.text_do.getStyle().paddingBottom = "4px", n.addChild(n.text_do), n.pointer_do = new FWDUVPDisplayObject("div"), n.pointer_do.setBkColor(n.bkColor), n.pointer_do.screen.style = "border: 4px solid transparent; border-top-color: " + n.bkColor + ";", n.pointerHolder_do.addChild(n.pointer_do)
    }, this.setLabel = function(e) {
        void 0 !== e && (n.text_do.setInnerHTML(e), setTimeout(function() {
            null != n && (n.setWidth(n.text_do.getWidth()), n.setHeight(n.text_do.getHeight()), n.positionPointer())
        }, 20))
    }, this.positionPointer = function(e) {
        var t, o;
        e || (e = 0), t = parseInt((n.w - 8) / 2) + e, o = n.h, n.pointerHolder_do.setX(t), n.pointerHolder_do.setY(o)
    }, this.show = function() {
        n.isShowed_bl = !0, clearTimeout(n.hideWithDelayId_to), FWDAnimation.killTweensOf(n), clearTimeout(n.showWithDelayId_to), n.showWithDelayId_to = setTimeout(n.showFinal, n.toolTipsButtonsHideDelay)
    }, this.showFinal = function() {
        n.setVisible(!0), FWDAnimation.to(n, .4, {
            alpha: 1,
            onComplete: function() {
                n.setVisible(!0)
            },
            ease: Quart.easeOut
        })
    }, this.hide = function() {
        n.isShowed_bl && (clearTimeout(n.showWithDelayId_to), clearTimeout(n.hideWithDelayId_to), n.hideWithDelayId_to = setTimeout(function() {
            FWDAnimation.killTweensOf(n), n.setVisible(!1), n.isShowed_bl = !1, n.setAlpha(0)
        }, 100))
    }, this.init()
};
l.setPrototype = function() {
    l.prototype = null, l.prototype = new FWDUVPDisplayObject("div")
}, l.CLICK = "onClick", l.MOUSE_DOWN = "onMouseDown", l.prototype = null, e.FWDUVPScrubberToolip = l
}(window),
function(s) {
var e = function(o, t) {
    var f = this;
    e.prototype;
    this.embedColoseN_img = o.embedColoseN_img, this.bk_do = null, this.mainHolder_do = null, this.closeButton_do = null, this.buttons_ar = [], this.embedWindowBackground_str = o.embedWindowBackground_str, this.embedWindowCloseButtonMargins = o.embedWindowCloseButtonMargins, this.totalWidth = 0, this.stageWidth = 0, this.stageHeight = 0, this.minMarginXSpace = 20, this.hSpace = 20, this.minHSpace = 10, this.vSpace = 15, this.isShowed_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.useVectorIcons_bl = o.useVectorIcons_bl, this.init = function() {
        f.closeButton_do || (-1 != o.skinPath_str.indexOf("hex_white") ? f.selectedButtonsColor_str = "#FFFFFF" : f.selectedButtonsColor_str = o.selectedButtonsColor_str, f.setBackfaceVisibility(), f.mainHolder_do = new FWDUVPDisplayObject("div"), f.mainHolder_do.hasTransform3d_bl = !1, f.mainHolder_do.hasTransform2d_bl = !1, f.mainHolder_do.setBackfaceVisibility(), f.bk_do = new FWDUVPDisplayObject("div"), f.bk_do.getStyle().width = "100%", f.bk_do.getStyle().height = "100%", f.bk_do.setAlpha(.9), f.bk_do.getStyle().background = "url('" + f.embedWindowBackground_str + "')", f.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), f.closeButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<div class='table-fwduvp-button'><span class='table-cell-fwduvp-button icon-close'></span></div>", void 0, "UVPCloseButtonNormalState", "UVPCloseButtonSelectedState")) : (FWDUVPSimpleButton.setPrototype(), f.closeButton_do = new FWDUVPSimpleButton(o.shareClooseN_img, o.embedWindowClosePathS_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, o.selectedButtonsColor_str)), f.closeButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, f.closeButtonOnMouseUpHandler), f.addChild(f.mainHolder_do), f.mainHolder_do.addChild(f.bk_do), f.mainHolder_do.addChild(f.closeButton_do), this.setupButtons())
    }, this.closeButtonOnMouseUpHandler = function() {
        f.isShowed_bl && f.hide()
    }, this.positionAndResize = function() {
        f.stageWidth = t.stageWidth, f.stageHeight = t.stageHeight, f.closeButton_do.setX(f.stageWidth - f.closeButton_do.w - f.embedWindowCloseButtonMargins), f.closeButton_do.setY(f.embedWindowCloseButtonMargins), f.setWidth(f.stageWidth), f.setHeight(f.stageHeight), f.mainHolder_do.setWidth(f.stageWidth), f.mainHolder_do.setHeight(f.stageHeight), f.positionButtons()
    }, this.setupButtons = function() {
        f.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), f.facebookButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-facebook'></span>", void 0, "UVPSocialMediaButtonsNormalState", "UVPSocialMediaButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), f.facebookButton_do = new FWDUVPSimpleButton(o.facebookN_img, o.facebookSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, o.selectedButtonsColor_str)), f.facebookButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, f.facebookOnMouseUpHandler), this.buttons_ar.push(f.facebookButton_do), f.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), f.googleButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-google-plus'></span>", void 0, "UVPSocialMediaButtonsNormalState", "UVPSocialMediaButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), f.googleButton_do = new FWDUVPSimpleButton(o.googleN_img, o.googleSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, o.selectedButtonsColor_str)), f.googleButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, f.googleOnMouseUpHandler), this.buttons_ar.push(f.googleButton_do), f.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), f.twitterButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-twitter'></span>", void 0, "UVPSocialMediaButtonsNormalState", "UVPSocialMediaButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), f.twitterButton_do = new FWDUVPSimpleButton(o.twitterN_img, o.twitterSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, o.selectedButtonsColor_str)), f.twitterButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, f.twitterOnMouseUpHandler), this.buttons_ar.push(f.twitterButton_do), f.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), f.likedinButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-linkedin'></span>", void 0, "UVPSocialMediaButtonsNormalState", "UVPSocialMediaButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), f.likedinButton_do = new FWDUVPSimpleButton(o.likedInkN_img, o.likedInSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, o.selectedButtonsColor_str)), f.likedinButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, f.likedinOnMouseUpHandler), this.buttons_ar.push(f.likedinButton_do), f.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), f.bufferButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-comments'></span>", void 0, "UVPSocialMediaButtonsNormalState", "UVPSocialMediaButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), f.bufferButton_do = new FWDUVPSimpleButton(o.bufferkN_img, o.bufferSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, o.selectedButtonsColor_str)), f.bufferButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, f.bufferOnMouseUpHandler), this.buttons_ar.push(f.bufferButton_do), f.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), f.diggButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-digg'></span>", void 0, "UVPSocialMediaButtonsNormalState", "UVPSocialMediaButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), f.diggButton_do = new FWDUVPSimpleButton(o.diggN_img, o.diggSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, o.selectedButtonsColor_str)), f.diggButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, f.diggOnMouseUpHandler), this.buttons_ar.push(f.diggButton_do), f.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), f.redditButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-reddit'></span>", void 0, "UVPSocialMediaButtonsNormalState", "UVPSocialMediaButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), f.redditButton_do = new FWDUVPSimpleButton(o.redditN_img, o.redditSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, o.selectedButtonsColor_str)), f.redditButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, f.redditOnMouseUpHandler), this.buttons_ar.push(f.redditButton_do), f.useVectorIcons_bl ? (FWDUVPSimpleButton.setPrototype(), f.thumbrlButton_do = new FWDUVPSimpleButton(void 0, void 0, void 0, !0, void 0, void 0, void 0, "<span class='uvpicon icon-tumblr'></span>", void 0, "UVPSocialMediaButtonsNormalState", "UVPSocialMediaButtonsSelectedState")) : (FWDUVPSimpleButton.setPrototype(), f.thumbrlButton_do = new FWDUVPSimpleButton(o.thumbrlN_img, o.thumbrlSPath_str, void 0, !0, o.useHEXColorsForSkin_bl, o.normalButtonsColor_str, o.selectedButtonsColor_str)), f.thumbrlButton_do.addListener(FWDUVPSimpleButton.MOUSE_UP, f.thumbrlOnMouseUpHandler), this.buttons_ar.push(f.thumbrlButton_do), f.mainHolder_do.addChild(f.facebookButton_do), f.mainHolder_do.addChild(f.googleButton_do), f.mainHolder_do.addChild(f.twitterButton_do), f.mainHolder_do.addChild(f.likedinButton_do), f.mainHolder_do.addChild(f.bufferButton_do), f.mainHolder_do.addChild(f.diggButton_do), f.mainHolder_do.addChild(f.redditButton_do), f.mainHolder_do.addChild(f.thumbrlButton_do)
    }, this.facebookOnMouseUpHandler = function() {
        var e = "http://www.facebook.com/share.php?u=" + encodeURIComponent(location.href);
        s.open(e, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=400,width=600")
    }, this.googleOnMouseUpHandler = function() {
        var e = "https://plus.google.com/share?url=" + encodeURIComponent(location.href);
        s.open(e, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=400,width=600")
    }, this.twitterOnMouseUpHandler = function() {
        var e = "http://twitter.com/home?status=" + encodeURIComponent(location.href);
        s.open(e, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=400,width=600")
    }, this.likedinOnMouseUpHandler = function() {
        var e = "https://www.linkedin.com/cws/share?url=" + location.href;
        s.open(e, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=400,width=600")
    }, this.bufferOnMouseUpHandler = function() {
        var e = "https://buffer.com/add?url=" + location.href;
        s.open(e, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=400,width=600")
    }, this.diggOnMouseUpHandler = function() {
        var e = "http://digg.com/submit?url=" + location.href;
        s.open(e, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=400,width=600")
    }, this.redditOnMouseUpHandler = function() {
        var e = "https://www.reddit.com/?submit=" + location.href;
        s.open(e, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=400,width=600")
    }, this.thumbrlOnMouseUpHandler = function() {
        var e = "http://www.tumblr.com/share/link?url=" + location.href;
        s.open(e, "", "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=400,width=600")
    }, this.positionButtons = function() {
        var e, t, o, s = [],
            i = [],
            n = [],
            l = 0,
            a = 0,
            r = 0;
        s[r] = [0], i[r] = f.buttons_ar[0].totalWidth, n[r] = f.buttons_ar[0].totalWidth, f.totalButtons = f.buttons_ar.length;
        for (var d = 1; d < f.totalButtons; d++) e = f.buttons_ar[d], i[r] + e.totalWidth + f.minHSpace > f.stageWidth - f.minMarginXSpace ? (s[++r] = [], s[r].push(d), i[r] = e.totalWidth, n[r] = e.totalWidth) : (s[r].push(d), i[r] += e.totalWidth + f.minHSpace, n[r] += e.totalWidth);
        l = parseInt((f.stageHeight - ((r + 1) * (e.totalHeight + f.vSpace) - f.vSpace)) / 2);
        for (d = 0; d < r + 1; d++) {
            var u, h = 0;
            if (1 < s[d].length) {
                u = Math.min((f.stageWidth - f.minMarginXSpace - n[d]) / (s[d].length - 1), f.hSpace);
                var c = n[d] + u * (s[d].length - 1);
                h = parseInt((f.stageWidth - c) / 2)
            } else h = parseInt((f.stageWidth - i[d]) / 2);
            0 < d && (l += e.h + f.vSpace);
            for (var _ = 0; _ < s[d].length; _++) e = f.buttons_ar[s[d][_]], o = 0 == _ ? h : (t = f.buttons_ar[s[d][_] - 1]).finalX + t.totalWidth + u, e.finalX = o, e.finalY = l, a < e.finalY && (a = e.finalY), f.buttonsBarTotalHeight = a + e.totalHeight + f.startY, e.setX(e.finalX), e.setY(e.finalY)
        }
    }, this.show = function(e) {
        f.isShowed_bl || (f.isShowed_bl = !0, t.main_do.addChild(f), f.init(), f.useVectorIcons_bl ? f.checkButtonsId_to = setInterval(function() {
            0 != f.closeButton_do.w && (f.positionAndResize(), clearInterval(f.checkButtonsId_to), clearTimeout(f.hideCompleteId_to), clearTimeout(f.showCompleteId_to), f.mainHolder_do.setY(-f.stageHeight), f.showCompleteId_to = setTimeout(f.showCompleteHandler, 900), FWDAnimation.to(f.mainHolder_do, .8, {
                y: 0,
                delay: .1,
                ease: Expo.easeInOut
            }))
        }, 50) : (f.positionAndResize(), clearTimeout(f.hideCompleteId_to), clearTimeout(f.showCompleteId_to), f.mainHolder_do.setY(-f.stageHeight), f.showCompleteId_to = setTimeout(f.showCompleteHandler, 900), setTimeout(function() {
            FWDAnimation.to(f.mainHolder_do, .8, {
                y: 0,
                delay: .1,
                ease: Expo.easeInOut
            })
        }, 100)))
    }, this.showCompleteHandler = function() {}, this.hide = function() {
        f.isShowed_bl && (f.isShowed_bl = !1, (!FWDUVPUtils.isMobile || FWDUVPUtils.isMobile && FWDUVPUtils.hasPointerEvent) && t.main_do.setSelectable(!1), t.customContextMenu_do && t.customContextMenu_do.enable(), f.positionAndResize(), clearTimeout(f.hideCompleteId_to), clearTimeout(f.showCompleteId_to), f.hideCompleteId_to = setTimeout(f.hideCompleteHandler, 800), FWDAnimation.killTweensOf(f.mainHolder_do), FWDAnimation.to(f.mainHolder_do, .8, {
            y: -f.stageHeight,
            ease: Expo.easeInOut
        }))
    }, this.hideCompleteHandler = function() {
        t.main_do.removeChild(f), f.dispatchEvent(e.HIDE_COMPLETE)
    }, this.updateHEXColors = function(e, t) {
        -1 != o.skinPath_str.indexOf("hex_white") ? f.selectedColor_str = "#FFFFFF" : f.selectedColor_str = t, f.closeButton_do && (f.closeButton_do.updateHEXColors(e, f.selectedColor_str), f.facebookButton_do.updateHEXColors(e, t), f.googleButton_do.updateHEXColors(e, t), f.twitterButton_do.updateHEXColors(e, t), f.likedinButton_do.updateHEXColors(e, t), f.bufferButton_do.updateHEXColors(e, t), f.diggButton_do.updateHEXColors(e, t), f.redditButton_do.updateHEXColors(e, t), f.thumbrlButton_do.updateHEXColors(e, t))
    }
};
e.setPrototype = function() {
    e.prototype = new FWDUVPDisplayObject("div")
}, e.HIDE_COMPLETE = "hideComplete", e.prototype = null, s.FWDUVPShareWindow = e
}(window),
function(e) {
var c = function(e, t, o, s, i, n, l, a, r, d, u) {
    var h = this;
    c.prototype;
    this.iconCSSString = a, this.showHDIcon = r, this.nImg = e, this.sPath_str = t, this.dPath_str = o, h.testButton = Boolean(-1 != String(h.iconCSSString).indexOf("download")), this.n_do, this.s_sdo, this.d_sdo, this.toolTipLabel_str, this.nImg && (this.totalWidth = this.nImg.width, this.totalHeight = this.nImg.height, h.buttonWidth = h.totalWidth, h.buttonHeight = h.totalHeight), this.normalCalssName = d, this.selectedCalssName = u, this.useHEXColorsForSkin_bl = i, this.normalButtonsColor_str = n, this.selectedButtonsColor_str = l, this.isShowed_bl = !0, this.isSetToDisabledState_bl = !1, this.isDisabled_bl = !1, this.isDisabledForGood_bl = !1, this.isSelectedFinal_bl = !1, this.isActive_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.allowToCreateSecondButton_bl = !h.isMobile_bl || h.hasPointerEvent_bl || s, this.useFontAwesome_bl = Boolean(this.iconCSSString), h.init = function() {
        h.iconCSSString && h.setOverflow("visible"), h.setupMainContainers(), h.setNormalState()
    }, h.setupMainContainers = function() {
        if (h.useFontAwesome_bl) {
            if (h.n_do = new FWDUVPTransformDisplayObject("div"), h.n_do.setInnerHTML(h.iconCSSString), h.addChild(h.n_do), h.showHDIcon) {
                var e = new Image;
                e.src = "http://www.webdesign-flash.ro/icons/hd.png", h.hd_do = new FWDUVPDisplayObject("img"), h.hd_do.setScreen(e), h.hd_do.setWidth(7), h.hd_do.setHeight(5), h.setOverflow("visible"), h.addChild(h.hd_do)
            }
            h.setFinalSize()
        } else if (h.useHEXColorsForSkin_bl ? (h.n_do = new FWDUVPTransformDisplayObject("div"), h.n_do.setWidth(h.totalWidth), h.n_do.setHeight(h.totalHeight), h.n_do_canvas = FWDUVPUtils.getCanvasWithModifiedColor(h.nImg, h.normalButtonsColor_str).canvas, h.n_do.screen.appendChild(h.n_do_canvas)) : (h.n_do = new FWDUVPTransformDisplayObject("img"), h.n_do.setScreen(h.nImg)), h.addChild(h.n_do), h.allowToCreateSecondButton_bl) {
            h.img1 = new Image, h.img1.src = h.sPath_str;
            var t = new Image;
            h.sImg = t, h.useHEXColorsForSkin_bl ? (h.s_sdo = new FWDUVPTransformDisplayObject("div"), h.s_sdo.setWidth(h.totalWidth), h.s_sdo.setHeight(h.totalHeight), h.img1.onload = function() {
                h.s_sdo_canvas = FWDUVPUtils.getCanvasWithModifiedColor(h.img1, h.selectedButtonsColor_str).canvas, h.s_sdo.screen.appendChild(h.s_sdo_canvas)
            }) : (h.s_sdo = new FWDUVPDisplayObject("img"), h.s_sdo.setScreen(h.img1), h.s_sdo.setWidth(h.totalWidth), h.s_sdo.setHeight(h.totalHeight)), h.s_sdo.setAlpha(0), h.addChild(h.s_sdo), h.dPath_str && (t.src = h.dPath_str, h.d_sdo = new FWDUVPDisplayObject("img"), h.d_sdo.setScreen(t), h.d_sdo.setWidth(h.totalWidth), h.d_sdo.setHeight(h.totalHeight), h.d_sdo.setX(-100), h.addChild(h.d_sdo)), h.setWidth(h.totalWidth), h.setHeight(h.totalHeight)
        }
        h.setButtonMode(!0), h.screen.style.yellowOverlayPointerEvents = "none", h.hasPointerEvent_bl ? (h.screen.addEventListener("pointerup", h.onMouseUp), h.screen.addEventListener("pointerover", h.onMouseOver), h.screen.addEventListener("pointerout", h.onMouseOut)) : h.screen.addEventListener && (h.isMobile_bl || (h.screen.addEventListener("mouseover", h.onMouseOver), h.screen.addEventListener("mouseout", h.onMouseOut), h.screen.addEventListener("mouseup", h.onMouseUp)), h.screen.addEventListener("touchend", h.onMouseUp))
    }, h.onMouseOver = function(e) {
        if (h.dispatchEvent(c.SHOW_TOOLTIP, {
                e: e
            }), !(h.isDisabledForGood_bl || e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE && "mouse" != e.pointerType)) {
            if (h.isDisabled_bl || h.isSelectedFinal_bl) return;
            h.dispatchEvent(c.MOUSE_OVER, {
                e: e
            }), h.setSelectedState(!0)
        }
    }, h.onMouseOut = function(e) {
        if (!(h.isDisabledForGood_bl || e.pointerType && e.pointerType != e.MSPOINTER_TYPE_MOUSE && "mouse" != e.pointerType)) {
            if (h.isDisabled_bl || h.isSelectedFinal_bl) return;
            h.dispatchEvent(c.MOUSE_OUT, {
                e: e
            }), h.setNormalState(!0)
        }
    }, h.onMouseUp = function(e) {
        h.isDisabledForGood_bl || (e.preventDefault && e.preventDefault(), h.isDisabled_bl || 2 == e.button || h.dispatchEvent(c.MOUSE_UP, {
            e: e
        }))
    }, h.checkCount = 0, this.setFinalSize = function() {
        clearInterval(h.checkId_int), 6 < h.checkCount || (h.lastWidth = h.n_do.screen.firstChild.offsetWidth, h.checkCount += 1, h.checkId_int = setInterval(function() {
            h.setFinalSize()
        }, 100), h.prevWidth != h.lastWidth && 0 != h.lastWidth && (h.setWidth(h.n_do.screen.firstChild.offsetWidth), h.setHeight(h.n_do.screen.firstChild.offsetHeight), h.n_do.setWidth(h.w), h.n_do.setHeight(h.h), h.buttonWidth = h.w, h.buttonHeight = h.h, h.totalWidth = h.w, h.totalHeight = h.h, h.hd_do && (h.hd_do.setX(h.w - h.hd_do.w + 2), h.hd_do.setY(-2)), h.prevWidth = h.lastWidth))
    }, h.setSelected = function() {
        h.isSelectedFinal_bl = !0, h.s_sdo && (FWDAnimation.killTweensOf(h.s_sdo), FWDAnimation.to(h.s_sdo, .8, {
            alpha: 1,
            ease: Expo.easeOut
        }))
    }, h.setUnselected = function() {
        h.isSelectedFinal_bl = !1, h.s_sdo && FWDAnimation.to(h.s_sdo, .8, {
            alpha: 0,
            delay: .1,
            ease: Expo.easeOut
        })
    }, this.setNormalState = function(e) {
        h.doNotallowToSetNormal || (h.useFontAwesome_bl ? (FWDAnimation.killTweensOf(h.n_do.screen), e ? FWDAnimation.to(h.n_do.screen, .8, {
            className: h.normalCalssName,
            ease: Expo.easeOut
        }) : h.n_do.screen.className = h.normalCalssName) : (FWDAnimation.killTweensOf(h.s_sdo), FWDAnimation.to(h.s_sdo, .5, {
            alpha: 0,
            ease: Expo.easeOut
        })))
    }, this.setSelectedState = function(e) {
        h.useFontAwesome_bl ? (FWDAnimation.killTweensOf(h.n_do.screen), e ? FWDAnimation.to(h.n_do.screen, .8, {
            className: h.selectedCalssName,
            ease: Expo.easeOut
        }) : h.n_do.screen.className = h.selectedCalssName) : (FWDAnimation.killTweensOf(h.s_sdo), FWDAnimation.to(h.s_sdo, .5, {
            alpha: 1,
            delay: .1,
            ease: Expo.easeOut
        }))
    }, this.setDisabledState = function() {
        h.isSetToDisabledState_bl || (h.isSetToDisabledState_bl = !0, h.d_sdo && h.d_sdo.setX(0), h.hd_do && h.hd_do.setX(h.w - h.hd_do.w))
    }, this.setEnabledState = function() {
        h.isSetToDisabledState_bl && (h.isSetToDisabledState_bl = !1, h.d_sdo && h.d_sdo.setX(-100), h.hd_do && h.hd_do.setX(-1e5))
    }, this.disable = function() {
        h.isDisabledForGood_bl || h.isDisabled_bl || (h.isDisabled_bl = !0, h.setButtonMode(!1), FWDAnimation.killTweensOf(h), FWDAnimation.to(h, .6, {
            alpha: .4
        }), h.setNormalState(!0))
    }, this.enable = function() {
        !h.isDisabledForGood_bl && h.isDisabled_bl && (h.isDisabled_bl = !1, h.setButtonMode(!0), FWDAnimation.killTweensOf(h), FWDAnimation.to(h, .6, {
            alpha: 1
        }))
    }, this.disableForGood = function() {
        h.isDisabledForGood_bl = !0, h.setButtonMode(!1)
    }, this.showDisabledState = function() {
        h.d_sdo && 0 != h.d_sdo.x && h.d_sdo.setX(0), h.hd_do && h.hd_do.setX(h.w - h.hd_do.w + 2)
    }, this.hideDisabledState = function() {
        h.d_sdo && -100 != h.d_sdo.x && h.d_sdo.setX(-100), h.hd_do && h.hd_do.setX(-1e4)
    }, this.show = function() {
        h.isShowed_bl || (h.isShowed_bl = !0, FWDAnimation.killTweensOf(h), FWDUVPUtils.isIEAndLessThen9 ? (FWDUVPUtils.isIEAndLessThen9 || (h.setAlpha(0), FWDAnimation.to(h, .4, {
            alpha: 1,
            delay: .4
        })), h.setVisible(!0)) : FWDUVPUtils.isIEWebKit ? (FWDAnimation.killTweensOf(h.n_do), h.n_do.setScale2(0), FWDAnimation.to(h.n_do, .8, {
            scale: 1,
            delay: .4,
            onStart: function() {
                h.setVisible(!0)
            },
            ease: Elastic.easeOut
        })) : (h.setScale2(0), FWDAnimation.to(h, .8, {
            scale: 1,
            delay: .4,
            onStart: function() {
                h.setVisible(!0)
            },
            ease: Elastic.easeOut
        })))
    }, this.hide = function(e) {
        h.isShowed_bl && (h.isShowed_bl = !1, FWDAnimation.killTweensOf(h), FWDAnimation.killTweensOf(h.n_do), h.setVisible(!1))
    }, h.updateHEXColors = function(e, t) {
        FWDUVPUtils.changeCanvasHEXColor(h.nImg, h.n_do_canvas, e), FWDUVPUtils.changeCanvasHEXColor(h.img1, h.s_sdo_canvas, t)
    }, h.init()
};
c.setPrototype = function() {
    c.prototype = null, c.prototype = new FWDUVPTransformDisplayObject("div")
}, c.CLICK = "onClick", c.MOUSE_OVER = "onMouseOver", c.SHOW_TOOLTIP = "showTooltip", c.MOUSE_OUT = "onMouseOut", c.MOUSE_UP = "onMouseDown", c.prototype = null, e.FWDUVPSimpleButton = c
}(window),
function(e) {
var r = function(e, t, o, s, i, n, l) {
    var a = this;
    r.prototype;
    this.nImg_img = null, this.sImg_img = null, this.n_do, this.s_do, this.useHEXColorsForSkin_bl = i, this.normalButtonsColor_str = n, this.selectedButtonsColor_str = l, this.nImgPath_str = e, this.sImgPath_str = t, this.buttonWidth = o, this.buttonHeight = s, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.isDisabled_bl = !1, this.init = function() {
        a.setupMainContainers(), a.setWidth(a.buttonWidth), a.setHeight(a.buttonHeight), a.setButtonMode(!0)
    }, this.setupMainContainers = function() {
        a.nImg = new Image, a.nImg.src = a.nImgPath_str, a.useHEXColorsForSkin_bl ? (a.n_do = new FWDUVPTransformDisplayObject("div"), a.n_do.setWidth(a.buttonWidth), a.n_do.setHeight(a.buttonHeight), a.nImg.onload = function() {
            a.n_do_canvas = FWDUVPUtils.getCanvasWithModifiedColor(a.nImg, a.normalButtonsColor_str).canvas, a.n_do.screen.appendChild(a.n_do_canvas)
        }) : (a.n_do = new FWDUVPDisplayObject("img"), a.n_do.setScreen(a.nImg), a.n_do.setWidth(a.buttonWidth), a.n_do.setHeight(a.buttonHeight)), a.addChild(a.n_do), a.sImg = new Image, a.sImg.src = a.sImgPath_str, a.useHEXColorsForSkin_bl ? (a.s_do = new FWDUVPTransformDisplayObject("div"), a.s_do.setWidth(a.buttonWidth), a.s_do.setHeight(a.buttonHeight), a.sImg.onload = function() {
            a.s_do_canvas = FWDUVPUtils.getCanvasWithModifiedColor(a.sImg, a.selectedButtonsColor_str).canvas, a.s_do.screen.appendChild(a.s_do_canvas)
        }) : (a.s_do = new FWDUVPDisplayObject("img"), a.s_do.setScreen(a.sImg), a.s_do.setWidth(a.buttonWidth), a.s_do.setHeight(a.buttonHeight)), a.addChild(a.s_do), a.s_do.setAlpha(0), a.hasPointerEvent_bl ? (a.screen.addEventListener("pointerup", a.onMouseUp), a.screen.addEventListener("pointerover", a.setSelectedState), a.screen.addEventListener("pointerout", a.setNormalState)) : a.screen.addEventListener && (a.isMobile_bl || (a.screen.addEventListener("mouseover", a.setSelectedState), a.screen.addEventListener("mouseout", a.setNormalState), a.screen.addEventListener("mouseup", a.onMouseUp)), a.screen.addEventListener("touchend", a.onMouseUp))
    }, this.setNormalState = function(e) {
        FWDAnimation.killTweensOf(a.s_do), FWDAnimation.to(a.s_do, .5, {
            alpha: 0,
            ease: Expo.easeOut
        })
    }, this.setSelectedState = function(e) {
        FWDAnimation.killTweensOf(a.s_do), FWDAnimation.to(a.s_do, .5, {
            alpha: 1,
            ease: Expo.easeOut
        })
    }, this.onMouseUp = function(e) {
        a.dispatchEvent(r.MOUSE_UP), a.dispatchEvent(r.CLICK)
    }, a.updateHEXColors = function(e, t) {
        FWDUVPUtils.changeCanvasHEXColor(a.nImg, a.n_do_canvas, e), FWDUVPUtils.changeCanvasHEXColor(a.sImg, a.s_do_canvas, t)
    }, this.destroy = function() {
        FWDAnimation.killTweensOf(a.n_do), a.n_do.destroy(), this.s_do.destroy(), a.screen.onmouseover = null, a.screen.onmouseout = null, a.screen.onclick = null, a.nImg_img = null, a.sImg_img = null, a = null, r.prototype = null
    }, a.init()
};
r.setPrototype = function() {
    r.prototype = null, r.prototype = new FWDUVPTransformDisplayObject("div", "relative")
}, r.MOUSE_UP = "onClick", r.CLICK = "onClick", r.prototype = null, e.FWDUVPSimpleSizeButton = r
}(window),
function(l) {
var a = function(i, e) {
    var u = this;
    a.prototype;
    this.main_do = null, this.reader = null, this.subtitiles_ar = null, this.hasText_bl = !1, this.isLoaded_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.showSubtitileByDefault_bl = e.showSubtitileByDefault_bl, u.init = function() {
        u.setOverflow("visible"), u.getStyle().pointerEvents = "none", u.getStyle().cursor = "default", u.setupTextContainer(), u.getStyle().margin = "auto", u.hide(), setTimeout(function() {
            u.setSizeOnce()
        }, 500)
    }, this.setSizeOnce = function() {
        this.setWidth(i.tempVidStageWidth), this.text_do.setWidth(i.tempVidStageWidth)
    }, u.setupTextContainer = function() {
        this.text_do = new FWDUVPTransformDisplayObject("div"), u.text_do.getStyle().pointerEvents = "none", this.text_do.hasTransform3d_bl = !1, this.text_do.setBackfaceVisibility(), this.text_do.getStyle().transformOrigin = "50% 0%", this.text_do.getStyle().textAlign = "center", this.text_do.getStyle().fontSmoothing = "antialiased", this.text_do.getStyle().webkitFontSmoothing = "antialiased", this.text_do.getStyle().textRendering = "optimizeLegibility", this.addChild(this.text_do)
    }, u.loadSubtitle = function(e) {
        if (u.text_do.setX(-5e3), -1 == location.protocol.indexOf("file:")) {
            u.subtitiles_ar = [], u.stopToLoadSubtitle(), u.sourceURL_str = e, u.xhr = new XMLHttpRequest, u.xhr.onreadystatechange = u.onLoad, u.xhr.onerror = u.onError;
            try {
                u.xhr.open("get", u.sourceURL_str + "?rand=" + parseInt(99999999 * Math.random()), !0), u.xhr.send()
            } catch (e) {
                e && e.message && e.message
            }
        }
    }, this.onLoad = function(e) {
        4 == u.xhr.readyState && (404 == u.xhr.status ? u.dispatchEvent(FWDUVPData.LOAD_ERROR, {
            text: "Subtitle file path is not found: <font color='#FF0000'>" + u.sourceURL_str + "</font>"
        }) : 408 == u.xhr.status ? u.dispatchEvent(FWDUVPData.LOAD_ERROR, {
            text: "Loadiong subtitle file file request load timeout!"
        }) : 200 == u.xhr.status && (l.JSON, u.subtitle_txt = u.xhr.responseText, u.isShowed_bl && u.show(), u.parseSubtitle(u.subtitle_txt), u.prevText = "none", setTimeout(function() {
            u.show(), u.text_do.setX(0), u.updateSubtitle(i.currentSecconds)
        }, 400))), u.dispatchEvent(a.LOAD_COMPLETE)
    }, this.onError = function(e) {
        try {
            l.console && console.log(e), l.console && console.log(e.message)
        } catch (e) {}
        u.dispatchEvent(a.LOAD_ERROR, {
            text: "Error loading subtitle file : <font color='#FF0000'>" + u.sourceURL_str + "</font>."
        })
    }, this.stopToLoadSubtitle = function() {
        if (null != u.xhr) {
            try {
                u.xhr.abort()
            } catch (e) {}
            u.xhr.onreadystatechange = null, u.xhr.onerror = null, u.xhr = null
        }
        this.isLoaded_bl = !1
    }, u.parseSubtitle = function(e) {
        function i(e) {
            return null == e ? "" : e.replace(/^\s+|\s+$/g, "")
        }
        u.isLoaded_bl = !0;
        var l = (e = i(e = e.replace(/\r\n|\r|\n/g, "\n"))).split("\n\n"),
            a = 0;
        for (s in l) {
            var r = l[s].split("\n");
            if (2 <= r.length) {
                if (n = r[0], d = i(r[1].split(" --\x3e ")[0]), o = i(r[1].split(" --\x3e ")[1]), t = r[2], 2 < r.length)
                    for (j = 3; j < r.length; j++) t += "<br>" + r[j];
                u.subtitiles_ar[a] = {}, u.subtitiles_ar[a].number = n, u.subtitiles_ar[a].start = d, u.subtitiles_ar[a].end = o, u.subtitiles_ar[a].startDuration = FWDUVPUtils.formatTimeWithMiliseconds(d), u.subtitiles_ar[a].endDuration = FWDUVPUtils.formatTimeWithMiliseconds(o), u.subtitiles_ar[a].text = "<p class='UVPSubtitle'>" + t + "</p>"
            }
            a++
        }
        for (var d = 0; d < u.subtitiles_ar.length; d++) u.subtitiles_ar[d] || (u.subtitiles_ar.splice(d, 1), d--)
    }, this.updateSubtitle = function(e) {
        if (u.isLoaded_bl) {
            for (var t, o, s = "", i = 0; i < u.subtitiles_ar.length; i++)
                if (t = u.subtitiles_ar[i].startDuration, o = u.subtitiles_ar[i].endDuration, t < e && e < o) {
                    s = u.subtitiles_ar[i].text;
                    break
                }
            if (u.prevText != s) u.text_do.setInnerHTML(s), u.setAlpha(0), setTimeout(function() {
                u.setAlpha(1), u.position()
            }, 300), u.hasText_bl = !0;
            u.prevText = s
        }
    }, this.position = function(e) {
        if (u.isLoaded_bl) {
            var t;
            "bottom" != i.tempPlaylistPosition_str && i.showPlaylistButtonAndPlaylist_bl ? scale = Math.min(2, i.tempVidStageWidth / (i.maxWidth - i.playlistWidth - i.spaceBetweenControllerAndPlaylist)) : scale = Math.min(2, i.tempVidStageWidth / (i.maxWidth - i.spaceBetweenControllerAndPlaylist)), u.setX(Math.round((i.tempVidStageWidth - u.w) / 2)), u.text_do.setScale2(scale);
            var o = u.text_do.getHeight() * scale;
            t = i.controller_do ? i.controller_do.isShowed_bl ? parseInt(i.vidStageHeight - i.controller_do.h - o) : parseInt(i.vidStageHeight - o - 10) : parseInt(i.vidStageHeight - o), FWDAnimation.killTweensOf(u.text_do), e ? FWDAnimation.to(u.text_do, .8, {
                y: t,
                ease: Expo.easeInOut
            }) : u.text_do.setY(t), u.text_do.setX(0)
        }
    }, this.show = function() {
        u.setVisible(!0)
    }, this.hide = function() {
        u.setVisible(!1)
    }, u.init()
};
a.getDuration = function(e) {
    var t = 0,
        o = 0,
        s = 0;
    return "0" == (t = (e = e.split(":"))[0])[0] && "0" != t[1] && (t = parseInt(t[1])), "00" == t && (t = 0), "0" == (o = e[1])[0] && "0" != o[1] && (o = parseInt(o[1])), "00" == o && (o = 0), secs = parseInt(e[2].replace(/,.*/gi, "")), "0" == secs[0] && "0" != secs[1] && (secs = parseInt(secs[1])), "00" == secs && (secs = 0), 0 != t && (s += 60 * t * 60), 0 != o && (s += 60 * o), s += secs
}, a.setPrototype = function() {
    a.prototype = null, a.prototype = new FWDUVPTransformDisplayObject("div")
}, a.LOAD_ERROR = "error", a.LOAD_COMPLETE = "complete", a.prototype = null, l.FWDUVPSubtitle = a
}(window),
function(a) {
var r = function(e, t, o, s, i, n) {
    var l = this;
    r.prototype;
    this.buttonRef_do = e, this.bkPath_str = t, this.pointerPath_str = o, this.text_do = null, this.pointer_do = null, this.fontColor_str = i, this.toolTipLabel_str = s, this.toolTipsButtonsHideDelay = 1e3 * n, this.pointerWidth = 7, this.pointerHeight = 4, this.showWithDelayId_to, this.isMobile_bl = FWDUVPUtils.isMobile, this.isShowed_bl = !0, this.init = function() {
        l.setOverflow("visible"), l.setupMainContainers(), l.setLabel(l.toolTipLabel_str), l.hide(), l.getStyle().background = "url('" + l.bkPath_str + "')", l.getStyle().zIndex = 9999999999999
    }, this.setupMainContainers = function() {
        l.text_do = new FWDUVPDisplayObject("div"), l.text_do.hasTransform3d_bl = !1, l.text_do.hasTransform2d_bl = !1, l.text_do.setBackfaceVisibility(), l.text_do.setDisplay("inline"), l.text_do.getStyle().fontFamily = "Arial", l.text_do.getStyle().fontSize = "12px", l.text_do.getStyle().color = l.fontColor_str, l.text_do.getStyle().whiteSpace = "nowrap", l.text_do.getStyle().fontSmoothing = "antialiased", l.text_do.getStyle().webkitFontSmoothing = "antialiased", l.text_do.getStyle().textRendering = "optimizeLegibility", l.text_do.getStyle().padding = "6px", l.text_do.getStyle().paddingTop = "4px", l.text_do.getStyle().paddingBottom = "4px", l.setLabel(), l.addChild(l.text_do);
        var e = new Image;
        e.src = l.pointerPath_str, l.pointer_do = new FWDUVPDisplayObject("img"), l.pointer_do.setScreen(e), l.pointer_do.setWidth(l.pointerWidth), l.pointer_do.setHeight(l.pointerHeight), l.addChild(l.pointer_do)
    }, this.setLabel = function(e) {
        l.text_do.setInnerHTML(s), setTimeout(function() {
            null != l && (l.setWidth(l.text_do.getWidth()), l.setHeight(l.text_do.getHeight()), l.positionPointer())
        }, 50)
    }, this.positionPointer = function(e) {
        var t, o;
        e || (e = 0), t = parseInt((l.w - l.pointerWidth) / 2) + e, o = l.h, l.pointer_do.setX(t), l.pointer_do.setY(o)
    }, this.show = function() {
        l.isShowed_bl || (l.isShowed_bl = !0, FWDAnimation.killTweensOf(l), clearTimeout(l.showWithDelayId_to), l.showWithDelayId_to = setTimeout(l.showFinal, l.toolTipsButtonsHideDelay), a.addEventListener ? a.addEventListener("mousemove", l.moveHandler) : document.attachEvent && (document.detachEvent("onmousemove", l.moveHandler), document.attachEvent("onmousemove", l.moveHandler)))
    }, this.showFinal = function() {
        l.setVisible(!0), l.setAlpha(0), FWDAnimation.to(l, .4, {
            alpha: 1,
            onComplete: function() {
                l.setVisible(!0)
            },
            ease: Quart.easeOut
        })
    }, this.moveHandler = function(e) {
        var t = FWDUVPUtils.getViewportMouseCoordinates(e);
        FWDUVPUtils.hitTest(l.buttonRef_do.screen, t.screenX, t.screenY) || l.hide()
    }, this.hide = function() {
        l.isShowed_bl && (clearTimeout(l.showWithDelayId_to), a.removeEventListener ? a.removeEventListener("mousemove", l.moveHandler) : document.detachEvent && document.detachEvent("onmousemove", l.moveHandler), FWDAnimation.killTweensOf(l), l.setVisible(!1), l.isShowed_bl = !1)
    }, this.init()
};
r.setPrototype = function() {
    r.prototype = null, r.prototype = new FWDUVPDisplayObject("div", "fixed")
}, r.CLICK = "onClick", r.MOUSE_DOWN = "onMouseDown", r.prototype = null, a.FWDUVPToolTip = r
}(window), window.FWDUVPTransformDisplayObject = function(e, t, o, s) {
    this.listeners = {
        events_ar: []
    };
    var i = this;
    if ("div" != e && "img" != e && "canvas" != e) throw Error("Type is not valid! " + e);
    this.type = e, this.children_ar = [], this.style, this.screen, this.numChildren, this.transform, this.position = t || "absolute", this.overflow = o || "hidden", this.display = s || "block", this.visible = !0, this.buttonMode, this.x = 0, this.y = 0, this.scale = 1, this.rotation = 0, this.w = 0, this.h = 0, this.rect, this.alpha = 1, this.innerHTML = "", this.opacityType = "", this.isHtml5_bl = !1, this.hasTransform2d_bl = FWDUVPUtils.hasTransform2d, this.init = function() {
        this.setScreen()
    }, this.getTransform = function() {
        for (var e, t = ["transform", "msTransform", "WebkitTransform", "MozTransform", "OTransform"]; e = t.shift();)
            if (void 0 !== this.screen.style[e]) return e;
        return !1
    }, this.getOpacityType = function() {
        return void 0 !== this.screen.style.opacity ? "opacity" : "filter"
    }, this.setScreen = function(e) {
        "img" == this.type && e ? this.screen = e : this.screen = document.createElement(this.type), this.setMainProperties()
    }, this.setMainProperties = function() {
        this.transform = this.getTransform(), this.setPosition(this.position), this.setOverflow(this.overflow), this.opacityType = this.getOpacityType(), "opacity" == this.opacityType && (this.isHtml5_bl = !0), "filter" == i.opacityType && (i.screen.style.filter = "inherit"), this.screen.style.left = "0px", this.screen.style.top = "0px", this.screen.style.margin = "0px", this.screen.style.padding = "0px", this.screen.style.maxWidth = "none", this.screen.style.maxHeight = "none", this.screen.style.border = "none", this.screen.style.lineHeight = "1", this.screen.style.backfaceVisibility = "hidden", this.screen.style.webkitBackfaceVisibility = "hidden", this.screen.style.MozBackfaceVisibility = "hidden", this.screen.style.MozImageRendering = "optimizeSpeed", this.screen.style.WebkitImageRendering = "optimizeSpeed", "img" == e && (this.setWidth(this.screen.width), this.setHeight(this.screen.height), this.screen.onmousedown = function(e) {
            return !1
        })
    }, i.setBackfaceVisibility = function() {
        i.screen.style.backfaceVisibility = "visible", i.screen.style.webkitBackfaceVisibility = "visible", i.screen.style.MozBackfaceVisibility = "visible"
    }, i.removeBackfaceVisibility = function() {
        i.screen.style.backfaceVisibility = "hidden", i.screen.style.webkitBackfaceVisibility = "hidden", i.screen.style.MozBackfaceVisibility = "hidden"
    }, this.setSelectable = function(e) {
        if (!e) {
            try {
                this.screen.style.userSelect = "none"
            } catch (e) {}
            try {
                this.screen.style.MozUserSelect = "none"
            } catch (e) {}
            try {
                this.screen.style.webkitUserSelect = "none"
            } catch (e) {}
            try {
                this.screen.style.khtmlUserSelect = "none"
            } catch (e) {}
            try {
                this.screen.style.oUserSelect = "none"
            } catch (e) {}
            try {
                this.screen.style.msUserSelect = "none"
            } catch (e) {}
            try {
                this.screen.msUserSelect = "none"
            } catch (e) {}
            this.screen.ondragstart = function(e) {
                return !1
            }, this.screen.onselectstart = function() {
                return !1
            }, this.screen.style.webkitTouchCallout = "none"
        }
    }, this.getScreen = function() {
        return i.screen
    }, this.setVisible = function(e) {
        this.visible = e, 1 == this.visible ? this.screen.style.visibility = "visible" : this.screen.style.visibility = "hidden"
    }, this.getVisible = function() {
        return this.visible
    }, this.setResizableSizeAfterParent = function() {
        this.screen.style.width = "100%", this.screen.style.height = "100%"
    }, this.getStyle = function() {
        return this.screen.style
    }, this.setOverflow = function(e) {
        i.overflow = e, i.screen.style.overflow = i.overflow
    }, this.setPosition = function(e) {
        i.position = e, i.screen.style.position = i.position
    }, this.setDisplay = function(e) {
        this.display = e, this.screen.style.display = this.display
    }, this.setButtonMode = function(e) {
        this.buttonMode = e, 1 == this.buttonMode ? this.screen.style.cursor = "pointer" : this.screen.style.cursor = "default"
    }, this.setBkColor = function(e) {
        i.screen.style.backgroundColor = e
    }, this.setInnerHTML = function(e) {
        i.innerHTML = e, i.screen.innerHTML = i.innerHTML
    }, this.getInnerHTML = function() {
        return i.innerHTML
    }, this.getRect = function() {
        return i.screen.getBoundingClientRect()
    }, this.setAlpha = function(e) {
        i.alpha = e, "opacity" == i.opacityType ? i.screen.style.opacity = i.alpha : "filter" == i.opacityType && (i.screen.style.filter = "alpha(opacity=" + 100 * i.alpha + ")", i.screen.style.filter = "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + Math.round(100 * i.alpha) + ")")
    }, this.getAlpha = function() {
        return i.alpha
    }, this.getRect = function() {
        return this.screen.getBoundingClientRect()
    }, this.getGlobalX = function() {
        return this.getRect().left
    }, this.getGlobalY = function() {
        return this.getRect().top
    }, this.setX = function(e) {
        i.x = e, i.hasTransform2d_bl ? i.screen.style[i.transform] = "translate(" + i.x + "px," + i.y + "px) scale(" + i.scale + " , " + i.scale + ") rotate(" + i.rotation + "deg)" : i.screen.style.left = i.x + "px"
    }, this.getX = function() {
        return i.x
    }, this.setY = function(e) {
        i.y = e, i.hasTransform2d_bl ? i.screen.style[i.transform] = "translate(" + i.x + "px," + i.y + "px) scale(" + i.scale + " , " + i.scale + ") rotate(" + i.rotation + "deg)" : i.screen.style.top = i.y + "px"
    }, this.getY = function() {
        return i.y
    }, this.setScale2 = function(e) {
        i.scale = e, i.hasTransform2d_bl && (i.screen.style[i.transform] = "translate(" + i.x + "px," + i.y + "px) scale(" + i.scale + " , " + i.scale + ") rotate(" + i.rotation + "deg)")
    }, this.getScale = function() {
        return i.scale
    }, this.setRotation = function(e) {
        i.rotation = e, i.hasTransform2d_bl && (i.screen.style[i.transform] = "translate(" + i.x + "px," + i.y + "px) scale(" + i.scale + " , " + i.scale + ") rotate(" + i.rotation + "deg)")
    }, i.setWidth = function(e) {
        i.w = e, "img" == i.type && (i.screen.width = i.w), i.screen.style.width = i.w + "px"
    }, this.getWidth = function() {
        return "div" == i.type ? 0 != i.screen.offsetWidth ? i.screen.offsetWidth : i.w : "img" == i.type ? 0 != i.screen.offsetWidth ? i.screen.offsetWidth : 0 != i.screen.width ? i.screen.width : i._w : "canvas" == i.type ? 0 != i.screen.offsetWidth ? i.screen.offsetWidth : i.w : void 0
    }, i.setHeight = function(e) {
        i.h = e, "img" == i.type && (i.screen.height = i.h), i.screen.style.height = i.h + "px"
    }, this.getHeight = function() {
        return "div" == i.type ? 0 != i.screen.offsetHeight ? i.screen.offsetHeight : i.h : "img" == i.type ? 0 != i.screen.offsetHeight ? i.screen.offsetHeight : 0 != i.screen.height ? i.screen.height : i.h : "canvas" == i.type ? 0 != i.screen.offsetHeight ? i.screen.offsetHeight : i.h : void 0
    }, this.getNumChildren = function() {
        return i.children_ar.length
    }, this.addChild = function(e) {
        this.contains(e) && this.children_ar.splice(FWDUVPUtils.indexOfArray(this.children_ar, e), 1), this.children_ar.push(e), this.screen.appendChild(e.screen)
    }, this.removeChild = function(e) {
        if (!this.contains(e)) throw Error("##removeChild()## Child doesn't exist, it can't be removed!");
        this.children_ar.splice(FWDUVPUtils.indexOfArray(this.children_ar, e), 1), this.screen.removeChild(e.screen)
    }, this.contains = function(e) {
        return -1 != FWDUVPUtils.indexOfArray(this.children_ar, e)
    }, this.addChildAtZero = function(e) {
        0 == this.numChildren ? (this.children_ar.push(e), this.screen.appendChild(e.screen)) : (this.screen.insertBefore(e.screen, this.children_ar[0].screen), this.contains(e) && this.children_ar.splice(FWDUVPUtils.indexOfArray(this.children_ar, e), 1), this.children_ar.unshift(e))
    }, this.getChildAt = function(e) {
        if (e < 0 || e > this.numChildren - 1) throw Error("##getChildAt()## Index out of bounds!");
        if (0 == this.numChildren) throw Errror("##getChildAt## Child dose not exist!");
        return this.children_ar[e]
    }, this.removeChildAtZero = function() {
        this.screen.removeChild(this.children_ar[0].screen), this.children_ar.shift()
    }, this.addListener = function(e, t) {
        if (null == e) throw Error("type is required.");
        if ("object" == typeof e) throw Error("type must be of type String.");
        if ("function" != typeof t) throw Error("listener must be of type Function.");
        var o = {};
        o.type = e, o.listener = t, (o.target = this).listeners.events_ar.push(o)
    }, this.dispatchEvent = function(e, t) {
        if (null == e) throw Error("type is required.");
        if ("object" == typeof e) throw Error("type must be of type String.");
        for (var o = 0, s = this.listeners.events_ar.length; o < s; o++)
            if (this.listeners.events_ar[o].target === this && this.listeners.events_ar[o].type === e) {
                if (t)
                    for (var i in t) this.listeners.events_ar[o][i] = t[i];
                this.listeners.events_ar[o].listener.call(this, this.listeners.events_ar[o]);
                break
            }
    }, this.removeListener = function(e, t) {
        if (null == e) throw Error("type is required.");
        if ("object" == typeof e) throw Error("type must be of type String.");
        if ("function" != typeof t) throw Error("listener must be of type Function." + e);
        for (var o = 0, s = this.listeners.events_ar.length; o < s; o++)
            if (this.listeners.events_ar[o].target === this && this.listeners.events_ar[o].type === e && this.listeners.events_ar[o].listener === t) {
                this.listeners.events_ar.splice(o, 1);
                break
            }
    }, this.disposeImage = function() {
        "img" == this.type && (this.screen.src = null)
    }, this.destroy = function() {
        try {
            this.screen.parentNode.removeChild(this.screen)
        } catch (e) {}
        this.screen.onselectstart = null, this.screen.ondragstart = null, this.screen.ontouchstart = null, this.screen.ontouchmove = null, this.screen.ontouchend = null, this.screen.onmouseover = null, this.screen.onmouseout = null, this.screen.onmouseup = null, this.screen.onmousedown = null, this.screen.onmousemove = null, this.screen.onclick = null, delete this.screen, delete this.style, delete this.rect, delete this.selectable, delete this.buttonMode, delete this.position, delete this.overflow, delete this.visible, delete this.innerHTML, delete this.numChildren, delete this.x, delete this.y, delete this.w, delete this.h, delete this.opacityType, delete this.isHtml5_bl, delete this.hasTransform2d_bl, this.children_ar = null, this.style = null, this.screen = null, this.numChildren = null, this.transform = null, this.position = null, this.overflow = null, this.display = null, this.visible = null, this.buttonMode = null, this.globalX = null, this.globalY = null, this.x = null, this.y = null, this.w = null, this.h = null, this.rect = null, this.alpha = null, this.innerHTML = null, this.opacityType = null, this.isHtml5_bl = null, this.hasTransform3d_bl = null, this.hasTransform2d_bl = null, i = null
    }, this.init()
},
function(o) {
    var l = function(i, e) {
        var n = this;
        l.prototype;
        this.video_el = null, this.sourcePath_str = null, this.bk_do = null, this.controllerHeight = i.data.controllerHeight, this.stageWidth = 0, this.stageHeight = 0, this.lastPercentPlayed = 0, this.volume = e, this.curDuration = 0, this.countNormalMp3Errors = 0, this.countShoutCastErrors = 0, this.maxShoutCastCountErrors = 5, this.maxNormalCountErrors = 1, this.disableClickForAWhileId_to, this.showErrorWithDelayId_to, this.playWithDelayId_to, this.disableClick_bl = !1, this.allowScrubing_bl = !1, this.hasError_bl = !0, this.isPlaying_bl = !1, this.isStopped_bl = !0, this.hasPlayedOnce_bl = !1, this.isStartEventDispatched_bl = !1, this.isSafeToBeControlled_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.init = function() {
            n.setBkColor(i.videoBackgroundColor_str), n.setupVideo()
        }, this.setupVideo = function() {
            null == n.video_el && (n.video_el = document.createElement("video"), n.screen.appendChild(n.video_el), n.video_el.controls = !1, n.video_el.volume = n.volume, i.data.playsinline && (n.video_el.WebKitPlaysInline = !0, n.video_el.playsinline = !0, n.video_el.setAttribute("playsinline", ""), n.video_el.setAttribute("webkit-playsinline", "")), i.data.aom_bl && (n.video_el.muted = !0), n.video_el.style.position = "relative", n.video_el.style.left = "0px", n.video_el.style.top = "0px", n.video_el.style.width = "100%", n.video_el.style.height = "100%", n.video_el.style.margin = "0px", n.video_el.style.padding = "0px", n.video_el.style.maxWidth = "none", n.video_el.style.maxHeight = "none", n.video_el.style.border = "none", n.video_el.style.lineHeight = "0", n.video_el.style.msTouchAction = "none", n.screen.appendChild(n.video_el)), n.video_el.addEventListener("error", n.errorHandler), n.video_el.addEventListener("canplay", n.safeToBeControlled), n.video_el.addEventListener("canplaythrough", n.safeToBeControlled), n.video_el.addEventListener("progress", n.updateProgress), n.video_el.addEventListener("timeupdate", n.updateVideo), n.video_el.addEventListener("pause", n.pauseHandler), n.video_el.addEventListener("play", n.playHandler), FWDUVPUtils.isIE || n.video_el.addEventListener("waiting", n.startToBuffer), n.video_el.addEventListener("playing", n.stopToBuffer), n.video_el.addEventListener("ended", n.endedHandler), n.resizeAndPosition()
        }, this.destroyVideo = function() {
            clearTimeout(n.showErrorWithDelayId_to), n.video_el && (n.stopToUpdateSubtitles(), n.video_el.removeEventListener("error", n.errorHandler), n.video_el.removeEventListener("canplay", n.safeToBeControlled), n.video_el.removeEventListener("canplaythrough", n.safeToBeControlled), n.video_el.removeEventListener("progress", n.updateProgress), n.video_el.removeEventListener("timeupdate", n.updateVideo), n.video_el.removeEventListener("pause", n.pauseHandler), n.video_el.removeEventListener("play", n.playHandler), FWDUVPUtils.isIE || n.video_el.removeEventListener("waiting", n.startToBuffer), n.video_el.removeEventListener("playing", n.stopToBuffer), n.video_el.removeEventListener("ended", n.endedHandler), n.isMobile_bl ? (n.screen.removeChild(n.video_el), n.video_el = null) : (n.video_el.style.visibility = "hidden", n.video_el.src = "", n.video_el.load()))
        }, this.startToBuffer = function(e) {
            n.dispatchEvent(l.START_TO_BUFFER)
        }, this.stopToBuffer = function() {
            n.dispatchEvent(l.STOP_TO_BUFFER)
        }, this.errorHandler = function(e) {
            var t;
            n.hasError_bl = !0, t = 0 == n.video_el.networkState ? "error 'self.video_el.networkState = 0'" : 1 == n.video_el.networkState ? "error 'self.video_el.networkState = 1'" : 3 == n.video_el.networkState ? "source not found" : e, o.console && o.console.log(n.video_el.networkState), clearTimeout(n.showErrorWithDelayId_to), n.showErrorWithDelayId_to = setTimeout(function() {
                n.dispatchEvent(l.ERROR, {
                    text: t
                })
            }, 200)
        }, this.resizeAndPosition = function(e, t, o, s) {
            e && (n.stageWidth = e, n.stageHeight = t), n.setWidth(n.stageWidth), n.setHeight(n.stageHeight), n.setX(o), n.setY(s), i.is360 && n.renderer && (n.camera.aspect = n.stageWidth / n.stageHeight, n.camera.updateProjectionMatrix(), n.renderer.setSize(n.stageWidth, n.stageHeight))
        }, this.setSource = function(e) {
            n.stopToUpdateSubtitles(), n.sourcePath_str = e, i.is360 && n.video_el && (n.video_el.style.visibility = "hidden"), n.video_el && n.stop(), n.video_el && FWDUVPUtils.isIphone && (n.video_el.src = e)
        }, this.play = function(e) {
            if (clearTimeout(n.playWithDelayId_to), FWDUVPlayer.curInstance = i, n.isStopped_bl) n.initVideo(), n.setVolume(), n.video_el.src = n.sourcePath_str, n.isMobile_bl ? n.play() : n.playWithDelayId_to = setTimeout(n.play, 1e3), n.hastStaredToPlayHLS_bl = !0, n.startToBuffer(!0), n.isPlaying_bl = !0;
            else if (!n.video_el.ended || e) try {
                n.hastStaredToPlayHLS_bl = !0, n.isPlaying_bl = !0, n.hasPlayedOnce_bl = !0, n.video_el.play(), n.safeToBeControlled(), FWDUVPUtils.isIE && n.dispatchEvent(l.PLAY)
            } catch (e) {}
            i.is360 && n.add360Vid()
        }, this.initVideo = function() {
            n.isPlaying_bl = !1, n.hasError_bl = !1, n.allowScrubing_bl = !1, n.isStopped_bl = !1, n.setupVideo(), n.setVolume(), n.video_el.src = n.sourcePath_str
        }, this.pause = function() {
            if (null != n && !n.isStopped_bl && !n.hasError_bl && !n.video_el.ended) try {
                n.video_el.pause(), n.isPlaying_bl = !1, FWDUVPUtils.isIE && n.dispatchEvent(l.PAUSE)
            } catch (e) {}
        }, this.togglePlayPause = function() {
            null != n && n.isSafeToBeControlled_bl && (n.isPlaying_bl ? n.pause() : n.play())
        }, this.resume = function() {
            n.isStopped_bl || n.play()
        }, this.pauseHandler = function() {
            n.allowScrubing_bl || n.dispatchEvent(l.PAUSE)
        }, this.playHandler = function() {
            n.allowScrubing_bl || (n.isStartEventDispatched_bl || (n.dispatchEvent(l.START), n.isStartEventDispatched_bl = !0), i.is360 && n.start360Render(), n.startToUpdateSubtitles(), n.dispatchEvent(l.PLAY))
        }, this.endedHandler = function() {
            n.stopToUpdateSubtitles(), n.dispatchEvent(l.PLAY_COMPLETE)
        }, this.stop = function(e) {
            (null != n && null != n.video_el && !n.isStopped_bl || e) && (clearTimeout(n.sizeId_to), n.isPlaying_bl = !1, n.isStopped_bl = !0, n.hasPlayedOnce_bl = !0, n.hastStaredToPlayHLS_bl = !1, n.isSafeToBeControlled_bl = !1, n.isStartEventDispatched_bl = !1, n.stopToUpdateSubtitles(), clearTimeout(n.playWithDelayId_to), n.stop360Render(), n.destroyVideo(), n.dispatchEvent(l.LOAD_PROGRESS, {
                percent: 0
            }), n.dispatchEvent(l.UPDATE_TIME, {
                curTime: "00:00",
                totalTime: "00:00"
            }), n.dispatchEvent(l.STOP), n.stopToBuffer())
        }, this.safeToBeControlled = function() {
            i.videoType_str == FWDUVPlayer.HLS_JS && !n.hastStaredToPlayHLS_bl || (n.stopToScrub(), n.isSafeToBeControlled_bl || (n.resizeAndPosition(), n.hasHours_bl = 0 < Math.floor(n.video_el.duration / 3600), n.isPlaying_bl = !0, n.isSafeToBeControlled_bl = !0, i.is360 || (n.video_el.style.visibility = "visible"), setTimeout(function() {
                n.renderer && (n.renderer.domElement.style.left = "0px")
            }, 1e3), i.fillEntireVideoScreen_bl ? n.sizeId_to = setTimeout(function() {
                n.dispatchEvent(l.SAFE_TO_SCRUBB)
            }, 500) : n.dispatchEvent(l.SAFE_TO_SCRUBB)))
        }, this.updateProgress = function() {
            if (i.videoType_str != FWDUVPlayer.HLS_JS || n.hastStaredToPlayHLS_bl) {
                var e = 0;
                0 < n.video_el.buffered.length && (e = n.video_el.buffered.end(n.video_el.buffered.length - 1).toFixed(1) / n.video_el.duration.toFixed(1), !isNaN(e) && e || (e = 0)), 1 == e && n.video_el.removeEventListener("progress", n.updateProgress), n.dispatchEvent(l.LOAD_PROGRESS, {
                    percent: e
                })
            }
        }, this.updateVideo = function() {
            var e;
            n.allowScrubing_bl || (e = n.video_el.currentTime / n.video_el.duration, n.dispatchEvent(l.UPDATE, {
                percent: e
            }));
            var t = l.formatTime(n.video_el.duration),
                o = l.formatTime(n.video_el.currentTime);
            isNaN(n.video_el.duration) ? n.dispatchEvent(l.UPDATE_TIME, {
                curTime: "00:00",
                totalTime: "00:00",
                seconds: 0,
                totalTimeInSeconds: 0
            }) : n.dispatchEvent(l.UPDATE_TIME, {
                curTime: o,
                totalTime: t,
                seconds: parseInt(n.video_el.currentTime),
                totalTimeInSeconds: n.video_el.duration
            }), n.lastPercentPlayed = e, n.curDuration = o
        }, this.startToScrub = function() {
            n.allowScrubing_bl = !0
        }, this.stopToScrub = function() {
            n.allowScrubing_bl = !1
        }, this.scrubbAtTime = function(e) {
            n.video_el.currentTime = e;
            var t = l.formatTime(n.video_el.duration),
                o = l.formatTime(n.video_el.currentTime);
            n.dispatchEvent(l.UPDATE_TIME, {
                curTime: o,
                totalTime: t
            })
        }, this.scrub = function(e, t) {
            t && n.startToScrub();
            try {
                n.video_el.currentTime = n.video_el.duration * e;
                var o = l.formatTime(n.video_el.duration),
                    s = l.formatTime(n.video_el.currentTime);
                n.dispatchEvent(l.UPDATE_TIME, {
                    curTime: s,
                    totalTime: o
                })
            } catch (t) {}
        }, this.replay = function() {
            n.scrub(0), n.play()
        }, this.setVolume = function(e) {
            null != e && (n.volume = e), n.video_el && (n.video_el.volume = n.volume, e && (n.video_el.muted = !1))
        }, this.setPlaybackRate = function(e) {
            n.video_el && (n.video_el.defaultPlaybackRate = e, n.video_el.playbackRate = e)
        }, this.add360Vid = function() {
            n.renderer ? n.screen.appendChild(n.renderer.domElement) : null != o.THREE && (n.renderer = new THREE.WebGLRenderer({
                antialias: !0
            }), n.renderer.setSize(n.stageWidth, n.stageHeight), n.renderer.domElement.style.position = "absolute", n.renderer.domElement.style.left = "0px", n.renderer.domElement.style.top = "0px", n.renderer.domElement.style.margin = "0px", n.renderer.domElement.style.padding = "0px", n.renderer.domElement.style.maxWidth = "none", n.renderer.domElement.style.maxHeight = "none", n.renderer.domElement.style.border = "none", n.renderer.domElement.style.lineHeight = "1", n.renderer.domElement.style.backgroundColor = "transparent", n.renderer.domElement.style.backfaceVisibility = "hidden", n.renderer.domElement.style.webkitBackfaceVisibility = "hidden", n.renderer.domElement.style.MozBackfaceVisibility = "hidden", n.renderer.domElement.style.MozImageRendering = "optimizeSpeed", n.renderer.domElement.style.WebkitImageRendering = "optimizeSpeed", n.screen.appendChild(n.renderer.domElement), n.scene = new THREE.Scene, n.video_el.setAttribute("crossorigin", "anonymous"), n.canvas = document.createElement("canvas"), n.context = n.canvas.getContext("2d"), FWDUVPUtils.isFirefox ? n.videoTexture = new THREE.Texture(n.video_el) : n.videoTexture = new THREE.Texture(n.canvas), n.videoTexture.minFilter = THREE.LinearFilter, n.videoTexture.magFilter = THREE.LinearFilter, n.videoTexture.format = THREE.RGBFormat, n.cubeGeometry = new THREE.SphereGeometry(500, 60, 40), n.sphereMat = new THREE.MeshBasicMaterial({
                map: n.videoTexture
            }), n.sphereMat.side = THREE.BackSide, n.cube = new THREE.Mesh(n.cubeGeometry, n.sphereMat), n.scene.add(n.cube), n.camera = new THREE.PerspectiveCamera(45, n.stageWidth / n.stageHeight, .1, 1e4), n.camera.position.y = 0, n.camera.position.z = 500, n.camera.position.x = 0, n.scene.add(n.camera), n.controls = new THREE.OrbitControls(n.camera, i.dumyClick_do.screen), n.controls.enableDamping = !0, n.controls.enableZoom = !1, n.controls.dampingFactor = .25, n.controls.maxDistance = 500, n.controls.minDistance = 500, n.controls.rotateLeft(90 * Math.PI / 180), n.controls.enabled = !0, n.render())
        }, this.start360Render = function() {
            n.is360Rendering_bl = !0, cancelAnimationFrame(n.requestId), n.requestId = requestAnimationFrame(n.render)
        }, this.stop360Render = function() {
            if (n.is360Rendering_bl = !1, n.camera) {
                n.camera.position.y = 0, n.camera.position.z = 500, n.camera.position.x = 0, n.renderer.domElement.style.left = "-10000px", cancelAnimationFrame(n.requestId);
                try {
                    n.screen.removeChild(n.renderer.domElement)
                } catch (e) {}
            }
        }, this.render = function() {
            n.is360Rendering_bl && n.camera && i.is360 ? (n.video_el.readyState === n.video_el.HAVE_ENOUGH_DATA && (n.videoTexture.needsUpdate = !0), FWDUVPUtils.isFirefox || !n.context || n.isStopped_bl || (0 != n.video_el.videoWidth && (n.canvas.width = n.video_el.videoWidth, n.canvas.height = n.video_el.videoHeight), n.context.save(), n.context.scale(-1, 1), n.context.drawImage(n.video_el, 0, 0, -1 * n.canvas.width, n.canvas.height), n.context.restore()), n.controls.update(), n.renderer.render(n.scene, n.camera), n.requestId = requestAnimationFrame(n.render)) : cancelAnimationFrame(n.requestId)
        }, this.stopToUpdateSubtitles = function() {
            clearInterval(n.startToUpdateSubtitleId_int)
        }, this.startToUpdateSubtitles = function() {
            clearInterval(n.startToUpdateSubtitleId_int), n.startToUpdateSubtitleId_int = setInterval(n.updateSubtitleHandler, 10)
        }, this.updateSubtitleHandler = function() {
            n.dispatchEvent(l.UPDATE_SUBTITLE, {
                curTime: n.video_el.currentTime
            })
        }, l.formatTime = function(e) {
            var t = Math.floor(e / 3600),
                o = e % 3600,
                s = Math.floor(o / 60),
                i = o % 60,
                n = Math.ceil(i);
            return s = 10 <= s ? s : "0" + s, n = 10 <= n ? n : "0" + n, isNaN(n) ? "00:00" : t ? 10 <= t ? t + ":" + s + ":" + n : "0" + t + ":" + s + ":" + n : s + ":" + n
        }, this.init()
    };
    l.setPrototype = function() {
        l.prototype = new FWDUVPDisplayObject("div")
    }, l.UPDATE_SUBTITLE = "updateSubtitle", l.ERROR = "error", l.UPDATE = "update", l.UPDATE_TIME = "updateTime", l.SAFE_TO_SCRUBB = "safeToControll", l.LOAD_PROGRESS = "loadProgress", l.START = "start", l.PLAY = "play", l.PAUSE = "pause", l.STOP = "stop", l.PLAY_COMPLETE = "playComplete", l.START_TO_BUFFER = "startToBuffer", l.STOP_TO_BUFFER = "stopToBuffer", o.FWDUVPVideoScreen = l
}(window),
function(e) {
    var i = function(o, e) {
        var s = this;
        i.prototype;
        this.iframe_do = null, this.vimeoPlayer = null, this.lastQuality_str = "auto", this.volume = e, this.updateVideoId_int, this.updatePreloadId_int, this.controllerHeight = o.data.controllerHeight, this.hasBeenCreatedOnce_bl = !0, this.hasHours_bl = !1, this.allowScrubing_bl = !1, this.hasError_bl = !1, this.isPlaying_bl = !1, this.isStopped_bl = !0, this.isStartEventDispatched_bl = !1, this.isSafeToBeControlled_bl = !1, this.isPausedInEvent_bl = !0, this.isShowed_bl = !0, this.isCued_bl = !1, this.isVideoLoaded_bl = !1, this.isReady_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.init = function() {
            s.hasTransform3d_bl = !1, s.hasTransform2d_bl = !1, s.setBackfaceVisibility(), o.videoHolder_do.addChildAt(s, 0), s.resizeAndPosition(), s.setupVideo(), s.setupDisableClick(), s.setBkColor("#000000")
        }, this.setupDisableClick = function() {
            s.disableClick_do = new FWDUVPDisplayObject("div"), s.disableClick_do.setBkColor(o.backgroundColor_str), s.disableClick_do.setAlpha(1e-8), s.addChild(s.disableClick_do)
        }, this.showDisable = function() {
            o.tempVidStageWidth && s.disableClick_do.w != s.stageWidth && (s.disableClick_do.setWidth(o.tempVidStageWidth), FWDUVPUtils.isIphone ? s.disableClick_do.setHeight(o.tempVidStageHeight - s.controllerHeight) : s.disableClick_do.setHeight(o.tempVidStageHeight))
        }, this.hideDisable = function() {
            0 != s.disableClick_do.w && (s.disableClick_do.setWidth(0), s.disableClick_do.setHeight(0))
        }, this.setupVideo = function() {
            s.vimeoPlayer || (s.iframe_do = new FWDUVPDisplayObject("IFRAME"), s.iframe_do.hasTransform3d_bl = !1, s.iframe_do.hasTransform2d_bl = !1, s.iframe_do.screen.setAttribute("id", o.instanceName_str + "vimeo"), s.isMobile_bl && (s.iframe_do.screen.setAttribute("webkitallowfullscreen", "1"), s.iframe_do.screen.setAttribute("mozallowfullscreen", "1"), s.iframe_do.screen.setAttribute("allowfullscreen", "1")), o.data.aom_bl && s.iframe_do.screen.setAttribute("muted", "1"), s.iframe_do.screen.setAttribute("src", "https://player.vimeo.com/video/76979871?player_id=" + o.instanceName_str + "vimeo&autoplay=0&muted=1"), s.iframe_do.getStyle().width = "100%", s.iframe_do.getStyle().height = "100%", s.iframe_do.setBackfaceVisibility(), s.addChild(s.iframe_do), s.vimeoPlayer = new Vimeo.Player(s.iframe_do.screen), s.vimeoPlayer.on("play", function(e) {
                s.playHandler()
            }), s.vimeoPlayer.on("pause", function(e) {
                s.pauseHandler()
            }), s.vimeoPlayer.on("loadProgress", function(e) {
                s.loadProgressHandler()
            }), s.vimeoPlayer.on("ended", function(e) {
                s.finishHandler()
            }), s.vimeoPlayer.on("loaded", function(e) {
                s.loadedHandler()
            }), s.vimeoPlayer.ready().then(function() {
                s.readyHandler()
            }), s.blackOverlay_do = new FWDUVPDisplayObject("div"), s.blackOverlay_do.getStyle().backgroundColor = "#000000", s.blackOverlay_do.getStyle().width = "100%", s.blackOverlay_do.getStyle().height = "100%", s.addChild(s.blackOverlay_do))
        }, this.resizeAndPosition = function() {
            o.tempVidStageWidth && (s.setWidth(o.tempVidStageWidth), s.setHeight(o.tempVidStageHeight - s.controllerHeight))
        }, this.setSource = function(e) {
            e && (s.sourcePath_str = e), s.stopToUpdateSubtitles(), s.stop();
            var t = s.sourcePath_str.match(/[^\/]+$/i);
            s.vimeoPlayer.loadVideo(t).then(function(e) {
                (!o.isMobile_bl && (o.data.autoPlay_bl || o.isThumbClick_bl) || o.isAdd_bl || o.wasAdd_bl) && o.play(), s.setVolume(o.volume)
            }).catch(function(e) {
                console && console.log(e), s.displayErrorId_to = setTimeout(function() {
                    s.dispatchEvent(i.ERROR, {
                        error: e.name
                    })
                }, 2e3), console && console.log(e)
            })
        }, this.readyHandler = function() {
            if (clearTimeout(s.intitErrorId_to), s.contains(s.blackOverlay_do) && (clearTimeout(s.removeChildWithDelayId_to), s.removeChildWithDelayId_to = setTimeout(function() {
                    s.removeChild(s.blackOverlay_do)
                }, 1500)), s.resizeAndPosition(), s.isReady_bl) {
                try {
                    s.vimeoPlayer.api("setColor", "#FFFFFF")
                } catch (e) {}
                return o.videoType_str == FWDUVPlayer.VIMEO && s.setX(0), void(o.data.autoPlay_bl && o.play())
            }
            s.isReady_bl = !0, s.dispatchEvent(i.READY)
        }, this.loadedHandler = function() {
            s.isVideoLoaded_bl = !0
        }, this.playHandler = function() {
            clearInterval(s.startToPlayWithDelayId_to), clearTimeout(s.displayErrorId_to), s.isStopped_bl = !1, s.isSafeToBeControlled_bl = !0, s.isPlaying_bl = !0, s.startToUpdateSubtitles(), s.startToUpdate(), s.dispatchEvent(i.SAFE_TO_SCRUBB), s.dispatchEvent(i.PLAY), s.hasHours_bl = 0 < Math.floor(s.getDuration() / 3600)
        }, this.loadProgressHandler = function(e) {
            s.isShowed_bl || s.dispatchEvent(i.LOAD_PROGRESS, {
                percent: e.percent
            })
        }, this.pauseHandler = function() {
            s.isPlaying_bl && (s.isPlaying_bl = !1, clearInterval(s.startToPlayWithDelayId_to), s.dispatchEvent(i.PAUSE), s.stopToUpdate())
        }, this.finishHandler = function() {
            o.data.loop_bl && (s.stop(), setTimeout(s.play, 200)), s.dispatchEvent(i.PLAY_COMPLETE)
        }, this.play = function(e) {
            FWDUVPlayer.curInstance = o;
            s.hasError_bl = !1, o.prevVideoType_str, FWDUVPlayer.VIMEO, s.vimeoPlayer.play(), s.isMobile_bl || (s.isStopped_bl = !1)
        }, this.pause = function() {
            s.isStopped_bl || s.hasError_bl || (clearInterval(s.startToPlayWithDelayId_to), s.vimeoPlayer.pause(), s.stopToUpdate())
        }, this.togglePlayPause = function() {
            s.isPlaying_bl ? s.pause() : s.play()
        }, this.resume = function() {
            s.isStopped_bl || s.play()
        }, this.startToUpdate = function() {
            clearInterval(s.updateVideoId_int), s.updateVideoId_int = setInterval(s.updateVideo, 500)
        }, this.stopToUpdate = function() {
            clearInterval(s.updateVideoId_int)
        }, this.updateVideo = function() {
            var e;
            if (s.vimeoPlayer) {
                var t = s.formatTime(s.getDuration()),
                    o = s.formatTime(s.getCurrentTime());
                e = s.getCurrentTime() / s.getDuration(), isNaN(e) && (e = 0), s.dispatchEvent(FWDUVPYoutubeScreen.UPDATE, {
                    percent: e
                }), s.dispatchEvent(i.UPDATE_TIME, {
                    curTime: o,
                    totalTime: t,
                    seconds: parseInt(s.getCurrentTime()),
                    totalTimeInSeconds: s.getCurrentTime()
                })
            } else stopToUpdate()
        }, this.stop = function(e) {
            s.isVideoLoaded_bl = !1, s.isStopped_bl || (clearInterval(s.startToPlayWithDelayId_to), clearTimeout(s.displayErrorId_to), s.stopVideo(), s.stopToUpdateSubtitles(), s.isPlaying_bl = !1, s.isStopped_bl = !0, s.isCued_bl = !1, s.allowScrubing_bl = !1, s.isSafeToBeControlled_bl = !1, s.isPausedInEvent_bl = !0, s.stopToUpdate(), e || (s.stopVideo(), s.dispatchEvent(i.STOP)))
        }, this.destroy = function() {
            s.iframe_do && (s.iframe_do.screen.removeAttribute("id", o.instanceName_str + "vimeo"), s.removeChild(s.iframe_do), s.iframe_do.destroy(), s.iframe_do = null), s.vimeoPlayer = null
        }, this.stopVideo = function() {
            s.vimeoPlayer.unload().then(function() {}).catch(function(e) {})
        }, this.startToScrub = function() {
            s.isSafeToBeControlled_bl && (s.allowScrubing_bl = !0)
        }, this.stopToScrub = function() {
            s.isSafeToBeControlled_bl && (s.allowScrubing_bl = !1)
        }, this.scrubbAtTime = function(e) {
            s.vimeoPlayer.setCurrentTime(e).then(function(e) {})
        }, this.scrub = function(e) {
            s.isSafeToBeControlled_bl && s.vimeoPlayer.setCurrentTime(e * s.getDuration()).then(function(e) {})
        }, this.setVolume = function(e) {
            null != e && (s.volume = e), s.vimeoPlayer && s.vimeoPlayer.setVolume(e)
        }, this.getDuration = function() {
            if (s.isSafeToBeControlled_bl) return s.vimeoPlayer.getDuration().then(function(e) {
                s.duration = Math.round(e)
            }), s.duration
        }, this.getCurrentTime = function() {
            if (s.isSafeToBeControlled_bl) return s.vimeoPlayer.getCurrentTime().then(function(e) {
                s.currentTime = Math.round(e)
            }), s.currentTime
        }, this.formatTime = function(e) {
            var t = Math.floor(e / 3600),
                o = e % 3600,
                s = Math.floor(o / 60),
                i = o % 60,
                n = Math.ceil(i);
            return s = 10 <= s ? s : "0" + s, n = 10 <= n ? n : "0" + n, isNaN(n) ? "00:00" : t ? 10 <= t ? t + ":" + s + ":" + n : "0" + t + ":" + s + ":" + n : s + ":" + n
        }, this.stopToUpdateSubtitles = function() {
            clearInterval(s.startToUpdateSubtitleId_int)
        }, this.startToUpdateSubtitles = function() {
            clearInterval(s.startToUpdateSubtitleId_int), s.startToUpdateSubtitleId_int = setInterval(s.updateSubtitleHandler, 10)
        }, this.updateSubtitleHandler = function() {
            s.getCurrentTime() && s.dispatchEvent(i.UPDATE_SUBTITLE, {
                curTime: s.getCurrentTime()
            })
        }, this.init()
    };
    i.setPrototype = function() {
        i.prototype = new FWDUVPDisplayObject("div")
    }, i.UPDATE_SUBTITLE = "updateSubtitle", i.SAFE_TO_SCRUBB = "safeToScrub", i.READY = "ready", i.ERROR = "initError", i.UPDATE = "update", i.UPDATE_TIME = "updateTime", i.LOAD_PROGRESS = "loadProgress", i.PLAY = "play", i.PAUSE = "pause", i.STOP = "stop", i.PLAY_COMPLETE = "playComplete", i.CUED = "cued", i.QUALITY_CHANGE = "qualityChange", e.FWDUVPVimeoScreen = i
}(window),
function(e) {
    var c = function(e, t, o, s, i, n, l, a, r, d) {
        var u = this,
            h = c.prototype;
        this.iconCSSString1 = l, this.iconCSSString2 = a, this.nImg = e, this.sPath_str = t, this.dPath_str = o, this.n_sdo, this.s_sdo, this.d_sdo, this.toolTipLabel_str, this.nImg && (this.totalWidth = this.nImg.width, this.totalHeight = this.nImg.height), this.normalCalssName = r, this.selectedCalssName = d, this.useHEXColorsForSkin_bl = s, this.normalButtonsColor_str = i, this.selectedButtonsColor_str = n, this.isSetToDisabledState_bl = !1, this.isDisabled_bl = !1, this.isSelectedFinal_bl = !1, this.isActive_bl = !1, this.isMobile_bl = FWDUVPUtils.isMobile, this.hasPointerEvent_bl = FWDUVPUtils.hasPointerEvent, this.allowToCreateSecondButton_bl = !0, this.useFontAwesome_bl = Boolean(this.iconCSSString1), u.init = function() {
            u.setupMainContainers(), u.setNormalState(!1)
        }, u.setupMainContainers = function() {
            if (u.useFontAwesome_bl) u.n_sdo = new FWDUVPTransformDisplayObject("div"), u.n_sdo.setInnerHTML(u.iconCSSString1), u.addChild(u.n_sdo), u.d_sdo = new FWDUVPTransformDisplayObject("div"), u.d_sdo.setInnerHTML(u.iconCSSString2), u.addChild(u.d_sdo), u.setFinalSize();
            else if (u.useHEXColorsForSkin_bl ? (u.n_sdo = new FWDUVPTransformDisplayObject("div"), u.n_sdo.setWidth(u.totalWidth), u.n_sdo.setHeight(u.totalHeight), u.n_sdo_canvas = FWDUVPUtils.getCanvasWithModifiedColor(u.nImg, u.normalButtonsColor_str).canvas, u.n_sdo.screen.appendChild(u.n_sdo_canvas)) : (u.n_sdo = new FWDUVPTransformDisplayObject("img"), u.n_sdo.setScreen(u.nImg)), u.addChild(u.n_sdo), u.allowToCreateSecondButton_bl) {
                u.img1 = new Image, u.img1.src = u.sPath_str;
                var e = new Image;
                u.sImg = e, u.useHEXColorsForSkin_bl ? (u.s_sdo = new FWDUVPTransformDisplayObject("div"), u.s_sdo.setWidth(u.totalWidth), u.s_sdo.setHeight(u.totalHeight), u.img1.onload = function() {
                    u.s_sdo_canvas = FWDUVPUtils.getCanvasWithModifiedColor(u.img1, u.selectedButtonsColor_str).canvas, u.s_sdo.screen.appendChild(u.s_sdo_canvas)
                }) : (u.s_sdo = new FWDUVPDisplayObject("img"), u.s_sdo.setScreen(u.img1), u.s_sdo.setWidth(u.totalWidth), u.s_sdo.setHeight(u.totalHeight)), u.s_sdo.setAlpha(0), u.addChild(u.s_sdo), u.dPath_str && (e.src = u.dPath_str, u.d_sdo = new FWDUVPDisplayObject("img"), u.d_sdo.setScreen(e), u.d_sdo.setWidth(u.totalWidth), u.d_sdo.setHeight(u.totalHeight), u.d_sdo.setX(-100), u.addChild(u.d_sdo))
            }
            u.setWidth(u.totalWidth), u.setHeight(u.totalHeight), u.setButtonMode(!0), u.hasPointerEvent_bl ? (u.screen.addEventListener("pointerup", u.onMouseUp), u.screen.addEventListener("pointerover", u.onMouseOver), u.screen.addEventListener("pointerout", u.onMouseOut)) : u.screen.addEventListener && (u.screen.addEventListener("mouseover", u.onMouseOver), u.screen.addEventListener("mouseout", u.onMouseOut), u.screen.addEventListener("mouseup", u.onMouseUp), u.screen.addEventListener("touchstart", u.onMouseDown), u.screen.addEventListener("touchstart", u.onMouseUp))
        }, this.setFinalSize = function() {
            u.setWidth(u.n_sdo.getWidth()), u.setHeight(u.n_sdo.getHeight()), u.buttonWidth = u.w, u.buttonHeight = u.h, 0 == u.w && setTimeout(function() {
                u.setFinalSize()
            }, 300)
        }, this.setNormalState = function(e) {
            u.useFontAwesome_bl ? (FWDAnimation.killTweensOf(u.n_sdo.screen), FWDAnimation.killTweensOf(u.d_sdo.screen), e ? (FWDAnimation.to(u.n_sdo.screen, .8, {
                className: u.normalCalssName,
                ease: Expo.easeOut
            }), FWDAnimation.to(u.d_sdo.screen, .8, {
                className: u.normalCalssName,
                ease: Expo.easeOut
            })) : (u.n_sdo.screen.className = u.normalCalssName, u.d_sdo.screen.className = u.normalCalssName)) : (FWDAnimation.killTweensOf(u.s_sdo), FWDAnimation.to(u.s_sdo, .5, {
                alpha: 0,
                ease: Expo.easeOut
            }))
        }, this.setSelectedState = function(e) {
            u.useFontAwesome_bl ? (FWDAnimation.killTweensOf(u.n_sdo.screen), FWDAnimation.killTweensOf(u.d_sdo.screen), e ? (FWDAnimation.to(u.n_sdo.screen, .8, {
                className: u.selectedCalssName,
                ease: Expo.easeOut
            }), FWDAnimation.to(u.d_sdo.screen, .8, {
                className: u.selectedCalssName,
                ease: Expo.easeOut
            })) : (u.n_sdo.screen.className = u.selectedCalssName, u.d_sdo.screen.className = u.selectedCalssName)) : (FWDAnimation.killTweensOf(u.s_sdo), FWDAnimation.to(u.s_sdo, .5, {
                alpha: 1,
                delay: .1,
                ease: Expo.easeOut
            }))
        }, u.onMouseOver = function(e) {
            if (!e.pointerType || "mouse" == e.pointerType) {
                if (u.isDisabled_bl || u.isSelectedFinal_bl) return;
                u.dispatchEvent(c.MOUSE_OVER, {
                    e: e
                }), u.setSelectedState(!0)
            }
        }, u.onMouseOut = function(e) {
            if (!e.pointerType || "mouse" == e.pointerType) {
                if (u.isDisabled_bl || u.isSelectedFinal_bl) return;
                u.dispatchEvent(c.MOUSE_OUT, {
                    e: e
                }), u.setNormalState(!0)
            }
        }, u.onMouseDown = function(e) {
            e.preventDefault && e.preventDefault(), u.isDisabled_bl || 2 == e.button || u.isSelectedFinal_bl || u.dispatchEvent(c.MOUSE_DOWN, {
                e: e
            })
        }, u.onMouseUp = function(e) {
            e.preventDefault && e.preventDefault(), u.isDisabled_bl || 2 == e.button || u.isSelectedFinal_bl || u.dispatchEvent(c.MOUSE_UP, {
                e: e
            })
        }, u.setSelctedFinal = function() {
            u.isSelectedFinal_bl = !0, FWDAnimation.killTweensOf(u.s_sdo), FWDAnimation.to(u.s_sdo, .8, {
                alpha: 1,
                ease: Expo.easeOut
            }), u.setButtonMode(!1)
        }, u.setUnselctedFinal = function() {
            u.isSelectedFinal_bl = !1, FWDAnimation.to(u.s_sdo, .8, {
                alpha: 0,
                delay: .1,
                ease: Expo.easeOut
            }), u.setButtonMode(!0)
        }, this.setDisabledState = function() {
            u.isSetToDisabledState_bl || (u.isSetToDisabledState_bl = !0, u.useFontAwesome_bl ? u.n_sdo.setX(-1e4) : (u.d_sdo.setX(0), FWDAnimation.killTweensOf(u.d_sdo), FWDAnimation.to(u.d_sdo, .8, {
                alpha: 1,
                ease: Expo.easeOut
            })))
        }, this.setEnabledState = function() {
            u.isSetToDisabledState_bl && (u.isSetToDisabledState_bl = !1, u.useFontAwesome_bl ? u.n_sdo.setX(0) : (u.d_sdo.setX(-100), FWDAnimation.killTweensOf(u.d_sdo), FWDAnimation.to(u.d_sdo, .8, {
                alpha: 0,
                delay: .1,
                ease: Expo.easeOut
            })))
        }, this.disable = function() {
            u.isDisabled_bl = !0, u.setButtonMode(!1)
        }, this.enable = function() {
            u.isDisabled_bl = !1, u.setButtonMode(!0)
        }, u.updateHEXColors = function(e, t) {
            FWDUVPUtils.changeCanvasHEXColor(u.nImg, u.n_sdo_canvas, e), FWDUVPUtils.changeCanvasHEXColor(u.img1, u.s_sdo_canvas, t)
        }, u.destroy = function() {
            u.isMobile_bl ? u.hasPointerEvent_bl ? (u.screen.removeEventListener("pointerdown", u.onMouseUp), u.screen.removeEventListener("pointerover", u.onMouseOver), u.screen.removeEventListener("pointerout", u.onMouseOut)) : (u.screen.removeEventListener("touchstart", u.onMouseDown), u.screen.removeEventListener("touchend", u.onMouseUp)) : u.screen.removeEventListener && (u.screen.removeEventListener("mouseover", u.onMouseOver), u.screen.removeEventListener("mouseout", u.onMouseOut), u.screen.removeEventListener("mousedown", u.onMouseUp)), FWDAnimation.killTweensOf(u.s_sdo), u.n_sdo.destroy(), u.s_sdo.destroy(), u.d_sdo && (FWDAnimation.killTweensOf(u.d_sdo), u.d_sdo.destroy()), u.nImg = null, u.sImg = null, u.dImg = null, u.n_sdo = null, u.s_sdo = null, u.d_sdo = null, sImg = e = null, dImg = null, u.toolTipLabel_str = null, u.init = null, u.setupMainContainers = null, u.onMouseOver = null, u.onMouseOut = null, u.onClick = null, u.onMouseDown = null, u.setSelctedFinal = null, u.setUnselctedFinal = null, u.setInnerHTML(""), h.destroy(), h = u = null, c.prototype = null
        }, u.init()
    };
    c.setPrototype = function() {
        c.prototype = null, c.prototype = new FWDUVPDisplayObject("div")
    }, c.SHOW_TOOLTIP = "showTooltip", c.CLICK = "onClick", c.MOUSE_OVER = "onMouseOver", c.MOUSE_OUT = "onMouseOut", c.MOUSE_UP = "onMouseUp", c.MOUSE_DOWN = "onMouseDown", c.prototype = null, e.FWDUVPVolumeButton = c
}(window),
function(e) {
    var s = function(t, e) {
        var l = this;
        s.prototype;
        this.videoHolder_do = null, this.ytb = null, this.lastQuality_str = "auto", this.volume = e, this.updateVideoId_int, this.updatePreloadId_int, this.controllerHeight = t.data.controllerHeight, this.hasHours_bl = !1, this.hasBeenCreatedOnce_bl = !1, this.allowScrubing_bl = !1, this.hasError_bl = !1, this.isPlaying_bl = !1, this.isStopped_bl = !0, this.isStartEventDispatched_bl = !1, this.isSafeToBeControlled_bl = !1, this.isPausedInEvent_bl = !0, this.isShowed_bl = !0, this.isQualityArrayDisapatched_bl = !1, this.playsinline = t.data.playsinline ? 1 : 0, this.isMobile_bl = FWDUVPUtils.isMobile, this.init = function() {
            l.hasTransform3d_bl = !1, l.hasTransform2d_bl = !1, l.setBkColor("#000000"), l.setBackfaceVisibility(), t.videoHolder_do.addChildAt(l, 0), l.resizeAndPosition(), l.setupVideo()
        }, this.setupVideo = function() {
            l.videoHolder_do = new FWDUVPDisplayObject("div"), l.videoHolder_do.hasTransform3d_bl = !1, l.videoHolder_do.hasTransform2d_bl = !1, l.videoHolder_do.screen.setAttribute("id", t.instanceName_str + "youtube"), l.videoHolder_do.getStyle().width = "100%", l.videoHolder_do.getStyle().height = "100%", l.videoHolder_do.setBackfaceVisibility(), l.addChild(l.videoHolder_do), l.ytb = new YT.Player(t.instanceName_str + "youtube", {
                width: "100%",
                height: "100%",
                playerVars: {
                    controls: 0,
                    disablekb: 0,
                    loop: 0,
                    autoplay: 0,
                    wmode: "opaque",
                    showinfo: 0,
                    rel: 0,
                    modestbranding: 1,
                    iv_load_policy: 3,
                    cc_load_policy: 0,
                    fs: 0,
                    html5: 1,
                    playsinline: l.playsinline
                },
                events: {
                    onReady: l.playerReadyHandler,
                    onError: l.playerErrorHandler,
                    onStateChange: l.stateChangeHandler,
                    onPlaybackQualityChange: l.qualityChangeHandler
                }
            }), l.setBkColor("#FFFFFF")
        }, this.playerReadyHandler = function() {
            l.resizeAndPosition(), t.data.aom_bl && l.ytb.mute(), l.dispatchEvent(s.READY), l.hasBeenCreatedOnce_bl = !0
        }, this.stateChangeHandler = function(e) {
            if (-1 == e.data && l.isCued_bl && l.isMobile_bl && (l.isStopped_bl = !1, FWDUVPlayer.stopAllVideos(t)), e.data == YT.PlayerState.PLAYING) l.isSafeToBeControlled_bl || (l.isStopped_bl = !1, l.isSafeToBeControlled_bl = !0, l.isPlaying_bl = !0, l.hasHours_bl = 0 < Math.floor(l.ytb.getDuration() / 3600), l.setVolume(t.volume), l.startToUpdate(), l.startToPreload(), l.scrub(1e-5), l.isMobile_bl || l.setQuality(l.lastQuality_str), l.ytb.getAvailableQualityLevels() && 0 != l.ytb.getAvailableQualityLevels().length && l.dispatchEvent(s.QUALITY_CHANGE, {
                qualityLevel: l.ytb.getPlaybackQuality(),
                levels: l.ytb.getAvailableQualityLevels()
            }), l.startToUpdateSubtitles(), l.dispatchEvent(s.SAFE_TO_SCRUBB)), l.isPausedInEvent_bl && l.dispatchEvent(s.PLAY), l.isPausedInEvent_bl = !1, l.hasError_bl = !1;
            else if (e.data == YT.PlayerState.PAUSED) {
                if (!l.isSafeToBeControlled_bl) return;
                l.isStopped_bl = !1, l.isPausedInEvent_bl || l.dispatchEvent(s.PAUSE), l.isPausedInEvent_bl = !0
            } else e.data == YT.PlayerState.ENDED ? l.ytb.getCurrentTime() && 0 < l.ytb.getCurrentTime() && (l.isStopped_bl = !1, l.stopToUpdateSubtitles(), setTimeout(function() {
                l.dispatchEvent(s.PLAY_COMPLETE)
            }, 100)) : e.data == YT.PlayerState.CUED && (l.isStopped_bl || l.dispatchEvent(s.CUED), l.isCued_bl = !0)
        }, this.qualityChangeHandler = function(e) {
            l.ytb.getAvailableQualityLevels() && 0 != l.ytb.getAvailableQualityLevels().length && l.dispatchEvent(s.QUALITY_CHANGE, {
                qualityLevel: l.ytb.getPlaybackQuality()
            })
        }, this.playerErrorHandler = function(e) {
            if (l.isPausedInEvent_bl = !0, !l.isStopped_bl && !l.hasError_bl) {
                var t = "";
                l.hasError_bl = !0, 2 == e.data ? t = "The youtube id is not well formatted, make sure it has exactly 11 characters and that it dosn't contain invalid characters such as exclamation points or asterisks." : 5 == e.data ? t = "The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred." : 100 == e.data ? t = "The youtube video request was not found, probably the video ID is incorrect." : 101 != e.data && 150 != e.data || (t = "The owner of the requested video does not allow it to be played in embedded players."), l.dispatchEvent(s.ERROR, {
                    text: t
                })
            }
        }, this.resizeAndPosition = function() {
            if (l.setWidth(t.tempVidStageWidth), l.setHeight(t.tempVidStageHeight), l.videoHolder_do && (l.videoHolder_do.setWidth(t.tempVidStageWidth), l.videoHolder_do.setHeight(t.tempVidStageHeight), l.ytb && l.ytb.a)) try {
                l.ytb.a.width = t.tempVidStageWidth, l.ytb.a.height = t.tempVidStageHeight, l.ytb.a.style.width = t.tempVidStageWidth + "px", l.ytb.a.style.height = t.tempVidStageHeight + "px"
            } catch (e) {}
        }, this.setSource = function(e) {
            e && (l.sourcePath_str = e), clearInterval(l.setSourceId_int), l.setSourceId_int = setInterval(function() {
                l.ytb.cueVideoById && l.ytb.setPlaybackRate && (l.ytb.cueVideoById(l.sourcePath_str), !t.isMobile_bl && (t.data.autoPlay_bl || t.isThumbClick_bl || t.isAdd_bl && !t.loadAddFirstTime_bl) && (t.videoPoster_do.hide(!0), t.largePlayButton_do.hide(), t.play()), clearInterval(l.setSourceId_int))
            }, 50)
        }, this.play = function(e) {
            FWDUVPlayer.curInstance = t, l.isPlaying_bl = !0, l.hasError_bl = !1, l.hasStarted_bl = !0;
            try {
                l.ytb.playVideo(), l.startToUpdate()
            } catch (e) {}
            l.isStopped_bl = !1
        }, this.pause = function() {
            if (!l.isStopped_bl && !l.hasError_bl) {
                l.isPlaying_bl = !1;
                try {
                    l.ytb.pauseVideo()
                } catch (e) {}
                l.stopToUpdate()
            }
        }, this.togglePlayPause = function() {
            l.isPlaying_bl ? l.pause() : l.play()
        }, this.resume = function() {
            l.isStopped_bl || l.play()
        }, this.startToUpdate = function() {
            clearInterval(l.updateVideoId_int), l.updateVideoId_int = setInterval(l.updateVideo, 500)
        }, this.stopToUpdate = function() {
            clearInterval(l.updateVideoId_int)
        }, this.updateVideo = function() {
            var e;
            if (l.ytb) {
                l.allowScrubing_bl || (e = l.ytb.getCurrentTime() / l.ytb.getDuration(), l.dispatchEvent(s.UPDATE, {
                    percent: e
                }));
                var t = l.formatTime(l.ytb.getDuration()),
                    o = l.formatTime(l.ytb.getCurrentTime());
                l.dispatchEvent(s.UPDATE_TIME, {
                    curTime: o,
                    totalTime: t,
                    seconds: parseInt(l.ytb.getCurrentTime()),
                    totalTimeInSeconds: l.ytb.getDuration()
                })
            } else stopToUpdate()
        }, this.startToPreload = function() {
            clearInterval(l.preloadVideoId_int), l.updatePreloadId_int = setInterval(l.updateProgress, 500)
        }, this.stopToPreload = function() {
            clearInterval(l.updatePreloadId_int)
        }, this.updateProgress = function() {
            if (l.ytb) {
                var e = l.ytb.getVideoLoadedFraction();
                l.dispatchEvent(s.LOAD_PROGRESS, {
                    percent: e
                })
            } else stopToPreload()
        }, this.stop = function() {
            l.isStopped_bl || (l.isPlaying_bl = !1, l.isStopped_bl = !0, l.hasStarted_bl = !1, l.isCued_bl = !1, clearInterval(l.setSourceId_int), l.allowScrubing_bl = !1, l.isSafeToBeControlled_bl = !1, l.isQualityArrayDisapatched_bl = !1, l.isPausedInEvent_bl = !0, l.stopToUpdateSubtitles(), l.stopToUpdate(), l.stopToPreload(), l.stopVideo(), l.dispatchEvent(s.STOP), l.dispatchEvent(s.LOAD_PROGRESS, {
                percent: 0
            }))
        }, this.destroyYoutube = function() {
            l.videoHolder_do && (l.videoHolder_do.screen.removeAttribute("id", t.instanceName_str + "youtube"), l.videoHolder_do.destroy(), l.videoHolder_do = null), l.ytb && l.ytb.destroy(), l.ytb = null
        }, this.stopVideo = function() {
            l.ytb.cueVideoById(l.sourcePath_str)
        }, this.setPlaybackRate = function(e) {
            l.ytb && !l.isMobile_bl && (e && (l.rate = e), l.ytb.setPlaybackRate && l.ytb.setPlaybackRate(Number(l.rate)))
        }, this.stopToUpdateSubtitles = function() {
            clearInterval(l.startToUpdateSubtitleId_int)
        }, this.startToUpdateSubtitles = function() {
            clearInterval(l.startToUpdateSubtitleId_int), l.startToUpdateSubtitleId_int = setInterval(l.updateSubtitleHandler, 10)
        }, this.updateSubtitleHandler = function() {
            l.dispatchEvent(s.UPDATE_SUBTITLE, {
                curTime: l.ytb.getCurrentTime()
            })
        }, this.startToScrub = function() {
            l.isSafeToBeControlled_bl && (l.allowScrubing_bl = !0)
        }, this.stopToScrub = function() {
            l.isSafeToBeControlled_bl && (l.allowScrubing_bl = !1)
        }, this.scrubbAtTime = function(e) {
            l.isSafeToBeControlled_bl && l.ytb.seekTo(e)
        }, this.scrub = function(e) {
            l.isSafeToBeControlled_bl && l.ytb.seekTo(e * l.ytb.getDuration())
        }, this.setVolume = function(e) {
            null != e && (l.volume = e), l.ytb && (l.ytb.setVolume(100 * e), e && l.ytb.unMute())
        }, this.setQuality = function(e) {
            l.lastQuality_str = e, l.ytb.setPlaybackQuality(e)
        }, this.formatTime = function(e) {
            var t = Math.floor(e / 3600),
                o = e % 3600,
                s = Math.floor(o / 60),
                i = o % 60,
                n = Math.ceil(i);
            return s = 10 <= s ? s : "0" + s, n = 10 <= n ? n : "0" + n, isNaN(n) ? "00:00" : l.hasHours_bl ? t + ":" + s + ":" + n : s + ":" + n
        }, this.init()
    };
    s.setPrototype = function() {
        s.prototype = new FWDUVPDisplayObject("div")
    }, s.UPDATE_SUBTITLE = "updateSubtitle", s.READY = "ready", s.ERROR = "error", s.UPDATE = "update", s.UPDATE_TIME = "updateTime", s.SAFE_TO_SCRUBB = "safeToControll", s.LOAD_PROGRESS = "loadProgress", s.PLAY = "play", s.PAUSE = "pause", s.STOP = "stop", s.PLAY_COMPLETE = "playComplete", s.CUED = "cued", s.QUALITY_CHANGE = "qualityChange", e.FWDUVPYoutubeScreen = s
}(window),
function() {
    var l = function(e, t, o, s, i) {
        var n = this;
        l.prototype;
        this.text_do = null, this.hd_do = null, this.dumy_do = null, this.label_str = e, this.normalColor_str = t, this.selectedColor_str = o, this.hdPath_str = s, this.id = i, this.totalWidth = 0, this.totalHeight = 23, this.hdWidth = 7, this.hdHeight = 5, this.hasHd_bl = n.hdPath_str, this.isMobile_bl = FWDUVPUtils.isMobile, this.isDisabled_bl = !1, this.init = function() {
            n.setBackfaceVisibility(), n.setupMainContainers(), n.setHeight(n.totalHeight)
        }, this.setupMainContainers = function() {
            if (n.text_do = new FWDUVPDisplayObject("div"), n.text_do.setBackfaceVisibility(), n.text_do.hasTransform3d_bl = !1, n.text_do.hasTransform2d_bl = !1, n.text_do.getStyle().display = "inline-block", n.text_do.getStyle().whiteSpace = "nowrap", n.text_do.getStyle().fontFamily = "Arial", n.text_do.getStyle().fontSize = "12px", n.text_do.getStyle().color = n.normalColor_str, n.text_do.getStyle().fontSmoothing = "antialiased", n.text_do.getStyle().webkitFontSmoothing = "antialiased", n.text_do.getStyle().textRendering = "optimizeLegibility", n.text_do.setInnerHTML(n.label_str), n.addChild(n.text_do), n.hasHd_bl) {
                var e = new Image;
                e.src = n.hdPath_str, n.hd_do = new FWDUVPDisplayObject("img"), n.hd_do.setScreen(e), n.hd_do.setWidth(n.hdWidth), n.hd_do.setHeight(n.hdHeight), n.addChild(n.hd_do)
            }
            n.dumy_do = new FWDUVPDisplayObject("div"), FWDUVPUtils.isIE && (n.dumy_do.setBkColor("#FF0000"), n.dumy_do.setAlpha(1e-4)), n.dumy_do.setButtonMode(!0), n.dumy_do.setHeight(n.totalHeight), n.addChild(n.dumy_do), n.hasPointerEvent_bl ? (n.screen.addEventListener("pointerup", n.onMouseUp), n.screen.addEventListener("pointerover", n.onMouseOver), n.screen.addEventListener("pointerout", n.onMouseOut)) : n.screen.addEventListener && (n.isMobile_bl || (n.screen.addEventListener("mouseover", n.onMouseOver), n.screen.addEventListener("mouseout", n.onMouseOut), n.screen.addEventListener("mouseup", n.onMouseUp)), n.screen.addEventListener("touchend", n.onMouseUp))
        }, this.onMouseOver = function(e) {
            n.isDisabled_bl || (n.setSelectedState(!0), n.dispatchEvent(l.MOUSE_OVER, {
                e: e,
                id: n.id
            }))
        }, this.onMouseOut = function(e) {
            n.isDisabled_bl || (n.setNormalState(!0), n.dispatchEvent(l.MOUSE_OUT, {
                e: e,
                id: n.id
            }))
        }, this.onMouseUp = function(e) {
            n.isDisabled_bl || 2 == e.button || (e.preventDefault && e.preventDefault(), n.dispatchEvent(l.CLICK, {
                e: e,
                id: n.id
            }))
        }, this.setFinalSize = function() {
            if (0 == n.text_do.x) {
                var e = n.text_do.getWidth() + 34,
                    t = n.text_do.getHeight();
                n.text_do.setX(18), n.text_do.setY(parseInt((n.totalHeight - t) / 2)), n.hd_do && (n.hd_do.setX(e - 12), n.hd_do.setY(n.text_do.y + 1)), n.dumy_do.setWidth(e), n.setWidth(e)
            }
        }, this.updateText = function(e) {
            this.label_str = e, this.text_do.setInnerHTML(n.label_str), n.hd_do && ("highres" == n.label_str || "hd1080" == n.label_str || "hd720" == n.label_str || "hd1440" == n.label_str || "hd2160" == n.label_str ? n.hd_do.setVisible(!0) : n.hd_do.setVisible(!1))
        }, this.setSelectedState = function(e) {
            this.isSelected_bl = !0, FWDAnimation.killTweensOf(n.text_do), e ? FWDAnimation.to(n.text_do.screen, .5, {
                css: {
                    color: n.selectedColor_str
                },
                ease: Expo.easeOut
            }) : n.text_do.getStyle().color = n.selectedColor_str
        }, this.setNormalState = function(e) {
            this.isSelected_bl = !1, FWDAnimation.killTweensOf(n.text_do), e ? FWDAnimation.to(n.text_do.screen, .5, {
                css: {
                    color: n.normalColor_str
                },
                ease: Expo.easeOut
            }) : n.text_do.getStyle().color = n.normalColor_str
        }, this.disable = function() {
            n.isDisabled_bl = !0, FWDAnimation.killTweensOf(n.text_do), n.setSelectedState(!0), n.dumy_do.setButtonMode(!1)
        }, this.enable = function() {
            n.isDisabled_bl = !1, FWDAnimation.killTweensOf(n.text_do), n.setNormalState(!0), n.dumy_do.setButtonMode(!0)
        }, n.init()
    };
    l.setPrototype = function() {
        l.prototype = new FWDUVPDisplayObject("div")
    }, l.MOUSE_OVER = "onMouseOver", l.MOUSE_OUT = "onMouseOut", l.CLICK = "onClick", l.prototype = null, window.FWDUVPYTBQButton = l
}(window);